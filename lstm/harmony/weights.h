#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_CONV1D_KERNEL_0 {-19, 5, 30, 28, -16, -33, -25, 17, -1, -3, -4, 0, -16, -4, 5, 24, 1, 31, 1, 38, -6, -28, -8, 33, 42, -22, -29, -9, 25, -30, 7, 30, -18, -6, -12, 33, 3, 15, 28, 14, 10, -23, 14, -7, -36, -45, -21, 16, -19, -17, -5, -17, -28, -23, -10, 34, -35, 8, -19, -32, 12, -9, 1, -52, -11, -32, -3, 16, -4, 19, -7, 7, -23, -9, -5, 10, -8, -5, 22, -26, 11, -15, -10, 14, 18, -16, -37, -14, -3, -18, -12, -2, -5, -4, 2, -28, -12, 27, -19, -12, -13, 11, -25, -3, -33, 12, 20, 19, -20, -13, 22, 21, -4, 8, 0, -4, 17, -13, -8, -28, -19, -7, 20, 14, 33, 26, -38, 1, 29, -18, -15, 27, 30, 11, 15, -29, 34, -2, 7, -7, 34, -2, -6, 17, -2, -8, -9, 15, 10, 18, -11, -21, 25, -32, 1, 19, -1, 25, 10, -16, 26, -23, -18, 2, 34, 4, -60, -14, -19, -25, 0, -14, 1, 33, -5, 12, 7, 25, -40, -30, 17, 36, 31, -33, -31, -37, -21, 34, 25, 5, 40, 14, 7, -19, -53, -30, 11, -3, -55, 10, 1, -11, 9, -18, 3, 0, 47, -57, -20, 36, 11, -10, -13, -3, -31, -28, -54, 12, -2, -38, 41, -8, 32, 6, -26, -21, 34, 14, -12, 40, -51, -14, -22, 39, -19, -33, 16, -25, 5, 30, -34, 15, -27, -45, -21, 3, 33, -2, -64, -17, 55, 48, -34, -28, 12, -52, -59, -29, 61, 55, -47, -40, -30, -30, -9, -69, -107, 41, -22, 37, -50, -15, 56, -43, 48, -45, -6, 62, 53, 18, 2, -2, 9, -3, 22, 19, 5, -15, -34, 29, 74, -36, 72, 17, -44, -17, -8, -26, 0, -7, -23, 13, -19, -36, 1, -66, -41, 29, -8, 13, 11, -41, 61, -32, -71, 38, -45, 36, -60, 64, -25, -68, -62, 0, 5, -25, 3, -9, -7, -15, -3, 13, -17, 13, -27, -1, -22, -1, 16, 13, -13, -22, 5, 0, -6, -8, -33, -5, -25, 3, 25, -2, 13, 28, 22, -2, 10, -8, 9, -23, -13, 19, 25, -21, 8, 26, 14, 22, 23, -2, 38, -19, -9, -32, 13, 16, 27, 15, 22, 11, -12, 13, -12, 13, 3, 31, 0, 2, 41, 29, 7, 3, 17, -29, 13, 23, -22, 34, 20, 13, 16, 7, -21, 3, 7, 6, -32, 38, -4, -15, -71, -13, 30, 11, -34, 6, 10, -28, -27, 9, -57, -18, -2, 6, 24, -27, 38, -44, -1, -50, -2, -10, -65, 16, -6, -39, 47, -23, -50, 50, -53, -13, -32, 25, -48, -10, -69, -39, 18, 32, -21, -30, -46, 8, 3, -58, 67, 7, -7, -21, -31, 20, -17, 49, -11, 61, -2, 44, -46, -27, -63, -49, 9, -16, 33, -13, -71, -58, 42, -43, 49, -6, -36, 34, -43, 40, -8, -16, 47, 0, -10, 23, -71, 30, -38, 28, 19, -54, -8, 5, 23, -59, 31, 11, 33, 28, 14, -20, 11, 12, -8, -8, 29, 68, -29, 22, 38, 67, 63, -47, -38, 18, -7, -24, -14, 58, 72, -14, -40, -26, -14, -64, 39, -12, -10, 78, -15, -47, -6, -67, -22, -53, 28, 3, -4, -36, 32, -43, 0, 2, -12, -51, 2, 47, 3, 33, 34, 14, -7, -41, -39, -11, -27, 20, 42, -12, 21, 52, -71, 20, -40, -31, -6, 72, 9, -73, -42, -12, 8, -1, -52, 49, 34, -57, 35, -8, -59, 9, -64, -68, -61, -13, -2, -18, -53, 27, -6, 1, -15, 28, -8, 8, 32, -4, -56, -5, 17, -17, 35, 8, -42, -32, -52, 15, 25, 4, -65, 19, -26, 43, 26, 14, 21, -2, 6, 2, 51, -11, 26, -23, -4, 32, -8, -19, 16, 56, -29, -59, 32, 12, 22, 42, 78, 26, 7, -71, 34, 24, 10, 36, 25, -33, 11, 25, 7, 6, 20, 26, 3, 52, -23, -1, -30, -1, -34, -2, -68, -39, -21, -14, 32, 42, -19, -34, 38, 20, 21, 11, 29, -23, -37, -37, -42, -8, -11, -67, -11, 8, 29, -1, -59, 39, -23, -30, -22, -5, 42, -20, 8, -5, 5, -26, -10, -17, 0, 1, 55, 28, -32, -22, -16, -49, -16, -15, 1, 54, -41, 5, 35, -9, -48, 1, 16, -12, 16, -19, -4, -49, 48}

#define TENSOR_CONV1D_KERNEL_0_DEC_BITS {5}

#define TENSOR_CONV1D_BIAS_0 {-61, 7, 44, 10, 25, 4, 125, 38, 116}

#define TENSOR_CONV1D_BIAS_0_DEC_BITS {6}

#define CONV1D_BIAS_LSHIFT {6}

#define CONV1D_OUTPUT_RSHIFT {8}

#define TENSOR_LSTM_LSTM_CELL_KERNEL_0 {34, 52, -35, 42, -45, 33, 27, 42, 15, 37, -10, 10, 23, -43, -73, -29, 19, 67, -2, 11, -2, 24, 6, -15, -19, 13, 12, 65, -58, 17, -7, -64, 17, 56, -63, -38, 8, -26, -25, -38, -61, -70, -22, 34, 28, -29, 24, 9, -4, -54, -6, 6, 46, 22, 40, 48, 10, -27, 41, -61, -13, 25, 44, -41, -92, 21, 2, -48, 60, 9, -37, -56, -10, -55, -7, 27, -41, -14, 35, -31, -31, 71, 35, 66, -45, 60, 17, 48, -9, 36, -11, 22, -70, 2, -1, -22, 3, 49, -28, -10, -10, 25, -63, -11, 32, -11, -54, 25, -49, 77, 16, 41, 29, 62, -14, 73, -32, 36, 12, 46, 52, 34, -32, -13, -33, -5, 9, 53, -55, 46, 0, 99, -58, -34, 17, -16, 33, 35, -15, 74, -44, 77, -14, 97, 9, -2, -14, 54, -21, -46, 37, 29, -36, -77, 4, -25, 57, -76, -13, -31, -41, 13, 11, -5, -24, -9, 59, 6, 46, 54, 52, -38, -12, -38, -3, -70, -20, 19, 79, -46, 4, -78, -32, 25, 0, -30, 49, -25, -81, -32, -62, 0, -54, -40, 21, -4, -4, 70, -44, -36, 3, 6, -71, -38, -27, -51, 10, 88, -22, -45, 22, -18, -57, -45, -33, -36, 15, 61, -32, -61, 30, -26, -35, 16, 11, -23, -15, -29, 21, -22, -67, 0, -52, 13, -14, -50, -21, 9, -65, 58, -18, -33, 23, -21, -67, 50, 65, 27, -54, -26, -56, 49, 77, -4, 9, 15, -2, 16, -14, 4, 52, 78, 55, 56, 30, 13, 0, 61, -10, -41, 1, -34, 4, -6, -46, 16, 16, 51, -7, 3, -5, -47, -40, -37, -25, 29, -50, 57, 27, -6, 6, -24, 21, 36, -22, -28, 43, 42, 19, 43, 55, -30, -27, -42, -34, 70, -29, 26, -6, 35, -61, -18, -12, 24, 7, 49, -52, 60, 16, -13, 15, -31, 9, -13, -21, -48, 22, 50, 56, 55, 31, 51, 21, -28, 42, 8, 105, -8, 43, -15, -22, -16, 42, 9, -39, 16, -15, -73, -24, 25, -9, 84, -65, -72, 7, 1, 52, 26, 50, 20, -58, 1, 16, 71, 5, 51, 1, -39, 8, 42, -52, 51, -49, 37, -50, 57, 7, -17, -47, 48, -3, 6, -7, -1, 56, 50, 31, -4, -52, -2, 43, 5, 6, -15, -54, -11, -65, 40, -17, 48, 23, -22, 66, -4, -20, 111, -13, 71, -17, -27, 30, 50, 37, 10, -47, 64, 11, -22, -32, 15, 25, -62, 78, -28, -52, -11, 67, 10, 25, 49, -11, -53, 4, -32, -34, 17, 24, 26, -43, -20, 1, -24, -21, 26, 41, 12, 17, 44, 14, 21, 30, -57, 34, -53, -34, -11, 43, -57, 44, 14, -36, -7, -21, 44, 18, -67, -18, 45, 40, 60, -11, -15, 39, -63, 17, 66, -7, -14, 62, 54, -46, -67, 50, 26, 11, 44, 5, -81, 18, 64, -60, -69, -38, -26, 27, 6, -28, -42, -22, 3, -31, -47, 20, -52, -23, -4, 17, -37, 37, 6, 39, -18, -47, -13, 50, 25, -9, -23, 55, -10, 4, 24, -60, -74, -48, -18, 49, -17, -23, -55, 0, 1, -19, 2, 57, 32, 53, 29, 11, 11, 47, -53, -7, -45, 6, 25, 51, -69, 4, -34, 34, 40, -3, 64, 66, 53, -11, 35, 5, -17, -54, -30, 35, -22, 38, -33, 0, 45, 21, -37, 88, -38, -33, 3, 89, -17, 46, 0, -44, 23, -35, -7, -26, -8, -35, 47, 30, 6, -24, -6, -36, 30, -46, 53, -11, 49, -29, -21, 14, -23, -17, -22, -19, 70, -21, -35, 59, -20, 11, -15, 14, -41, 5, 7, 16, -39, -3, 5, 45, -34, 2, -25, 53, 32, -26, 5, 16, -17, -1, 12, -9, 34, -3, -72, 38, -49, 41, -12, 75, -61, -65, 29, 16, 44, 59, -63, -68, -43, -16, -35, -2, -28, -3, -9, -29, -21, 16, -26, -49, 31, -12, 40, -12, 10, -20, 33, -16, 13, -14, 5, 37, 40, 49, 34, -59, 2, 44, 43, -19, 10, -18, 16, -42, 23, 2, -45, -3, 10, -58, -55, -42, -44, -2, 29, 71, 47, -52, -25, 4, 32, -12, 36, 50, 39, 10, 12, 4, -25, -45, -13, 30, 73, -41, -21, 14, -51, 18, 37, -45, -64, 2, 65, -61, -60, -26, -57, 9, 57, 24, 1, 55, -37, 21, 25, -39, -5, -4, -63, -67, -7, 48, -28, -20, 26, -61, 21, -11, -1, 31, 58, -21, 47, -36, 30, -29, 26, -26, -38, -60, 27, 53, -1, 29, 29, -3, -35, -49, 27, -14, -73, -23, 19, 39, 62, -41, -1, -16, -5, 22, -72, -14, -37, -47, 41, -41, 21, -15, -1, -25, 14, -9, -15, 33, 6, 55, 32, 19, 34, 39, 33, -31, -39, 30, 65, 49, 28, 28, -5, 65, 11, 20, 9, 33, -37, -61, -36, 45, 15, 0, -35, -25, 2, 30, 31, 22, -18, -37, -4, 50, -44, -26, 53, 53, 36, 21, 15, -34, 46, -55, -5, 45, -44, 81, -22, 41, 30, -17, -7, -8, -21, -4, -48, -28, -21, -34, -60, 16, -34, -51, 40, 31, 2, -48, -59, 42, -9, -50, 1, 34, -49, 6, 62, 5, -6, -35, 86, 13, -7, 16, 52, -23, 41, 0, -13, 63, -21, -79, 49, 18, -13, -14, 23, -59, -3, 94, -43, 47, 49, 6, 82, 22, -36, -8, 50, -24, 47, 35, -36, 17, -16, 67, 19, 72, 24, 60, 26, -3, 24, -38, 8, -15, 36, 8, -64, -23, 25, 14, -36, -49, -48, 65, 13, 85, 78, 46, -33, -47, 11, 3, -6, -39, -31, 16, 25, -36, 12, -20, 93, -27, 5, 4, 83, 62, 19, -6, 36, -27, -20, -90, -32, 73, -8, -58, 37, -54, 10, -13, 15, -26, -16, -16, 0, -16, -8, 55, -63, -55, 55, 46, 32, -8, 32, 39, -8, 25, 74, -12, 61, -41, 1, 12, -62, 7, -18, -68, -40, -9, -47, 17, 7, -60, -7, 73, 71, -11, 47, 18, 39, -41, -14, 65, 46, 21, -56, 19, -39, 60, 15, 9, 54, 63, -20, 86, 41, -26, -24, -53, -82, -17, 57, 7, -10, -9, 35, -2, -14, 22, 14, 69, -7, 36, -48, 92, 75, 9, -59, -4, 12, -39, -64, 21, -18, -7, -11, 30, 17, 11, -58, 87, 17, -6, 47, -94, -61, 69, 18, -66, -38, -58, 5, 95, 22, 18, 33, 60, -36, 5, -57, 0, -57, 30, -16, 48, -39, 20, 2, -20, -13, 41, -30, 58, 18, 9, 53, 54, 0, -33, -21, -27, -35, -45, 16, -47, -18, 25, -32, 73, 69, 9, -88, 71, 100, 20, 2, 39, 0, 50, -28, -15, 46, 9, 51, 10, 3, -9, 14, 36, 53, 53, -25, 56, -28, 29, 49, -40, -6, 19, -26, -71, -11, 1, 10, 32, 64, -38, -76, 61, 23, -28, 40, 35, 62}

#define TENSOR_LSTM_LSTM_CELL_KERNEL_0_DEC_BITS {8}

#define TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0 {}

#define TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0_DEC_BITS {8}

#define TENSOR_LSTM_LSTM_CELL_BIAS_0 {4, 5, 6, 2, 3, 7, 1, 3, 3, 2, 3, 5, 5, 1, 5, -1, 6, 3, 4, 5, 3, 3, 8, 5, 4, 5, 2, 6, 3, 5, 4, 4, 68, 67, 72, 67, 66, 72, 69, 74, 67, 68, 68, 67, 69, 66, 68, 68, 70, 70, 69, 72, 74, 70, 73, 67, 70, 70, 71, 70, 68, 69, 71, 68, 2, 2, -1, -1, 2, -1, 3, 1, -2, -2, -1, -2, 3, 2, 1, 1, 3, -2, 1, 0, -3, 2, -1, 4, 0, -2, -1, 4, -2, -1, 2, 3, 6, 9, 8, 5, 6, 10, 3, 8, 6, 6, 6, 6, 6, 5, 6, 4, 6, 6, 7, 8, 8, 8, 10, 7, 7, 8, 7, 8, 2, 7, 7, 5}

#define TENSOR_LSTM_LSTM_CELL_BIAS_0_DEC_BITS {6}

#define LSTM_BIAS_LSHIFT {6}

#define LSTM_OUTPUT_RSHIFT {5}

#define TENSOR_DENSE_KERNEL_0 {-7, 49, -10, -27, -8, -12, 31, -40, -7, 28, 1, 37, -36, 35, -20, -46, 18, 6, 47, 46, 17, 38, -19, -43, -8, 8, 25, 38, -33, -35, 27, 14, -27, -25, -3, -50, -38, 36, -14, 28, -53, -42, -41, -24, -10, -11, -16, 11, 38, 8, 62, 34, -27, -1, -2, 3, -58, -3, 12, -16, -7, -17, -33, 15, -17, 44, 1, -22, -10, -37, -19, 39, 29, -34, 37, 32, 34, 20, -8, -4, -35, -41, -44, -12, -14, 17, -14, 8, 8, 51, -23, 33, 2, -43, 37, 22, 34, -4, 25, 0, -5, -30, 38, 11, 13, -27, 26, 41, -33, -28, -17, 2, 43, 9, 10, 43, -20, 7, 25, -49, -46, -14, 4, 3, 21, 50, 2, 2, 22, 42, 41, 18, 15, 24, -19, -4, 2, 11, 45, -20, -18, -14, -6, -37, 7, 3, 7, 10, 7, 20, 30, -21, -7, -41, -32, 6, -21, 53, -48, -6, 14, 29, 18, -38, -39, -18, -63, 19, -52, -15, -46, -17, -40, -5, -47, -31, 47, -5, 41, -12, 41, 41, 10, -19, 16, -24, 43, 45, -46, -16, 3, 17, -26, 17, 15, 1, 9, -34, 18, 4, 9, 17, -2, 11, 13, -46, 23, -29, -39, -36, 31, 15, -53, -29, -44, 1, -24, -8, 13, -30, -11, 29, -4, 7, 31, 2, 45, -38, 7, 38, 36, -26, 25, 19, -5, 45, 4, 40, 50, 16, -13, -13, 32, 12, 2, -45, -31, 30, -17, -40, -4, 14, -29, 37, 23, -32, 2, 22, 57, -10, 12, -30, 12, -34, -12, 29, 40, 53, 22, 15, -19, 26, 19, 48, 18, -40, -3, -42, 38, 17, 30, 29, 15, -13, -16, 1, 12, 23, -17, -28, 18, 12, 25, -44, 36, 10, -26, 13, 39, 6, -24, -10, 4, 12, -42, 12, 33, -41, -47, 27, 0, 9, -2, 31, -29, -5, 31, 20, -33, -29, -30, 15, 9, -11, 35, 12, -41, -6, 57, -15, -26, -41, 43, 36, -14, -21, 22, 51, 17, 43, 61, -31, 31, -59, -6, -70, 15, 12, 34, 42, 4, -4, -4, -26, 20, -29, -52, -9, 9, 6, 11, -21, -53, 11, -40, 19, 28, 46, -12, 24, -33, 19, -6, -1, 19, 13, 48, 2, -9, 22, 0, -2, 4, 51, 35, 0, -41, 24, 47, -58, -17, -39, 29, 5, -42, 6, 28, 18, 4, -29, 28, -18, -26, 5, 23, -16, -65, 17, -27, 19, -17, -10, 0, -44, 29, -18, 25, -24, 51, -23, -10, 24, -30, 25, 11, 13, 43, 32, 28, -27, -16, 17, 21, 21, -2, 18, -39, 25, 15, 32, -9, 18, 4, -20, -50, 32, -40, 12, -39, 17, 24, 32, 19, -49, 22, 56, -28, -35, 45, 6, -17, -50, 21, 44, 11, -23, 32, -27, 7, -21, -3, -25, 13, 29, 20, 43, -53, -25, -10, -32, 33, 39, -32, 20, -4, 28, -17, 26, -48, 40, 32, -12, -20, 3, -1, -20, 17, -37, -51, 20, 26, 16, -4, 8, 30, 43, -18, 23, -22, -9, 10, 2, -38, 9, -13, 42, 45, 3, -48, 62, -9, 45, -5, -34, -8, 45, -27, 50, -25, 17, -28, 30, -1, -29, -17, 8, 35, 17, -26, 3, 25, -18, 2, 48, -28, 50, 23, 3, -13, 17, -11, 13, -42, 14, -41, -2, 30, -18, -24, 32, -16, 21, 33, -10, 11, -12, -53, 39, -20, -44, 31, -9, 31, 10, 9, -40, 16, -59, 3, 56, -2, -7, -25, 1, -53, -16, -5, 55, 6, 56, -6, 19, -5, -10, 5, -45, 23, 13, 14, -3, 38, 21, 45, 5, 35, 12, 28, -22, 5, -9, -25, -25, -46, -39, -49, 43, -12, 2, -19, 7, -18, 41, 16, -60, -2, -39, -20, 17, 11, 0, 35, 18, 2, 41, -18, 16, -51, 7, 51, -36, 52, 21, 18, 13, 34, 32, 28, 15, 40, 38, 39, 10, 12, 14, -8, -54, 25, 21, 10, 11, -57, 23, 22, -15, -29, 26, 50, -48, 15, -51, -37, -21, 0, -40, 53, 0, 4, 33, -35, 7, 10, -25, -10, 12, 4, -10, 24, 15, -34, 41, -51, 20, 12, 47, 15, 50, 2, -3, -41, 3, 40, -31, 23, 51, 54, 27, -40, -24, -32, -27, -7, 14, 11, 22, -54, -35, 10, -8, -25, -6, 56, -7, 36, 5, -8, -58, 28, -35, 18, 23, 13, 43, -29, 42, 32, 32, -46, -21, 31, 20, 39, -27, -1, 10, -6, 33, 11, 13, 40, 21, 37, 11, 11, -19, -33, -50, -24, -5, -10, 12, -47, 31, -12, -28, -15, -3, 32, 31, 17, -9, 43, 61, 40, -14, -37, 57, 23, 11, -13, -38, 24, -4, -30, 44, -10, -20, -11, 8, 47, 19, 37, -3, -1, -7, 25, 12, -37, -16, 24, 32, 17, 21, 48, 25, 44, -8, 8, 26, -15, 54, 43, 65, 29, 2, -17, 51, -14, -6, 6, 24, -22, 35, -24, 1, -4, -23, -30, -9, -32, 45, 32, -57, -6, 22, -47, 46, -14, 18, 26, -5, 41, 27, -34, 24, 18, -8, 20, -54, 22, -9, 30, 33, -1, 13, -47, 69, 25, -9, -20, 30, 56, 2, -7, 24, 19, 34, 14, 37, 31, -5, -5, -14, 13, -25, -39, -7, -40, -44, 4, -49, 22, -61, -46, -42, -2, -16, 1, -36, 22, 40, 11, -59, 31, 31, 16, -46, 6, 43, 16, -13, 14, -17, 2, 39, 9, 11, -31, 25, 15, -22, -26, -22, 28, 33, 25, -25, 56, 36, -62, -20, 30, -8, 14, -14, -62, 13, -3, 27, -38, -27, -2, -7, 31, 43, 5, 12, -34, -24, -60, 7, 33, 12, 33, 6, 0, 8, -57, -8, 19, 45, 16, 46, 25, -33, -53, -26, -24, 31, 2, -12, 25, 32, -31, -31, -20, 22, 47, 46, 13, -1, -26, 17, -3, -17, 53, 32, 13, 5, -16, 2, -3, -12, -13, 26, 28, -64, -30, -25, -32, 46, 38, 46, -54, 14, -8, 5, -12, 5, -47, -18, -29, -25, 61, 44, -32, 36, 50, -5, -30, 49, 25, -32, 49, -33, -5, 28, -20, 27, 29, 17, -7, 32, 27, -42}

#define TENSOR_DENSE_KERNEL_0_DEC_BITS {7}

#define TENSOR_DENSE_BIAS_0 {7, 64, 8, 70, 49, -12, 38, 37, 11, 87, 85, 75, 90, 5, -11, 33, 19, 31, 37, 26, 107, -16, 32, 120, 23, 43, 76, 96, 79, 15, 108, 124}

#define TENSOR_DENSE_BIAS_0_DEC_BITS {10}

#define DENSE_BIAS_LSHIFT {4}

#define DENSE_OUTPUT_RSHIFT {10}

#define TENSOR_DENSE_1_KERNEL_0 {-46, -63, -2, -35, -65, 24, 45, -31, 37, -12, -61, 50, -10, 44, -8, -32, -27, -20, -47, -28, -59, 57, -53, 47, -16, -36, 6, -20, -59, -7, 25, 42, -36, -26, 51, 27, 71, 11, 10, -66, 14, 49, 53, -49, 9, -17, -68, 51, -46, 15, -41, 44, -65, -46, -68, -28, -40, -5, -18, 6, -41, 30, -49, 18, 26, 13, 60, 19, -21, 59, -67, -28, -70, -39, -58, -45, -22, -17, 46, -8, 40, 46, -31, -44, 42, -59, -60, 22, -44, 14, -72, -37, 22, 44, 5, 0, -49, 4, 38, -51, 64, -56, -56, -15, -9, -30, -40, 26, 85, 0, 51, -43, 43, 11, -20, 42, -7, -9, -65, 5, 3, 55, -72, -45, 3, -40, 8, 42, 27, 40, 44, -18, 37, 32, 35, -29, 8, -13, -75, 24, -49, -14, 29, -66, -59, -28, 20, 19, -51, -16, -29, 13, -52, -3, 36, -49, 1, 37, 39, 27, -62, -65, -42, 44, -19, -72, -21, 10, -29, -44, -16, -12, 57, 12, -31, 54, -20, 12, -39, -31, -16, -11, -35, 25, 17, 76, 48, -37, -70, -9, 53, 63}

#define TENSOR_DENSE_1_KERNEL_0_DEC_BITS {7}

#define TENSOR_DENSE_1_BIAS_0 {85, -19, 5, 8, -59, -19}

#define TENSOR_DENSE_1_BIAS_0_DEC_BITS {10}

#define DENSE_1_BIAS_LSHIFT {1}

#define DENSE_1_OUTPUT_RSHIFT {8}


/* output q format for each layer */
#define INPUT_1_OUTPUT_DEC 7
#define INPUT_1_OUTPUT_OFFSET 0
#define CONV1D_OUTPUT_DEC 4
#define CONV1D_OUTPUT_OFFSET 0
#define BATCH_NORMALIZATION_OUTPUT_DEC 4
#define BATCH_NORMALIZATION_OUTPUT_OFFSET 0
#define LSTM_OUTPUT_DEC 7
#define LSTM_OUTPUT_OFFSET 0
#define DENSE_OUTPUT_DEC 4
#define DENSE_OUTPUT_OFFSET 0
#define RE_LU_OUTPUT_DEC 4
#define RE_LU_OUTPUT_OFFSET 0
#define DROPOUT_OUTPUT_DEC 4
#define DROPOUT_OUTPUT_OFFSET 0
#define DENSE_1_OUTPUT_DEC 3
#define DENSE_1_OUTPUT_OFFSET 0
#define SOFTMAX_OUTPUT_DEC 7
#define SOFTMAX_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[1152] = {0};

const nnom_shape_data_t tensor_input_1_dim[] = {128, 9};
const nnom_qformat_param_t tensor_input_1_dec[] = {7};
const nnom_qformat_param_t tensor_input_1_offset[] = {0};
const nnom_tensor_t tensor_input_1 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_input_1_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_input_1_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_input_1_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};

const nnom_io_config_t input_1_config = {
    .super = {.name = "input_1"},
    .tensor = (nnom_tensor_t*)&tensor_input_1
};
const int8_t tensor_conv1d_kernel_0_data[] = TENSOR_CONV1D_KERNEL_0;

const nnom_shape_data_t tensor_conv1d_kernel_0_dim[] = {9, 9, 9};
const nnom_qformat_param_t tensor_conv1d_kernel_0_dec[] = TENSOR_CONV1D_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_kernel_0 = {
    .p_data = (void*)tensor_conv1d_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};
const int8_t tensor_conv1d_bias_0_data[] = TENSOR_CONV1D_BIAS_0;

const nnom_shape_data_t tensor_conv1d_bias_0_dim[] = {9};
const nnom_qformat_param_t tensor_conv1d_bias_0_dec[] = TENSOR_CONV1D_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_bias_0 = {
    .p_data = (void*)tensor_conv1d_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv1d_output_shift[] = CONV1D_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv1d_bias_shift[] = CONV1D_BIAS_LSHIFT;
const nnom_conv2d_config_t conv1d_config = {
    .super = {.name = "conv1d"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv1d_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv1d_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv1d_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv1d_bias_shift, 
    .filter_size = 9,
    .kernel_size = {9},
    .stride_size = {3},
    .padding_size = {0, 0},
    .dilation_size = {1},
    .padding_type = PADDING_SAME
};
const int8_t tensor_lstm_lstm_cell_kernel_0_data[] = TENSOR_LSTM_LSTM_CELL_KERNEL_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_kernel_0_dim[] = {9, 128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_kernel_0_dec[] = TENSOR_LSTM_LSTM_CELL_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_kernel_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_lstm_lstm_cell_recurrent_kernel_0_data[] = TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_recurrent_kernel_0_dim[] = {32, 128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_recurrent_kernel_0_dec[] = TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_recurrent_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_recurrent_kernel_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_recurrent_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_lstm_lstm_cell_bias_0_data[] = TENSOR_LSTM_LSTM_CELL_BIAS_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_bias_0_dim[] = {128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_bias_0_dec[] = TENSOR_LSTM_LSTM_CELL_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_bias_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_bias_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_lstm_cell_config_t lstm_lstm_cell_config = {
    .super = {.name = "lstm"},
    .weights = (nnom_tensor_t*)&tensor_lstm_lstm_cell_kernel_0,
    .recurrent_weights = (nnom_tensor_t*)&tensor_lstm_lstm_cell_recurrent_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_lstm_lstm_cell_bias_0,
    .q_dec_z = 4,
    .q_dec_h = 7,
    .q_dec_c = 3,
    .units = 32
};

const nnom_rnn_config_t lstm_config = {
    .super = {.name = "lstm"},
    .return_sequence = false,
    .stateful = false,
    .go_backwards = false
};
const int8_t tensor_dense_kernel_0_data[] = TENSOR_DENSE_KERNEL_0;

const nnom_shape_data_t tensor_dense_kernel_0_dim[] = {32, 32};
const nnom_qformat_param_t tensor_dense_kernel_0_dec[] = TENSOR_DENSE_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_kernel_0 = {
    .p_data = (void*)tensor_dense_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_bias_0_data[] = TENSOR_DENSE_BIAS_0;

const nnom_shape_data_t tensor_dense_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_dense_bias_0_dec[] = TENSOR_DENSE_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_bias_0 = {
    .p_data = (void*)tensor_dense_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_output_shift[] = DENSE_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_bias_shift[] = DENSE_BIAS_LSHIFT;
const nnom_dense_config_t dense_config = {
    .super = {.name = "dense"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_bias_shift
};
const int8_t tensor_dense_1_kernel_0_data[] = TENSOR_DENSE_1_KERNEL_0;

const nnom_shape_data_t tensor_dense_1_kernel_0_dim[] = {32, 6};
const nnom_qformat_param_t tensor_dense_1_kernel_0_dec[] = TENSOR_DENSE_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_kernel_0 = {
    .p_data = (void*)tensor_dense_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_1_bias_0_data[] = TENSOR_DENSE_1_BIAS_0;

const nnom_shape_data_t tensor_dense_1_bias_0_dim[] = {6};
const nnom_qformat_param_t tensor_dense_1_bias_0_dec[] = TENSOR_DENSE_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_bias_0 = {
    .p_data = (void*)tensor_dense_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_1_output_shift[] = DENSE_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_1_bias_shift[] = DENSE_1_BIAS_LSHIFT;
const nnom_dense_config_t dense_1_config = {
    .super = {.name = "dense_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_1_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_1_bias_shift
};

const nnom_softmax_config_t softmax_config = {
    .super = {.name = "softmax"}
};
static int8_t nnom_output_data[6] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {6};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[8];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&input_1_config);
	layer[1] = model.hook(conv2d_s(&conv1d_config), layer[0]);
	layer[2] = model.hook(rnn_s(lstm_cell_s(&lstm_lstm_cell_config), &lstm_config), layer[1]);
	layer[3] = model.hook(dense_s(&dense_config), layer[2]);
	layer[4] = model.active(act_relu(), layer[3]);
	layer[5] = model.hook(dense_s(&dense_1_config), layer[4]);
	layer[6] = model.hook(softmax_s(&softmax_config), layer[5]);
	layer[7] = model.hook(output_s(&output0_config), layer[6]);
	model_compile(&model, layer[0], layer[7]);
	return &model;
}
