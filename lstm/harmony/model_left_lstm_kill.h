#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_LSTM_LSTM_CELL_KERNEL_0 {26, 11, -32, -48, 17, 33, 48, 50, 37, 49, -25, -50, -33, 43, -22, -21, 3, -21, 22, -23, 47, 26, 44, 27, -53, -40, -61, -16, -26, -78, -7, -79, -2, -15, -5, 50, 28, -65, -44, 43, 24, -18, -24, -16, -4, -14, -6, -38, 23, 31, 22, 46, -76, -17, -34, -22, 26, 19, -7, -43, 55, -39, 15, 8, -54, -20, 0, 40, -29, -2, -32, -56, -12, -8, -38, 14, -83, -33, -34, -21, -8, 8, -6, -25, -46, -56, 50, -17, 14, 35, 4, -49, 41, 49, -25, -17, 10, -14, 29, 39, -52, -57, -40, -15, -10, 26, -32, -31, 0, 14, 19, 32, -31, -33, 34, -42, 5, 36, -16, -21, 31, -1, -5, 50, 70, -38, 4, -26, -17, 11, -2, -33, 23, -46, -63, 39, -42, -23, -15, -37, 20, 47, -40, 0, 6, 36, 11, 28, -25, -46, -3, -33, 56, 45, -33, -43, -27, -33, -18, 43, -14, 24, 35, -35, 49, 23, -8, -21, 5, -95, 5, 15, -77, 13, -21, 33, 6, 58, -30, 3, -60, -3, 49, 0, 21, -74, 39, -43, 44, 9, -39, 33, -35, 16, -3, -70, -23, 36, 52, 31, 61, -10, -21, -28, -5, 61, -21, 0, 43, -35, -12, -5, -11, -25, 30, 3, -24, -17, 5, -23, 7, 25, 0, -36, 37, -1, -17, 40, 1, 23, 16, -15, -22, -56, -9, 0, 3, 20, -50, -20, -1, -22, 19, 8, -91, 44, -18, 7, -48, 16, 7, -10, 85, 16, -27, -24, 3, -1, -7, 14, -51, -13, 23, 25, 12, 6, 24, 5, 6, -21, -45, -20, 38, 6, -5, 17, 1, 29, -12, -17, 31, -17, 24, 11, -19, 29, -22, -24, -9, -26, 74, 27, -14, 34, -32, -21, -24, 34, 4, 28, 61, 57, -13, -7, -7, -22, 26, -4, -13, -2, 4, -9, 7, -23, -1, 33, -3, -18, -33, 13, 0, -54, -26, -32, -11, -12, 4, -19, -13, 28, 36, -11, -1, 22, 33, 12, -39, 33, 19, 49, 26, 35, -12, 5, 18, -35, -4, -8, 56, -8, 3, -4, -41, 16, 13, 23, -3, 8, 10, -38, -29, -70, 1, 87, -8, -42, 4, 48, 50, 16, 2, 12, -21, 21, -40, -43, -11, -30, 6, -2, 26, -42, -10, 23, 15, -39, -19, 36, -16, -1, -26, -16, -22, -33, 12, 26, 22, 7, 14, -28, 33, 14, 19, 23, -22, 19, -33, 14, -25, 48, -40, -21, -11, 51, -23, 11, 21, 4, -23, 36, 17, 17, -29, -29, 16, -25, -13, 8, -15, 5, -4, 28, -58, -16, -24, -45, 51, 32, -15, -12, 19, 22, -8, 16, -16, -4, 19, 2, 42, 35, -17, -26, 26, -14, -33, 30, 19, 21, -36, -16, -9, -36, -48, -15, 30, 29, -37, 30, -17, -14, -4, -6, -36, -1, -3, 27, 21, 28, -24, -14, 11, 20, 24, 30, -13, 7, -38, 32, -15, 24, -24, -32, 4, -16, 36, 5, -25, 9, 25, -21, -43, -6, 24, -5, -1, 18, -1, -31, -21, 7, 49, 24, 6, -21, 32, -7, 6, -11, -16, -12, 0, 3, 3, 21, 1, -19, -30, -25, 3, 29, -10, 17, 24, -19, -28, 26, 22, 26, -28, -27, -36, -5, -3, -17, -27, 22, 27, -11, 31, -5, -15, 28, -26, -9, -6, 31, -22, -33, -44, -38, 3, -30, -26, -34, -18, 45, 7, 18, 8, 13, 22, 4, 28, -7, -20, -40, -21, 10, 55, -77, -12, 48, 46, 61, 37, 0, -29, -40, 6, 22, 20, -8, -3, -8, -12, 3, 11, 23, 24, 2, -27, -35, -5, -17, -14, -10, -12, -22, 42, 21, -7, 46, 26, 14, 11, 18, 7, -64, 19, 13, -20, -26, -9, -33, 20, 2, 1, 79, -64, 34, 5, -27, -22, 8, -1, -25, 69, 15, 11, -10, -42, -14, -19, 17, 8, -15, -43, -36, 28, -23, 18, 18, -29, -29, -50, -26, 46, -2, -40, 1, 0, -5, -20, -8, 4, -18, 23, -8, -8, 30, -29, -11, -30, -51, 16, 27, -44, 20, -13, -25, -37, 31, 6, -32, 49, 13, 23, -3, -3, -14, -23, -31, 0, 15, -4, -24, -14, -25, -8, 25, 19, -21, 31, 16, -51, 12, -40, -5, 7, 26, -76, -13, 8, -8, -25, -28, 1, 43, -34, -2, 0, 28, 13, 42, 33, 12, -8, -30, 18, -39, -36, 12, 20, -33, -17, 2, -28, 40, 29, 20, 28, -19, -25, -37, -34, -26, 35, 54, -42, -33, -19, 32, 10, 39, -11, -1, -49, 2, 11, 8, 4, -35, 41, -15, 11, -17, -8, -8}

#define TENSOR_LSTM_LSTM_CELL_KERNEL_0_DEC_BITS {7}

#define TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0 {}

#define TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0_DEC_BITS {7}

#define TENSOR_LSTM_LSTM_CELL_BIAS_0 {2, 3, 2, 6, 2, 2, 8, -1, 3, 3, 3, 0, 5, 0, 1, -2, 2, -3, 2, -1, 4, 1, 5, -4, 0, -1, 3, 0, -1, 4, 3, 3, 67, 72, 70, 72, 69, 66, 73, 68, 66, 69, 71, 69, 69, 64, 71, 63, 70, 61, 65, 66, 69, 66, 67, 63, 70, 67, 69, 66, 64, 66, 72, 66, -1, 1, 2, -2, 0, -2, -1, 2, 2, 2, 1, 0, -1, 1, -2, 1, -1, 3, -3, 1, 1, 1, 4, 0, -1, -2, -3, 2, -2, 3, -2, 1, 3, 6, 2, 3, 4, 3, 6, 1, 2, 3, 4, 1, 5, 1, 5, 0, 2, 1, 2, -1, 2, 2, 9, -3, 2, 1, 2, 1, 0, 12, 6, 4}

#define TENSOR_LSTM_LSTM_CELL_BIAS_0_DEC_BITS {6}

#define LSTM_BIAS_LSHIFT {8}

#define LSTM_OUTPUT_RSHIFT {7}

#define TENSOR_DENSE_KERNEL_0 {-14, 13, 19, -29, -18, 24, -32, 38, -45, -36, 13, -10, 56, -52, 10, 18, -33, 11, 19, 20, -20, 33, 3, -24, 55, -35, -25, 14, -31, -25, 29, 17, -16, 9, -20, 30, 17, -33, -38, 22, -3, -21, 35, -43, -9, -2, -15, -34, 32, 11, -33, -15, 2, 48, -55, -13, -4, -15, -23, 12, 44, 22, 7, -14, -28, -23, -40, 15, 26, 31, 42, -42, 21, 36, -14, 32, 7, 15, 9, -21, -13, 10, 40, -52, 47, 23, -19, 10, 27, 15, 29, 2, -20, -16, -35, -16, -11, -19, 25, -20, -22, 9, -31, -28, -40, -22, -6, -17, 35, 15, 8, -37, -17, -18, 34, -10, 9, -35, -7, 24, -26, 18, -20, -32, 22, -16, 44, -15, 3, 35, 36, -17, -15, 9, 43, -23, -20, 14, -19, 38, -54, 19, -28, -23, -16, 1, 15, -2, -1, 36, -19, 14, -10, 10, -31, -24, 18, 9, 39, 32, -55, 49, 13, 2, 5, 39, -25, -13, 28, -13, -14, -6, -28, 11, -24, 4, -11, -52, -27, -1, 12, 51, -25, 47, 33, 21, -19, 24, -1, -30, 17, 17, -14, 9, -42, -9, -7, -12, -27, -16, 8, -25, 38, 24, 37, -3, -23, 23, -10, 19, -11, -17, -11, 6, 34, -45, -27, 26, -20, 33, -15, -7, 33, -12, 16, -17, 7, -28, -28, 22, -32, 26, -1, -25, -15, 41, 6, -8, 30, 2, 25, -27, -8, -11, 3, -29, 33, 6, 2, -13, -38, 6, -12, 28, 20, -25, 11, -8, 19, -18, 5, -15, 21, -32, -15, 31, -36, 6, 9, -52, 24, 11, 41, 2, 6, -9, -1, -20, 11, 22, 6, -23, -21, 29, -5, 41, 1, -6, 7, 48, 21, -18, -36, -21, 19, -21, -20, -11, -9, -6, -24, -36, 24, 23, 37, -3, 11, 29, 26, 32, 39, 28, -37, -2, -26, 17, -21, 11, -26, -13, 24, -4, 7, 24, -5, -20, -39, -52, 12, 1, -27, -18, 47, 35, -6, 6, 22, 8, -38, -3, 21, -15, -24, -5, 30, 26, -20, 1, 28, -17, 17, -25, 45, 24, 26, -14, -17, 5, -8, -44, -41, 2, -1, 6, -38, -45, -35, 6, 8, 1, 18, 23, -39, -35, 41, -11, 27, -24, 17, 49, 32, 42, -22, -11, -40, 42, 24, -12, 9, 9, 27, -4, 38, 35, -31, 44, -25, 0, -34, 34, 2, 19, 0, -20, 28, 22, 21, -1, 11, -46, -7, -14, -17, -27, 23, -10, 12, 8, 10, -14, -2, 51, -1, -26, -31, 41, 36, -43, -29, -22, 44, -30, -49, -29, 19, 22, -25, -27, -10, -8, -10, -45, 5, 36, -31, -29, 19, 13, -25, -7, 3, -6, 23, -15, -17, 43, -35, -13, -20, -38, 25, 19, 5, 4, 6, -49, 4, -49, 16, -49, 48, -2, -28, 40, -20, -43, 10, 7, -6, 27, 17, -22, -4, 44, 7, 36, -24, 38, 8, 7, 20, 39, 6, 9, 5, -4, 33, 13, -31, -38, -15, -26, -19, -50, -37, -18, -21, -9, 18, -3, 12, 1, -28, -35, 0, -14, -32, -13, 43, -33, -28, 22, -34, 13, -21, -50, -11, -12, -23, 13, 6, 25, -35, 35, -5, 14, -25, 29, -9, 8, 44, 39, 39, 3, -30, 47, 37, -31, -19, -1, -1, -26, 39, 1, -42, -2, 23, -18, -27, -12, -22, -52, 14, -33, -7, 44, -39, 36, -41, 23, -16, -22, 6, 21, -8, 5, -23, -4, -61, 69, -36, -10, -3, -4, 39, -1, -18, -6, 20, -28, -12, 22, -28, 6, 26, 13, 46, 12, 21, -9, -30, -33, -33, -2, 21, 40, -12, 31, 37, -33, 19, -18, -45, 0, -6, -14, -31, 40, -9, -11, -20, -12, -27, 4, -34, 32, -4, 4, -10, 6, 38, 48, 11, 16, 16, 32, 0, -3, 19, -39, 15, -14, 10, 36, 39, 8, -6, -13, -35, -12, -35, -35, 40, 42, -10, 17, -1, 28, -20, -18, 4, -36, 29, -35, 23, -35, -41, -6, -1, -11, -1, -11, -22, -27, 21, 12, 20, 41, 24, -27, -14, 32, 31, 3, -7, 19, -41, 4, -13, 31, 47, 56, 5, -16, 26, -38, -19, -15, -32, 28, 16, 18, -16, 15, 40, 40, 5, -25, -20, 23, 43, 39, -26, 14, 7, 2, 32, -29, -32, -28, -39, -10, -45, 33, -41, 5, 9, 16, 40, 16, 30, -37, -17, -39, -37, -6, 13, -16, -9, -27, -11, 13, -30, 29, 10, 9, -32, 5, 27, 31, 9, 46, 3, -39, 52, 23, 16, 27, 21, -10, -11, -24, -35, -12, -16, -33, 40, 18, 17, 10, 16, -34, -18, 24, -10, 37, 23, 21, -38, 9, 13, -26, 30, 3, 19, 5, -16, 25, 41, -28, 22, 1, -35, -19, 17, 19, 21, -28, -21, 22, 21, 24, -5, 10, -5, -14, 26, -16, 34, -31, -28, -39, -26, -40, -40, 14, 12, 22, 20, 9, -10, 16, -31, 26, -23, 16, -28, -14, -37, 29, 3, 6, -16, 27, 6, 37, -7, -18, 33, -9, 28, 13, 15, -19, 2, 36, -6, -5, -45, -26, 20, -40, -1, -5, -22, 8, -14, 20, -12, -7, 32, 2, 14, 33, 16, 31, 38, 36, -8, -6, 6, -37, 25, -16, 30, 14, 26, 16, -17, -28, 27, 35, -15, -21, -20, -17, 15, 7, -3, 31, 50, -2, 27, -32, 42, 22, -2, -30, -13, 39, -33, 16, -31, -23, -11, -14, -33, 5, 16, -13, -1, 5, -17, 30, 18, 35, -17, 7, -41, -37, 26, 20, -24, -8, -3, -34, -16, -32, -56, -32, -34, -29, -5, 1, -38, 30, 9, 19, 5, 21, 0, 11, 10, -31, 12, -8, 36, 1, -46, -32, -4, -23, 3, -14, 7, 13, 4, -25, 30, -12, 23, -37, -17, -12, 37, 37, 46, 12, 39, -5, -10, -40, 14, -40, 41, 22, 5, -26, -4, 36, 42, -31, -16, 19, 16, 23, 8, 12, -25, -27, 8, -22, -43, 7, -42, -2, -14, -23, -7, 6, -14, 30, 20, -10, -22, 38, 36, -29, 24, -36, 43, 3, -26, 15, -62, -28, -22, -13, 5, 28, 0, 22, -24, 39}

#define TENSOR_DENSE_KERNEL_0_DEC_BITS {7}

#define TENSOR_DENSE_BIAS_0 {64, -33, 48, 19, 75, 62, 54, -83, -77, -31, 86, 49, 70, -81, 51, -102, -32, 11, 89, -1, -59, 20, -85, 46, -49, -76, -101, 70, 59, 16, 34, -95}

#define TENSOR_DENSE_BIAS_0_DEC_BITS {11}

#define DENSE_BIAS_LSHIFT {3}

#define DENSE_OUTPUT_RSHIFT {8}

#define TENSOR_DENSE_1_KERNEL_0 {16, 64, 34, -45, -54, -40, 23, 39, -9, 30, 35, 19, 36, -18, -58, -17, -68, -16, 62, -63, -1, -28, 8, 49, -1, 62, -51, -83, 80, 88, 4, 93, -18, 39, -4, -28, 92, -61, 57, -104, 10, -58, -98, 60, -43, 23, -16, -75, -29, 8, -21, 18, 48, 33, 49, -16, 5, 53, -24, -37, 95, 16, -20, -13, 79, 44, -72, 31, -63, -43, -49, -53, -27, -64, -51, -66, 29, 90, -22, -3, -62, -80, -72, -4, -29, -51, -55, 58, -50, 63, 40, 45, 9, 15, 83, -12, 27, -67, -79, -59, 55, 40, -33, 80, -12, -38, 45, -74, -31, 96, -14, -40, -84, 38, 46, -55, 8, -85, 51, -55, 55, -72, 71, 36, 39, -69, -35, 45, 90, -63, -76, 39, 72, 55, 42, -14, -41, -24, 0, -58, 16, 70, -10, -49, 39, 30, 23, -58, 78, 70, 3, 30, -40, 56, -34, 55, 5, -40, -98, -10, 16, 13, 68, -93, -66, 10, 41, 0, 59, -54, -51, -12, 47, -28, -3, 35, -44, 76, 50, 3, 69, -44, 3, -44, -81, -17, 38, 105, -60, 61, -75, 4, -59, -71, -32, -84, -3, 55, 20, -50, 64, 58, 59, -38, 25, -77, -59, 33, -64, -12, -83, 44, -52, 25, -34, 43, 31, -76, 24, 70, -4, -78, 27, -11, -78, 100, -14, 3, 47, 28, -75, -52, -59, 83, -41, -68, -68, 48, 73, 36, 58, -93, -44, 64, 58, 29, 43, 41, 42, -79, -79, 36, 37, 27, 13, 39, -31, 51, -38, 17, 80, -49, 4, 38, -2, -34, -25, -11, 34, -16, -46, -13, 47, -64, 78, 13, 24, 25, 14, 6, 7, 48, -13, -16, -59, 56, -35, -85, 72, -58, 47, 62, 89, -40, 4, 16, 43, 19, 80, 58, 5, -80, 67, 65, -88, 48, 7, 27, -91, 18, -26, 40, 28, -46, 46, -6, -24, -53, 14, -92, 17, -76, 45, 36, -10, 19, -26, 73, -90, 10, 34, 8, 9, -59, -13, 75, 39, -20, -60, 32, 37, 17, 67, -18, -42, -56, -89, 53, -44, -40, -41, -85, 14, 17, -54, -65, -8, 32, -15, 12, -47, 2, 47, -42, 69, -56, -39, -49, 20, 16, 6, -44, -26, 68, 23, -15, -4, 85, -23, -39, 30, -58, -12, -31, 53, 72, -23, 47, -76, 17, 59, -77, -41, 13, 66, 9, -17, -43, -74, -5, -29, 58, -63, -2, -61, 72, -76, 45, -58, -38, 84, 46, -13, -60, 99, 37, 48, -44, -46, 71, 39, 21, -32, 40, 19, 41, 89, 50, -6, 46, -55, 6, -29, 54, 71, 18, 2, 23, 34, 21, -32, -82, -26, -3, -28, -19, -60, -6, -31, -16, -54, 101, -11, -63, -6, -57, -57, 41, 36, -20, -73, -29, -69, -28, 90, 13, -29, -11, 16, -37, -38, 70, 70, 34, -84, -34, 11, -2, 41, -81, -54, -2, 49, -41, 69, 37, -61, 66, 71, -50, -41, -44, 68, 13, 44, -21, 70, -32, -48, -44, 53, 87, -83, 25, -48, -37, -22, -79, -69, 40, -57, -34, 25, -66, -53, -10, 8, 49, -80, -11, -41, -28, 51, 48, 42, 64, 59, -12, 60, 5, 47, 32, 23, -51, -21, -39, 9, 44, -19, 25, 92, 26, 33, 41, -29, 116, 51, 32, 22, 61, -26, 84, -75, -7, 61, 17, 0, -98, 89, -22, 107, -106, -21, 15, -81, 19, -7, 1, -42, 1, -80, 3, 88, -61, -12, -76, -53, -42, 79, -10, -57, 13, 21, -31, 32, -86, 76, 47, -87, -62, 40, 31, -40, 12, 8, -18, 6, 37, -12, 54, -61, -35, -12, -3, 4, -19, -45, -4, -4, 13, -78, -20, 82, -63, 46, 42, -98, -19, -32, -47, -53, -42, 38, 82, -38, -63, 55, -68, 10, 112, -57, 34, -37, -16, -61, -14, -84, -17, -4, -70, -19, 56, 1, -28, 33, 55, -76, 83, 30, 20, 37, -45, 37, -7, 56, -42, -5, 36, 13, -28, -16, 51, 57, 48, -44, -66, -80, 40, -78, 54, 0, 40, -60, 2, 7, 65, 94, -4, 82, 2, -8, -64, -80, -32, 24, 41, -35, 20, 97, -103, 67, 9, -11, 71, 8, 56, -30, -35, -5, 1, 24, -66, -16, -11, -52, -51, 81, -78, 81, -60, -63, 22, 5, -27, -16, 6, 43, -25, 40, 3, 83, -34, -63, 30, 71, 41, 19, -35, -6, -27, 0, -68, 54, -17, -40, 49, -96, 50, 56, 68, 49, 10, -76, -48, 52, 5, 76, 58, -53, -82, 47, 8, 58, 52, 45, -55, 8, 25, 8, 82, 18, -28, -11, 67, 37, 9, -85, -81, 7, 50, 49, 53, -54, 54, 2, 62, 17, 49, 52, 5, 60, -16, -57, 86, 32, 31, -79, -57, -75, -58, -71, 47, -57, 22, 75, -13, 28, -45, -39, -6, 77, -51, -35, -85, 12, -15, 76, -74, 61, -14, -32, 42, 32, -24, -35, 47, -19, 13, -26, 54, -41, 45, 39, -59, -11, 11, -21, 60, 39, -70, 84, 73, -17, -1, -107, -28, 76, 34, -89, -55, 96, 74, -70, 33, 33, 70, -60, -49, 17, -84, 77, 59, -7, -57, 75, 29, -79, -41, 41, 69, -80, -66, -41, -20, 34, 37, 16, 65, -34, -3, -51, 30, 29, 49, -81, 30, 86, -35, -53, -40, -89, -22, -23, -9, -86, 55, -94, -42, 39, -72, -1, 4, -48, 60, 2, -73, -38, 36, -25, -39, 53, -96, 34, -57, 55, 53, -54, -21, 33, 3, -32, -26, 37, 27, 61, -15, 32, 16, -77, -10, 46, -30, -32, 27, -26, 21, 51, -15, 55, -12, 26, 62, -36, 35, 43, -19, -55, 47, 71, 19, 78, 98, 2, 26, -52, -7, -30, 59, -11, 31, 54, -41, -71, -71, 33, -50, 49, 64, 67, 91, 36, -1, 15, -59, -37, -55, -25, -63, -73, -15, -17, 53, -52, 62, 61, 19, 82, 5, -65, 1, 51, -26, -24, -49, -73, 59, -69, -67, 67, -81, -51, 33, -71, 41, -35, 39, 30, 15, -21, 59, -37, -18, -21, 7, -6, 89, -26, -70, -35, 0, -49, 19, 72, -46, -20, 15, 71, 63, 35, -46, 36, -19, -3, -56}

#define TENSOR_DENSE_1_KERNEL_0_DEC_BITS {8}

#define TENSOR_DENSE_1_BIAS_0 {-2, 80, -84, -45, 60, -5, 73, -84, 4, 81, -77, 44, -52, -6, -59, -45, 54, -61, -70, 31, 73, -80, -42, 71, -7, 48, -69, -21, -51, -34, -74, 5}

#define TENSOR_DENSE_1_BIAS_0_DEC_BITS {11}

#define DENSE_1_BIAS_LSHIFT {3}

#define DENSE_1_OUTPUT_RSHIFT {9}

#define TENSOR_DENSE_2_KERNEL_0 {-53, -5, -51, -59, 27, -75, 48, -14, 24, 28, -13, 70, 48, 49, -23, 2, 50, -32, -30, 74, 34, -18, 24, 56, -63, -38, -33, -38, 43, 24, -46, -51, -35, -12, -24, -15, -26, 28, 2, 7, -36, 5, -13, -25, -53, -34, -8, -16, -12, -32, -35, 39, -17, -20, -57, 0, 51, 40, 16, -37, -14, -34, -30, 52, -41, -23, -24, -19, -43, 15, -54, 48, -16, -26, 13, -42, 54, -15, 4, 0, -30, 33, 5, 46, -42, 31, 9, -43, 41, -24, 34, -44, 39, 2, 10, 30}

#define TENSOR_DENSE_2_KERNEL_0_DEC_BITS {7}

#define TENSOR_DENSE_2_BIAS_0 {-3, 51, -76}

#define TENSOR_DENSE_2_BIAS_0_DEC_BITS {11}

#define DENSE_2_BIAS_LSHIFT {1}

#define DENSE_2_OUTPUT_RSHIFT {9}


/* output q format for each layer */
#define INPUT_1_OUTPUT_DEC 7
#define INPUT_1_OUTPUT_OFFSET 0
#define LSTM_OUTPUT_DEC 7
#define LSTM_OUTPUT_OFFSET 0
#define DENSE_OUTPUT_DEC 6
#define DENSE_OUTPUT_OFFSET 0
#define DENSE_1_OUTPUT_DEC 5
#define DENSE_1_OUTPUT_OFFSET 0
#define DENSE_2_OUTPUT_DEC 3
#define DENSE_2_OUTPUT_OFFSET 0
#define SOFTMAX_OUTPUT_DEC 7
#define SOFTMAX_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[390] = {0};

const nnom_shape_data_t tensor_input_1_dim[] = {65, 6};
const nnom_qformat_param_t tensor_input_1_dec[] = {7};
const nnom_qformat_param_t tensor_input_1_offset[] = {0};
const nnom_tensor_t tensor_input_1 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_input_1_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_input_1_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_input_1_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};

const nnom_io_config_t input_1_config = {
    .super = {.name = "input_1"},
    .tensor = (nnom_tensor_t*)&tensor_input_1
};
const int8_t tensor_lstm_lstm_cell_kernel_0_data[] = TENSOR_LSTM_LSTM_CELL_KERNEL_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_kernel_0_dim[] = {6, 128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_kernel_0_dec[] = TENSOR_LSTM_LSTM_CELL_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_kernel_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_lstm_lstm_cell_recurrent_kernel_0_data[] = TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_recurrent_kernel_0_dim[] = {32, 128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_recurrent_kernel_0_dec[] = TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_recurrent_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_recurrent_kernel_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_recurrent_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_lstm_lstm_cell_bias_0_data[] = TENSOR_LSTM_LSTM_CELL_BIAS_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_bias_0_dim[] = {128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_bias_0_dec[] = TENSOR_LSTM_LSTM_CELL_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_bias_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_bias_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_lstm_cell_config_t lstm_lstm_cell_config = {
    .super = {.name = "lstm"},
    .weights = (nnom_tensor_t*)&tensor_lstm_lstm_cell_kernel_0,
    .recurrent_weights = (nnom_tensor_t*)&tensor_lstm_lstm_cell_recurrent_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_lstm_lstm_cell_bias_0,
    .q_dec_z = 5,
    .q_dec_h = 7,
    .q_dec_c = 5,
    .units = 32
};

const nnom_rnn_config_t lstm_config = {
    .super = {.name = "lstm"},
    .return_sequence = false,
    .stateful = false,
    .go_backwards = false
};
const int8_t tensor_dense_kernel_0_data[] = TENSOR_DENSE_KERNEL_0;

const nnom_shape_data_t tensor_dense_kernel_0_dim[] = {32, 32};
const nnom_qformat_param_t tensor_dense_kernel_0_dec[] = TENSOR_DENSE_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_kernel_0 = {
    .p_data = (void*)tensor_dense_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_bias_0_data[] = TENSOR_DENSE_BIAS_0;

const nnom_shape_data_t tensor_dense_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_dense_bias_0_dec[] = TENSOR_DENSE_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_bias_0 = {
    .p_data = (void*)tensor_dense_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_output_shift[] = DENSE_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_bias_shift[] = DENSE_BIAS_LSHIFT;
const nnom_dense_config_t dense_config = {
    .super = {.name = "dense"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_bias_shift
};
const int8_t tensor_dense_1_kernel_0_data[] = TENSOR_DENSE_1_KERNEL_0;

const nnom_shape_data_t tensor_dense_1_kernel_0_dim[] = {32, 32};
const nnom_qformat_param_t tensor_dense_1_kernel_0_dec[] = TENSOR_DENSE_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_kernel_0 = {
    .p_data = (void*)tensor_dense_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_1_bias_0_data[] = TENSOR_DENSE_1_BIAS_0;

const nnom_shape_data_t tensor_dense_1_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_dense_1_bias_0_dec[] = TENSOR_DENSE_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_bias_0 = {
    .p_data = (void*)tensor_dense_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_1_output_shift[] = DENSE_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_1_bias_shift[] = DENSE_1_BIAS_LSHIFT;
const nnom_dense_config_t dense_1_config = {
    .super = {.name = "dense_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_1_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_1_bias_shift
};
const int8_t tensor_dense_2_kernel_0_data[] = TENSOR_DENSE_2_KERNEL_0;

const nnom_shape_data_t tensor_dense_2_kernel_0_dim[] = {32, 3};
const nnom_qformat_param_t tensor_dense_2_kernel_0_dec[] = TENSOR_DENSE_2_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_2_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_2_kernel_0 = {
    .p_data = (void*)tensor_dense_2_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_2_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_2_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_2_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_2_bias_0_data[] = TENSOR_DENSE_2_BIAS_0;

const nnom_shape_data_t tensor_dense_2_bias_0_dim[] = {3};
const nnom_qformat_param_t tensor_dense_2_bias_0_dec[] = TENSOR_DENSE_2_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_2_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_2_bias_0 = {
    .p_data = (void*)tensor_dense_2_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_2_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_2_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_2_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_2_output_shift[] = DENSE_2_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_2_bias_shift[] = DENSE_2_BIAS_LSHIFT;
const nnom_dense_config_t dense_2_config = {
    .super = {.name = "dense_2"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_2_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_2_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_2_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_2_bias_shift
};

const nnom_softmax_config_t softmax_config = {
    .super = {.name = "softmax"}
};
static int8_t nnom_output_data[3] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {3};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[7];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&input_1_config);
	layer[1] = model.hook(rnn_s(lstm_cell_s(&lstm_lstm_cell_config), &lstm_config), layer[0]);
	layer[2] = model.hook(dense_s(&dense_config), layer[1]);
	layer[3] = model.hook(dense_s(&dense_1_config), layer[2]);
	layer[4] = model.hook(dense_s(&dense_2_config), layer[3]);
	layer[5] = model.hook(softmax_s(&softmax_config), layer[4]);
	layer[6] = model.hook(output_s(&output0_config), layer[5]);
	model_compile(&model, layer[0], layer[6]);
	return &model;
}
