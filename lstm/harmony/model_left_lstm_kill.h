#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_LSTM_LSTM_CELL_KERNEL_0 {23, 25, 22, 41, 14, 8, 26, -18, 16, -9, -39, -1, 31, -37, -15, 20, -12, 10, -21, 36, 15, -4, 4, -5, -28, -13, 20, -3, -21, 17, -7, 35, 62, -1, -21, 28, -3, 23, 12, 2, -45, -22, 1, -18, 32, 36, -45, 9, -41, 26, -4, -30, 15, 2, -33, 56, 10, 15, -19, 5, -28, -7, 0, -33, 39, 8, 2, 31, -32, -29, 12, 39, -46, -5, -36, 0, 31, -9, 25, 20, -15, -10, 44, -15, 5, 10, 1, 25, -31, -27, -14, 18, 2, 35, 29, 16, 12, -34, 11, -28, 14, 12, 12, 15, -22, 1, -9, -10, 34, 34, -8, -28, 22, -19, 11, -33, 4, -57, -13, 38, 58, 6, 31, 3, -7, -6, -20, -3, 56, -2, -23, -3, -46, 48, 17, -15, -45, -24, -42, 20, 7, -18, -20, -2, -16, 0, -57, 48, 5, 42, -8, 17, 1, 5, 23, 8, 2, 7, 35, -16, 53, 42, -16, -29, 23, -53, 1, 18, -16, -44, 40, -45, -19, -2, 13, 33, 53, -20, -35, 2, -5, 47, -28, -13, -21, 40, 36, -9, 13, -16, -5, 12, -19, -2, 21, 34, 39, -22, -7, -12, -19, -13, -13, -9, 23, -31, -22, -30, -17, -38, 3, 23, -9, -40, -11, -1, -20, -7, 2, -34, 18, 27, -2, 5, 8, 39, -19, 27, 13, 17, -27, -18, -50, -9, 17, -11, 11, 2, 4, 35, -9, -21, 37, -10, 26, 17, -16, 59, 6, 23, -22, -9, 19, -16, -11, -6, 44, -12, 19, 8, -20, 7, -3, 29, -37, -8, -11, -6, -12, 21, 36, 47, -6, 30, 4, -13, 3, 35, 10, -15, -4, -19, 22, -15, -14, -18, 21, 14, 23, -43, -8, -54, -43, -3, 27, 22, 5, -21, -10, 2, 62, 25, 29, -10, 5, -26, -16, -22, 14, -9, -16, 46, 41, 22, 44, -17, -34, 3, 5, 9, -2, 28, -11, 1, -30, 15, 7, -8, -36, -36, -27, 10, 18, -30, -28, 22, 11, 9, -35, 57, 19, 17, -17, 33, -6, -11, 12, -4, -9, -6, 14, -15, 40, -29, 9, 20, 30, -45, -7, -23, 26, -14, 46, -46, -34, 25, 19, -1, 45, 8, -36, 22, 25, 10, -18, -28, -8, 18, -3, 24, -23, -7, 15, 5, -34, 26, -11, -8, -6, 22, 37, -5, 12, -13, 16, 4, -19, -18, -31, 23, 8, -3, 14, 23, 18, 6, -19, -15, 12, 43, -25, -39, 0, -15, -24, -5, -34, -7, 16, 2, 6, -7, 1, 10, 22, -10, 19, 22, 35, -16, -11, 2, -17, -23, -46, 24, -41, 41, 27, 38, -26, -29, -4, -17, 5, 17, 14, -1, 4, 15, 1, 3, 17, -17, -1, 13, -7, 25, 20, 22, 12, -28, 34, 22, 13, -7, -48, 7, -17, -7, -29, -19, 38, 21, 3, -13, -21, 26, 24, 5, -11, -1, -27, -25, -18, -43, 56, -39, -38, -27, 0, 29, 12, -14, -6, 5, 6, 15, 19, -18, -39, 11, 10, -51, -34, -18, 34, 18, -9, -7, 16, 0, 6, -27, 21, -3, 30, -27, -24, 23, 56, -30, 9, 18, -18, 25, 12, 5, 10, 17, -56, 9, -2, 16, 20, -26, 14, 2, 16, -11, -24, 33, 21, -27, 35, 15, -26, -2, -4, -24, -27, 7, -2, -48, 7, -57, -13, -24, 0, 20, -39, -15, 26, 11, -24, 10, -27, -27, 31, 26, -25, -2, -6, -22, 1, 2, -7, -9, 38, 63, 8, 19, 39, -33, 8, -27, -22, 8, -13, -23, -25, -18, 13, -10, 16, 13, 22, 9, 15, -14, 10, -14, 42, -55, 2, 12, 0, 9, 40, -1, -28, 3, 21, 3, -22, -43, -26, -51, 2, 11, 37, -9, 14, 29, -33, -1, 12, -32, 6, 15, -53, 39, 6, -11, 7, 18, -30, 14, -4, 9, 24, -27, 0, 49, -32, -19, 26, -2, -25, 3, -26, -20, 10, -30, 48, 23, 17, 7, 51, -11, -13, 11, 0, 7, -8, -26, -13, 16, -39, 0, 11, 0, 4, 9, -4, -48, 26, 20, 37, 59, -29, -3, 27, -1, 53, 36, 22, -19, 23, 14, -16, -10, -27, -27, 8, 57, 62, -3, 49, -11, -9, -22, 28, -16, 48, 10, 3, -17, -32, 21, 28, -10, -12, -7, 9, 2, 46, 11, 15, 14, 17, -11, -66, 32, -17, 14, 17, 51, 11, -11, -6, -41, 0, 44, -3, 5, 47, -2, -21, 2, 2, -41, -14, 7, -7, -11, 69, -26, -23, -10, 25, -2, 9, -22, 4, -13, -14, 37, 7, -35, -43, 29, 14, -33, -43, -35, 19, 32}

#define TENSOR_LSTM_LSTM_CELL_KERNEL_0_DEC_BITS {7}

#define TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0 {-6, 6, -18, -20, -25, -16, -1, 3, 3, 8, -16, -5, 22, 13, 4, -1, -24, 5, -30, -7, -17, 7, 12, -11, 12, 9, 3, -23, 1, 10, -29, 15, 5, 5, 0, 1, -1, 13, 10, 17, 7, -2, 18, 31, -4, 1, 20, 11, 41, 32, 11, 3, 28, -12, 9, 13, 14, 1, -4, 7, -14, 11, -6, -17, 7, -21, -14, 14, -10, -2, 8, -23, -4, 9, -16, 14, -19, 4, -17, -13, -17, 18, 10, 8, 19, -1, -23, -17, -7, -15, -23, 14, 7, 0, -17, 4, -5, 12, 4, -1, 36, 4, 5, 1, -2, 11, 29, -27, -4, -6, 1, 1, -24, -5, -29, -8, -25, 11, -9, 12, 0, -31, -5, 23, -3, -8, 2, 20, 22, -4, -3, -9, 16, -6, -24, 22, 12, -10, -22, -11, -3, 18, 16, 30, 7, 6, 6, 24, 2, -1, 9, 3, 3, -4, -10, -14, -20, 3, -6, -31, -5, -12, -4, -1, -3, -13, 0, 17, -4, -9, -2, -9, -8, -18, 13, 17, -2, -22, -6, -7, -1, 23, 7, -24, -2, 18, 14, 2, -25, -3, -6, 1, -17, 3, 10, -4, -1, 19, -7, 23, -13, -6, -4, -32, -14, 3, -7, -39, 3, -31, 5, 12, 10, -22, -2, -7, 22, -16, -12, 34, -11, -7, 2, -6, 9, -1, 0, 20, 8, 16, -4, 10, -11, -13, 11, 13, 16, 11, -21, 20, -28, -28, 8, 23, 20, -12, -21, 22, -38, 13, -4, 12, -7, 3, -8, 2, 34, 16, 2, -6, -11, -14, 1, -3, -17, 13, -22, 6, -6, -7, -11, -5, 20, -3, 23, 11, 11, -1, 6, -17, -23, 12, 20, -4, 10, 9, 5, 24, -19, 8, -6, -10, -7, -12, -4, -24, -4, -12, 6, 28, -26, -1, -7, 11, 7, 8, 17, 2, -13, 5, 12, -15, -20, -1, 8, 5, -7, -1, -13, -23, -19, -7, 1, 6, -31, -17, 18, -20, -17, 17, 12, -36, -13, 27, -11, -3, 46, 14, -51, -26, -12, 1, -7, -21, 14, -14, 24, -19, -11, -7, 0, -3, 34, 30, -9, -4, 4, 7, 10, 3, 9, 5, -36, -6, 10, -7, 1, 9, 32, -5, -2, 22, 18, -16, -10, -18, 5, 4, -3, 3, 19, 1, -7, 13, 19, 19, -10, 30, -12, 4, 16, 15, -30, -24, -4, -1, 3, -11, 23, 20, 25, 1, -7, -1, -28, 3, -30, 6, 18, 1, 15, -11, 14, -6, -19, -9, -26, 10, -21, -1, -3, 12, 25, 13, -4, 0, 5, -9, 1, -14, -1, -2, 3, -1, -6, 19, 7, 23, -11, 7, -2, 2, -25, 21, -6, -9, 2, 2, -11, 5, 33, -1, -7, -16, -19, 13, 7, 40, -2, -4, 34, 4, 6, 4, -19, -9, -11, 2, -9, 28, 11, 10, -4, 19, 46, 4, -15, -26, -4, 24, 16, -11, -9, -3, -20, 47, -9, 19, 1, -3, -1, -13, 32, 5, 7, 0, 11, 5, -4, 6, -1, 6, -10, 13, -1, -14, 21, 5, -14, -10, 17, 6, 0, 23, 4, -4, -3, -10, -3, -14, 9, 0, 8, -8, 6, -39, 17, -8, 15, 5, 22, -4, -32, 9, -11, 46, 4, 9, 12, 22, 11, -11, -18, 42, -9, 12, -8, -8, -10, 3, 24, -8, 4, -8, -19, -24, 15, -13, 3, 12, -15, -12, 16, 2, 9, -15, -5, 14, -2, -24, 1, -11, 7, -6, 8, -26, 15, 27, 15, 10, 20, -22, 5, 15, 16, -2, 19, 3, 10, 3, -7, -17, 10, 4, 6, 4, -19, 7, -3, -6, -9, 5, 6, 20, -46, 30, 14, 8, 10, 5, -15, -33, 16, -22, 24, -20, 27, -9, -17, -5, 13, -11, 30, -3, 58, 10, 11, 6, -20, -19, 29, -14, -7, -7, -19, -7, -4, 1, 28, 3, -6, 3, 14, 16, 1, -18, -10, -1, 41, -8, 35, 18, 11, 11, 26, -19, -32, -17, -14, 4, 2, -8, -16, -28, -2, 28, -74, -7, -4, 28, 7, -18, -8, -3, 14, 7, -8, 1, 4, -20, 24, 1, 19, 1, 3, -1, 3, 0, 6, -22, -36, -2, -1, -3, 36, 5, 3, 1, 5, 16, -7, 4, 0, -13, 8, 19, 9, 6, -37, 0, -18, -1, 36, 0, 0, -3, -7, -9, -2, 33, -38, 6, 33, -16, 1, -52, -16, -15, -20, -21, -53, -4, -14, 13, -7, -2, 8, 4, 14, -3, 10, 15, 7, 9, 8, -3, 42, -10, 0, 11, -28, 36, -24, 11, 7, -21, 0, -40, -3, 21, 25, 7, 32, 22, -2, 19, 6, -5, 8, 2, -7, -3, -8, 33, -11, -6, 33, 33, 4, -7, 13, 19, 6, 23, -3, 9, -1, 10, 26, -7, -26, -23, -11, 18, -35, -15, 11, 1, -5, -23, -16, -29, -28, -3, -16, 0, 6, 9, -6, 4, -42, 12, -4, 3, 5, -28, 4, 34, -13, 13, 19, 8, 28, -11, -54, -12, -9, 14, 9, 22, -7, 17, -2, 5, 6, -14, -3, -12, 6, 8, -41, 14, 17, -28, -1, 13, 1, 8, 5, 3, -16, 17, 21, 0, -10, 16, -16, -26, 9, -1, -16, 5, 6, -24, 17, -18, -13, 14, -10, 8, -14, -8, 1, 1, -11, 9, -18, 10, -1, 7, 12, -20, 21, -2, 28, -10, 3, 6, -15, -9, -15, 4, -13, -10, 4, -14, 21, 17, -10, -9, 1, -9, 9, 11, -6, -2, -14, 15, 21, 13, 6, -8, -33, -2, 13, 14, -20, -7, 3, -2, -2, -12, -9, -6, 7, 39, 0, 2, -21, -6, -7, -18, 9, 11, 13, 11, -13, -9, -13, -35, 25, 26, 2, 10, -7, 1, -4, 3, 4, 14, 13, -14, -11, -25, 24, -3, 18, -4, -5, 12, 0, -20, -3, 8, -13, -8, 0, 11, 19, -1, 24, 25, 3, -6, -2, -35, 25, 34, -1, -22, 28, -12, 16, -14, 37, 2, -13, -9, -11, 3, -22, -17, 4, 22, -15, -22, -9, -4, 8, 3, 1, 11, 8, -39, 19, -10, 2, 25, 6, 35, 5, 11, -12, -36, 6, 12, -4, -28, 12, -13, 11, -10, 18, 27, -3, -8, -21, 12, -9, 14, 26, -5, 24, 5, 11, -12, 3, 3, 20, 25, -13, 14, -11, -24, -14, -7, -3, -11, -2, -12, 1, -7, 4, 23, -28, 0, 10, -15, 7, -8, -13, -5, -1, 2, -6, 4, 28, 2, 6, -3, 40, 10, 18, 9, 4, 3, 20, 1, 41, 10, 14, -2, -16, 15, 7, -3, 13, -15, -10, -7, -18, -24, -6, 5, 15, -6, -4, 16, -11, -12, -19, -13, -1, -19, 0, 35, -8, -18, 13, -7, 5, 21, 9, -1, -14, 7, -37, 1, -7, -2, -39, -15, 21, -29, 22, -21, 14, 3, 20, 21, 4, -28, 8, 9, 22, -10, 2, 1, -11, 1, -37, 7, 5, 4, -5, -2, 20, 3, -2, -7, 15, 1, 36, 10, -16, 14, 0, -26, -12, 28, 8, -12, -20, -16, 6, 32, -3, 12, -11, 20, 4, -18, 0, -18, 13, -2, -11, -7, 25, 11, -1, 24, -21, -37, 2, 6, -6, -16, 17, 8, -7, 10, -5, -30, -8, 0, -34, 21, -1, 37, -2, -38, 6, -8, 13, 15, -1, -10, -14, -7, 11, -4, -8, 24, -13, 13, -30, -1, 5, -19, 11, 3, 9, 16, 15, -9, -3, -16, 5, -15, 4, -34, 24, -24, -13, -2, 13, -39, -25, 15, 5, 7, 2, 33, -7, 1, -5, -10, -4, 10, -12, -1, -10, 15, -8, 14, -11, -26, 2, 33, -1, 12, -20, 40, -11, -1, -22, 31, 6, -29, -1, 22, -14, -21, 22, -14, -9, 4, 9, 64, 8, -19, 3, -3, 2, -7, 7, 20, 6, 7, -10, 15, -15, 36, -9, -4, 18, 21, 8, 5, 18, -25, 15, -29, 15, 8, 32, -22, 6, 1, 16, -10, 10, 4, 0, 6, -24, -31, -15, 36, 5, -1, -10, 20, -24, 2, -10, 20, 30, -10, -3, -6, -18, 6, 4, 2, -1, 1, 5, 22, -6, 42, -16, -8, -13, 12, -15, 19, 4, -16, -6, -5, 0, 12, 9, -27, 5, 23, -12, 1, 69, 10, 2, 2, -7, -18, -21, -17, 6, 3, 18, 11, 9, -10, 15, 9, -14, 11, -1, -4, -15, -30, 41, -3, -9, -13, -46, 2, 14, -9, -11, -2, 40, -18, 3, 2, 2, -18, -10, -26, -26, 6, -22, 5, -21, -5, -4, 44, 45, 6, -25, 20, -2, -22, 7, 12, -6, 6, -6, -8, -1, 6, -2, -3, 6, 3, 12, 3, -17, -13, -2, -26, -7, -3, 17, -4, -17, 14, -5, -24, -34, 3, -58, 8, -24, 18, 29, 28, -19, 9, -7, 3, 9, 10, 14, 17, -4, 9, -19, -26, 13, 3, 1, -11, -26, 5, -29, 13, 28, -10, -9, 15, -33, -11, 7, -4, -10, 10, -7, 9, 35, 12, -28, -6, 30, 26, 8, 1, -17, -4, -12, 11, 17, 21, -8, 16, 29, 8, 36, -24, 8, -17, 0, -33, -11, 12, -16, -1, -25, 20, 9, 9, -18, 18, -21, -4, -7, -15, 8, 5, 38, -20, -15, -7, -10, -14, -52, 9, -4, 23, -14, -13, -2, 34, 4, 6, 23, 5, 5, -22, -20, 24, 13, -29, -5, -7, 12, -9, -7, -40, 21, -3, 15, -7, -21, -33, -24, 35, -15, 60, -3, 12, -4, 2, 13, -37, -8, 47, 0, 5, 0, -8, 16, -10, 1, -35, 7, 4, -26, -9, 20, -23, 2, 1, -11, -6, 2, -7, -16, -34, -26, 23, 3, -2, -13, -13, -9, -16, 16, -16, -2, 28, 22, -13, -6, -41, 7, 20, -15, -13, 24, 4, 17, 44, 26, -59, 22, 8, 18, -25, -6, -15, 6, -20, 25, -3, 0, 1, 0, 32, 19, -1, -20, 0, -9, -8, 9, -9, 6, -28, 16, 6, -49, 5, -1, 5, 3, 4, 26, -17, 10, 0, -5, -11, 1, -14, 21, -24, -5, -9, 1, -19, 15, -2, -25, -10, 7, -3, -30, -12, 17, 11, 5, 18, 4, -4, 23, 22, 24, -1, -34, -5, -24, 7, 31, -22, -31, -18, -19, -13, -43, -7, 3, 29, -3, -25, -23, 6, -5, 24, 17, -15, 0, 23, -3, 36, 23, -1, -10, 48, -19, 31, 9, 1, 1, -1, 17, 0, 16, -23, 22, 14, -22, -4, -23, 33, 14, 28, -2, 11, -11, 5, 8, 13, 44, -15, 28, 42, -27, -8, -23, 28, 14, 4, -17, -14, 20, 14, 24, -25, -16, 29, 0, 2, -62, -1, -8, 4, 9, -11, -11, -12, 7, -17, 9, -26, 22, 42, -2, 1, 39, 0, 21, -18, -14, 27, -23, -6, -22, -5, 23, -8, 8, 7, 0, 6, 23, 14, 0, 33, -6, 10, -7, 5, -14, 1, -20, -24, 1, -19, 9, 17, 13, -18, -15, -14, 22, 10, 2, -13, -8, -30, -3, -18, -17, -12, -4, -20, 3, -10, 19, -4, 13, -18, -9, -34, -4, 15, 2, -28, 0, 16, -21, 14, -26, 13, 14, 3, 15, 3, 29, 23, -3, -22, 3, 11, 6, -1, -22, 1, -24, -1, 4, 3, 20, 3, 11, 7, 17, -6, -8, -20, -2, -20, -16, 33, 11, -6, 9, 11, 3, -22, -13, 8, -18, 4, 8, -5, 16, 22, -15, 6, 16, 6, 17, 25, 13, -18, 22, 4, 5, 10, -13, 13, -3, 15, -12, -3, -2, 4, 3, -12, 5, -13, 27, 4, 16, -2, -4, -22, 1, -38, -7, 4, -11, 28, -14, -5, 6, 16, 21, 14, -14, -8, 5, -13, 12, -16, 30, -2, -10, -17, 29, 12, 7, -7, -30, 15, -22, -4, -26, -17, -27, -22, -17, -8, -8, -11, 1, 1, -2, 2, -26, 5, 11, 20, 8, -21, 5, -9, -8, -6, 5, -9, 21, 14, 4, 1, -7, -6, 10, 0, 26, 15, -32, 7, 6, -55, 1, 15, 12, 15, 35, 12, -33, 1, -4, 24, 10, -2, 2, -3, 48, -28, -3, 17, 23, 16, 23, -22, -7, 27, -1, -1, 3, -11, 9, 9, 26, -2, -15, 10, -18, 6, -6, -9, -13, 20, 7, -10, -27, -2, 17, 23, 12, 4, -7, -28, 7, 0, 9, 17, -21, 22, -22, 25, -9, -27, -9, -11, 1, 3, 40, -10, 10, -6, 37, 38, -4, -9, 6, -5, 2, -27, 17, 13, -9, 22, 8, -6, 3, 2, 0, 1, 5, 8, 3, -7, -7, -1, -11, 3, -3, -2, 1, -1, 28, -2, -14, -31, -12, 16, -8, 11, 11, -7, 11, 5, 14, 5, -21, 12, 4, -9, 5, 1, -12, -8, 20, 10, 2, -2, 3, -12, -13, -2, 0, 21, -23, 3, 16, -11, 7, 34, -7, -4, -3, 17, 15, 14, 5, 5, -1, -6, 12, 8, 14, -21, 20, -2, -6, 8, 2, 5, 18, 34, 23, 6, -6, -1, -8, -14, -14, -4, -6, 26, -2, 22, 4, 29, 3, 5, -18, 12, 5, 20, 3, -2, -1, -3, 21, 10, 9, -18, -23, 18, 10, 8, 7, 10, 5, 9, -13, 6, -7, 8, -4, 4, -1, 20, 1, -24, 6, 6, 5, -1, 2, -2, 1, -1, 14, -9, -27, 28, -5, 10, 3, 7, -29, -10, -8, 12, 8, 21, 3, -21, -11, 23, -3, 0, -15, -2, 12, 5, 19, -31, -19, -30, 0, 17, 34, 14, 14, 1, -12, -26, -7, -3, -27, 9, -22, 7, 5, 5, -6, -2, 28, 5, 2, -16, -15, -6, 12, 25, 3, -5, 8, -23, 8, -1, -19, -16, -9, -16, 3, 6, 11, 7, -8, 1, 6, -3, 17, -26, -1, -13, 23, -28, 7, 0, 19, 8, -24, 10, 8, -23, 8, -11, 17, 11, -35, 9, 5, 10, 25, -11, 18, -14, 11, 6, -5, 13, -17, 9, 13, -9, -4, -7, -14, -1, 4, -11, -17, 0, -16, 0, 12, 20, -11, -12, 11, 11, 10, -11, -23, 5, 16, 26, -13, 12, 20, -1, -3, -12, -6, -13, -5, -26, 14, 7, 18, -9, 12, 5, -8, -1, 5, 0, 1, -7, -5, 7, 20, 1, 9, 8, 26, -13, 4, -3, 16, 10, 35, 21, 4, -14, 7, 2, -1, 11, 4, -6, -7, 7, 30, 35, 5, 0, 15, 1, -17, 0, 16, -6, -4, -8, 20, -9, 20, 0, 7, 11, 9, -21, 6, -10, 3, 13, -8, -3, 21, -7, -6, 13, 21, -12, 5, -13, 5, 8, 12, -4, 19, -4, -22, 41, 12, -6, -1, -2, -20, -3, 4, 2, 0, -4, -15, 0, 25, -5, 11, -27, 6, 2, 2, 15, -14, -2, 40, 8, -5, -6, 25, -24, 8, -7, -2, 7, 2, 19, -7, -5, -6, -2, 14, 9, 4, -3, -8, 0, -20, -1, -10, 4, -26, 32, -10, 14, 6, -1, -1, 14, 10, -1, 14, -2, 12, 0, 3, -4, 0, -4, 18, 9, -12, 13, 14, 11, 18, -12, 12, -2, 3, 14, -9, 9, 2, -6, 9, -11, 11, -7, 10, 15, 12, 11, -1, -32, 9, -19, -4, -1, -3, 7, -13, 4, -6, -26, -2, 4, -4, 5, -17, 7, -11, -8, -8, -1, 11, -4, -5, 4, -15, 3, -15, -9, -6, -1, 26, -12, -4, -7, -8, -3, 21, -6, -15, 2, -3, 1, 7, 13, 34, 13, 5, 4, 20, -1, -6, -8, -15, -13, -28, -18, 16, -4, 23, 8, -6, 0, 11, -11, -3, 20, -9, -8, -15, 12, -8, -10, -10, 18, -17, 7, 20, -2, 0, 24, 7, 16, 8, -6, -7, -5, 8, 4, -7, -4, -8, 15, -15, 7, 22, -7, -6, -2, -27, 15, 3, 13, 2, -5, -23, -3, -20, -17, 3, 1, -2, -23, 3, -11, -10, 26, -16, -2, 15, -2, -1, -3, 6, 0, 36, -5, 0, -7, 1, 34, -16, -19, 2, -26, 2, 14, -1, -5, -18, -15, 14, -11, -18, 17, 9, 13, 17, 5, -9, -5, -6, 4, 2, 6, -17, -11, 6, 38, 3, 4, 30, 17, -7, 5, -3, 7, -21, 29, 18, -7, -3, -10, -15, -1, 11, 7, 15, 20, 1, 15, 17, 3, 21, 34, -2, 3, 6, 15, 10, -11, 13, 3, 24, -6, 12, -15, -3, -3, 8, 24, -1, -7, -23, 12, -8, -15, 13, -13, -25, 6, 9, -4, 2, -5, 3, 32, -2, -18, 4, -13, 7, -1, -11, 6, 4, -13, 0, 11, -12, -23, -11, 20, -3, 1, -7, -37, -14, 38, -10, -27, 25, -3, -10, 1, -3, 5, 6, 17, 6, 2, -18, 21, -11, 5, -1, 16, 4, 26, -2, -39, -1, -25, 1, -9, 2, 1, -13, 10, 13, 35, 32, 16, 3, 31, 20, -9, 23, 9, 7, 6, 12, -4, -22, 10, 4, 33, -37, 6, 4, 6, 12, 6, 12, 4, 4, -2, -21, -5, -1, 14, -10, 5, 32, -3, -30, 21, -3, 10, -5, -9, 13, 6, -15, 10, 1, -4, 8, 22, -5, -14, -5, 18, -4, 8, 17, 16, 3, 22, 18, -2, 23, -4, 22, 11, 15, -24, 14, -2, 23, 10, -3, 5, 8, -2, 12, -9, -4, 9, -2, -8, -15, 30, 5, 8, -5, -9, -4, 23, 0, 16, 4, 33, -9, -9, -11, 4, 17, -1, 0, -1, -4, 3, -15, -2, -3, 13, -2, 13, -5, 8, 15, -21, -15, 9, 1, 1, -2, -3, -9, -4, -14, -5, -4, -19, -20, -4, -20, 0, 2, -26, 10, 13, 14, -24, 4, 5, -9, 7, 1, 11, 6, -1, -8, -20, 12, -8, -2, 21, 1, 9, 5, 12, -6, -23, 15, -5, 3, -12, -2, 6, -1, -26, 31, 11, -3, -6, 3, -8, 4, 25, 12, 5, 7, -7, 8, 4, -18, -13, -19, 14, -11, -6, 5, 11, 8, 10, -1, 9, 2, 9, 8, 7, 18, 2, 3, -1, 2, -31, -13, 11, -13, -1, -18, 1, 9, 9, 3, 22, -18, -5, 6, -18, -3, -9, -3, 1, 8, -1, -12, -7, 6, -23, 18, 5, -4, -8, 13, 11, -16, -15, 1, 1, 17, 0, 12, 16, 9, -3, -11, 11, -18, -1, -1, 14, 14, -6, 24, 15, -3, -4, 6, -2, -8, -12, 10, -13, -17, -6, -4, 7, -2, 2, 26, 6, -16, -17, 4, 4, -12, -8, -28, -1, -2, 11, 1, 9, -4, 22, 34, -3, -1, 2, -2, 6, 4, 3, 16, -11, 8, -24, -20, 0, 16, -17, -2, 31, -1, 12, -8, 16, 16, -7, 14, -11, -8, 16, 0, -12, -13, -5, 22, 16, 20, 17, -13, 11, 31, 11, 16, 1, -29, -10, -16, -12, -4, 5, 15, -8, 19, 4, -16, 4, 7, 2, -22, -19, -16, -10, 15, 25, 4, -20, 9, -8, 18, -3, -20, 8, -12, -13, 15, 9, 26, -7, 19, 16, 18, 6, -1, 25, 11, -25, -11, 17, 17, -10, -8, 11, -27, -14, -14, 3, 21, 12, 7, -19, -10, 34, -5, 4, -26, -17, -10, 7, -1, 37, 1, 16, -7, -1, 4, 6, -7, 18, -5, 3, -9, 0, -38, 8, -2, -5, 18, -1, 54, -2, 16, -23, 18, -10, 10, 3, -10, -11, 5, -1, -22, -16, -3, -13, -34, 10, 2, 3, -8, -5, -16, 9, 2, 1, 17, 1, 24, -19, -27, -2, -2, 2, -2, -7, 3, -7, -24, -7, 24, 30, -3, 14, -18, 11, -11, 6, -12, 0, -3, 3, 10, 9, 10, -3, -17, 8, 6, -31, -3, -5, -27, 0, 1, -4, 3, 1, -8, -4, -10, 5, 2, 6, 16, 9, 13, -2, 12, -2, 16, 3, 10, -24, -6, -1, -17, 19, -5, -16, -2, -2, -37, 9, -20, 9, 1, -4, -5, 1, -11, -9, 4, -16, -18, 10, 10, -25, -7, -31, 1, -6, 30, -26, -8, 6, 7, -1, -8, 29, -4, -11, 8, -3, 26, 26, -7, 22, 12, 33, 2, 13, -19, -10, 4, -2, 6, -19, -18, 14, -5, -9, -13, 20, 5, -19, 14, 3, -20, 9, 23, 1, -3, 7, 13, 24, 16, 13, -5, -8, 6, -15, -13, -12, 16, -1, -12, 7, -14, 15, -15, 10, 30, -22, -3, 10, 14, -5, 14, -9, 2, -3, 17, -19, -18, -11, 16, -15, 1, 1, 3, -8, -22, 2, 3, -15, 5, -20, -18, -14, -21, 15, -1, 19, -1, -6, 4, 11, -21, 21, 17, 26, -25, -4, -5, -7, -12, 12, -21, -5, -12, -11, -19, 3, -15, -8, 25, -5, 11, 20, 17, -29, 2, 25, -9, -8, 20, 21, -5, -11, -35, -11, -6, -20, -2, 12, 39, -10, -2, -1, -15, 7, -4, 6, -16, 1, -17, -5, -14, 1, 13, 16, -50, -1, -1, -24, -20, 9, 26, -9, -4, 2, 14, -21, -14, 0, 8, -1, 15, 7, -10, 10, -20, 19, 22, 7, -30, 13, -23, -7, -15, 9, -15, 0, 2, -4, 24, 10, 8, 34, -9, -16, 25, 23, -12, -9, -12, -6, -10, -15, 36, 19, -5, 4, 17, -10, -24, -4, -29, -10, -4, 3, -3, 15, -10, -5, -23, 13, -9, 0, 8, 4, -11, 4, -4, -8, -1, 26, -10, 9, -28, -12, -24, 20, 10, 9, -2, -7, -9, 10, 29, -5, -12, -1, -8, 24, 2, -4, 13, 6, 14, -3, 26, 7, -33, -24, 6, 9, -21, 14, 1, 8, 13, 3, 25, -8, 14, 5, 6, 40, 7, 13, -41, -4, -24, 37, 18, 8, 8, 7, -29, -2, -16, -2, -8, 26, 27, -5, 33, 17, -18, -15, -24, 27, -6, 2, 1, -6, -11, 13, 15, -5, -7, -1, 4, -24, 6, -1, -4, 1, 12, -9, 2, 3, 17, -38, -24, -45, 22, 9, 1, -3, -16, -2, -38, 32, -8, 13, 1, 20, -5, -19, -23, 38, -6, 1, -8, -3, -12, 2, -2, -25, 3, -3, -17, -17, 11, -33, 8, -3, -16, -25, -5, 2, 20, -20, -6, 26, 11, -11, 2, -17, 7, 6, 1, -13, -18, -2, 2, -6, -8, -10, 11, -14, -11, -14, 18, -3, 1, 20, -15, -44, 13, -14, 28, -15, -11, -2, 12, -9, -2, -30, -12, 24, -18, 28, 27, 39, 6, -10, -5, -13, 20, -31, 12, -21, -7, 1, -15, -19, -3, -2, 27, -7, 24, 0, -10, 1, -3, -5, 10, -25, -8, 1, -9, -5, 18, -15, 21, 33, -15, -13, 1, 0, -17, 12, -3, -39, -4, -19, -5, 15, 19, -4, 5, -5, -26, -5, -17, 11, -1, -2, -3, -4, 6, 4, -42, -38, 0, 32, 5, -9, -39, 14, 8, -20, -12, -13, 6, -1, 17, 4, 37, 10, -14, -13, -18, -8, -13, -23, -18, -13, 27, 30, 28, -3, 34, 13, 11, 8, -3, 20, -6, 30, 7, 6, -13, 18, 10, 5, 11, -11, 32, 18, -8, -9, -16, -9, 7, -5, -30, -5, 13, -1, 21, -16, -1, -8, -3, -9, -43, 15, -2, 39, 9, -10, 0, -19, 27, -11, -1, 14, -12, -4, -2, 0, 11, 20, 16, -1, -37, 16, -3, 11, 1, 2, 17, -10, 2, -9, 21, 9, 10, 14, -18, 14, -20, 16, 4, 22, -26, -18, -14, 4, -2, -7, 40, 3, 13, 14, 9, 26, -12, 9, 12, 6, -1, -10, 1, -17, -1, -19, 12, -9, -33, -2, 2, 9, 0, -25, -5, -3, -2, 11, -26, -15, 15, -7, -2, 6, -12, -5, 4, 19, 3, 7, 20, 38, 28, 5, -17, 4, -18, 19, -42, -8, 16, -11, -9, -1, 21, 18, -7, 11, 7, -26, -3, -12, 1, -1, -29, -2, 28, 1, 3, 23, -7, -12, 21, -3, -25, 13, 2, -19, -2, 15, -14, 14, -21, 5, 4, 19, 12, -30, 9, 17, 10, -2, -20, 20, -4, 37, 10, 15, 8, 1, -2, 13, 19, -17, 47, 1, 44, -3, 19, -10, -12, -30, -25, -8, -37, 13, -20, -20, 13, -7, 2, 15, -35, -13, 16, -23, 15, 2, 24, -6, -20, 1, 8, 1, 20, -21, -20, 1, 3, -21, 1, -30, -6, -14, -18, -32, -18, 8, 7, 5, -2, -1, -9, 4, 12, -15, -15, -8, -2, -1, -19, 8, -13, -18, 10, 16, 18, 31, 7, 7, 0, -1, -6, -3, 2, -14, 1, -19, 1, 6, 2, 8, -1, 9, -36, 13, -19, 20, 10, -1, -18, 9, 62, -10, -1, 11, 34, 17, 7, -16, 0, 28, 0, 8, -10, -28, 13, 21, 31, -24, -11, -3, -9, 9, 1, 3, 7, 5, -20, -14, -17, 12, -9, 5, -3, 14, 16, -41, -12, 7, 4, 16, -39, 30, -26, 34, -31, -26, -3, -13, -12, -9, 43, -4, 32, -6, 13, -3}

#define TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0_DEC_BITS {7}

#define TENSOR_LSTM_LSTM_CELL_BIAS_0 {0, 0, -1, -1, 0, 2, 1, 0, 0, -1, 0, 3, 0, 0, 2, -3, -1, 3, 0, -1, 9, 2, -5, 3, 2, 5, -3, -1, -2, 2, 4, -3, 66, 66, 66, 65, 63, 68, 68, 69, 66, 67, 69, 69, 70, 65, 67, 64, 65, 68, 63, 67, 70, 69, 60, 72, 70, 73, 62, 64, 66, 68, 71, 63, 3, -1, -2, -1, 1, 1, -2, 2, -1, -1, 1, -1, 1, 1, -1, -1, 0, -2, 1, 1, 3, -1, 1, 0, -3, -2, -1, -2, 3, -1, -1, -2, 0, 0, 0, -1, 2, 3, 1, 1, 2, -1, -1, 5, 1, -1, 0, -3, -1, 2, 0, 0, 7, 3, -5, 3, 2, 4, -3, 0, 1, 3, 3, 0}

#define TENSOR_LSTM_LSTM_CELL_BIAS_0_DEC_BITS {6}

#define LSTM_BIAS_LSHIFT {8}

#define LSTM_OUTPUT_RSHIFT {7}

#define TENSOR_DENSE_KERNEL_0 {24, -23, -13, 86, 4, -63, 52, 78, -34, -33, -17, 74, -77, 87, 8, -40, 34, 51, 22, 0, -73, 19, -42, -34, 61, 25, -35, -7, 42, 11, 62, 56, 18, 39, -71, 23, -99, -42, -47, 24, -66, 59, 51, -60, -60, -60, 66, -59, 23, -14, 18, 49, 55, 26, -65, 47, 34, -22, -4, -38, -12, 43, 5, 19, 61, 32, 26, -44, 35, 14, 53, 61, -48, -90, -29, 56, 21, -45, -39, 34, -53, 39, 29, 4, 69, -1, 19, 18, -39, -45, 2, 47, -74, 16, 0, -27, 96, -56, 44, 54, 34, -90, 11, 57, 28, 77, 57, -37, -32, 44, 54, 10, 27, -83, 65, 58, 44, -15, -14, -36, -1, -18, 6, -54, 3, 3, -62, 20, -93, 12, -35, 38, -46, -49, 29, -39, 13, -56, -19, -43, 54, -54, 63, 9, -52, 0, 41, -12, -35, -47, 21, -48, 41, 67, -77, 78, 60, 6, -80, 24, 3, -89, 11, -49, 58, 81, -56, -64, 40, 17, -56, -20, 28, 55, 38, -14, 2, 50, -34, -19, 32, 52, -16, 31, -80, -40, 42, 40, -50, 48, 66, 30, 70, 22, 67, 38, 54, 13, -68, 28, -35, -58, 75, 22, -25, 67, 115, -11, -71, -28, 36, 6, -58, -71, 62, 49, 54, -80, 73, 47, 29, -30, 62, -76, 17, -46, 2, -10, -50, 28, 41, 47, 64, -39, -19, -43, 71, 5, 70, -29, -70, 31, 46, 60, 18, 57, 65, 31, 5, -86, 20, 6, 39, 33, 10, 72, -1, -44, -30, 40, -18, -11, -41, -80, 72, -31, 8, -76, -11, 14, -42, -23, -55, -50, -38, -57, 46, 31, -13, -6, -32, 14, -61, 9, 1, 39, -60, 5, 50, -29, 39, -65, -84, -7, -61, -68, 76, 64, -59, -15, 18, -48, 59, 19, -72, 75, -45, -27, -36, -86, 53, -1, -89, 14, 47, 49, -54, -6, 28, -46, -2, 7, 27, -33, 40, 69, 2, 26, -8, 63, -30, -75, 41, -47, -63, -44, 6, -91, 22, -18, 114, 40, -80, -85, -58, -3, 57, 23, -68, 41, 59, 9, 85, 44, 5, 41, -57, -94, 47, 36, 14, -73, 36, -31, -33, -13, -38, -42, 57, 12, -54, -13, 39, -56, -14, -46, 34, -61, -75, 96, 18, -103, -97, 41, 61, 47, 38, 10, -76, -58, 31, -14, -78, -16, -41, -41, 16, -49, -10, 28, -51, 80, 6, -9, -24, 76, -21, 49, 31, -3, -2, -22, -24, 24, 53, -13, -12, 98, 53, 42, 41, 23, 35, 78, -27, 50, 64, 28, -36, 64, 35, -5, -55, 43, 51, 2, -27, 13, 34, -58, 76, -71, 27, -70, 52, -76, -18, -21, -57, 23, 55, 2, -37, 17, -47, 50, 82, 42, -64, 74, -62, 27, -29, 93, -29, 20, 61, 68, 55, 89, -62, 22, -31, -22, -16, 28, 27, -29, -41, 31, 83, -19, -77, -43, 27, -66, 70, -32, -7, 63, -18, 15, -32, 58, -39, -43, 21, -51, -17, 67, 51, -29, 7, -53, 11, 32, 62, -27, 12, -7, -41, -52, 27, 79, 36, 13, 17, -39, -40, -47, 6, -46, -2, -36, 18, -37, 27, 69, 32, 80, -65, -61, 3, -71, -1, -70, -77, 19, -46, -24, 3, -51, 21, 31, 43, -69, -72, 49, -1, -64, 48, 58, -60, -72, -11, 45, 39, 64, -57, 23, -65, -20, 60, -2, 36, -39, -5, 19, 60, -15, 29, 50, 2, -12, 3, -61, -81, 37, 24, 38, 19, -57, -15, 11, 22, 45, 65, 76, 37, -79, -17, -26, -37, 17, -19, 14, -93, 54, 79, 60, -9, 66, 36, -41, -19, 16, -73, 18, -101, -25, -45, 2, 66, -28, -28, -5, 76, 76, -68, -38, 66, 3, -30, -24, 63, 18, 26, 35, -64, 25, -38, 38, 50, 0, -7, -85, -8, -94, 59, -69, -67, 15, -75, 7, 16, -39, -57, 44, -94, -33, 33, -33, -72, 6, 72, -6, 16, 74, -53, -14, -46, -1, -7, -19, -27, -3, 38, -74, 22, 21, 48, -3, -60, 25, -65, 37, -111, 55, -12, -24, -59, 4, 51, 15, 1, -48, -77, -42, 56, -20, 36, 48, -31, 54, 8, 65, 45, 53, -69, 42, 66, 6, -65, -43, -8, 12, -2, -79, 26, -31, -20, -10, 96, 64, -99, 25, 12, 14, -121, -72, -37, -66, 28, -24, 25, -128, -59, -30, -74, -20, -18, 56, -33, -22, 22, -83, 61, 64, -10, -59, -37, 118, 76, -61, 51, -28, 59, -49, -38, 8, -81, -15, -34, 20, 61, 27, 41, 45, -71, 16, 52, 21, 46, -65, 21, 37, 23, 80, -54, 46, -2, -22, 62, -15, -22, 23, -28, 65, -3, 0, 53, -7, 85, -16, 31, 34, 1, 52, -33, -16, -33, 83, -37, -28, -8, 9, 5, -69, -49, -78, 37, 12, 57, -47, 8, 87, -62, 25, 24, -41, -39, 52, -10, 50, -43, 50, 7, -6, 13, 19, 55, 21, 25, -19, 39, -45, -39, -7, -19, -21, 22, 49, -13, 9, -58, 20, 74, -24, 36, -33, 81, -41, 62, 75, 63, -35, -115, 2, -94, 7, 40, 2, -38, -79, 73, -14, 76, 22, 50, 62, -76, -43, -59, -36, 20, -89, -22, -6, 100, -45, 41, 34, 56, -10, -18, -21, -21, 16, 12, -31, 50, -86, -21, -29, 62, -54, -60, -31, 42, 75, -32, 35, -17, 21, -33, 33, 3, -4, 47, 22, -32, -54, -56, -40, -44, -31, 10, -54, 0, 58, 26, -29, 28, -85, 42, -1, 20, 51, 47, -31, 27, 7, 55, -68, 37, 11, -6, -9, 93, -13, 17, 50, -80, -72, -71, -79, 41, 37, -52, 66, 70, -32, -41, 39, -14, 21, 51, 80, -42, 16, 57, 30, -53, 44, 76, -44, 30, -62, 19, 28, 74, 31, 20, -14, 40, -10, 21, -16, -63, 28, 61, -11, -24, 96, -7, -99, -29, 85, -18, 40, 109, -68, -42, -37, -7, -56, 67, 39, -52, -78, 24, 48, -90, -93, 1, -18, -81, 10, 63, -70, 84, -81, -62, -4, 28, -65, -19, 70, -4, 13, 1, -61, 60, 0, 71, -61, 23, -3, 14, -82, -76, -58, -8, 57}

#define TENSOR_DENSE_KERNEL_0_DEC_BITS {8}

#define TENSOR_DENSE_BIAS_0 {-2, -80, 107, -99, -114, 123, -122, 31, -22, 25, -64, 106, 43, -116, 0, -51, 34, -1, 31, 75, 45, -73, 94, 23, -78, -4, 25, -94, -90, 101, -56, 29}

#define TENSOR_DENSE_BIAS_0_DEC_BITS {11}

#define DENSE_BIAS_LSHIFT {4}

#define DENSE_OUTPUT_RSHIFT {9}

#define TENSOR_DENSE_1_KERNEL_0 {53, 27, 22, -23, 75, 41, 47, 6, -8, 5, -71, 0, 50, 67, -50, 44, -76, -1, 65, 66, 91, -31, -22, 87, 20, 58, 100, 21, 11, 26, -79, -6, 7, -42, -95, -11, 4, 47, -67, -28, 11, -56, 12, -56, -39, 26, -12, -43, 8, -22, 11, -15, -17, -1, 18, 68, 68, -32, 45, 72, -32, 24, 31, 52, 55, 48, -21, 16, -47, 48, -59, 73, 20, 25, -34, 78, 73, 44, 25, -54, 70, -78, 35, -17, 26, -56, -71, -85, 21, 49, 74, -22, 21, 58, 16, 28, -21, -11, -65, -78, 8, 27, -48, -1, -75, -54, 13, 37, -68, 35, 64, 55, -22, 34, -81, -40, -11, -29, 48, -42, -52, 61, 44, -80, 41, -86, -86, 56, 48, -30, -38, -40, -20, -16, -13, -25, -57, 101, -63, -11, 91, 68, -18, -64, -67, -49, 12, 1, 37, 41, 68, 34, 42, -21, 16, -29, -40, 27, -8, -6, 7, -70, 30, -12, -39, 88, 51, 63, -51, -97, -11, -47, -66, 7, -39, 87, 62, -35, -42, 54, 50, 39, 32, -54, 20, 87, 39, 34, -5, 24, 74, -73, -45, 76, 33, -74, -53, 6, -79, -33, 62, 69, 58, -58, 67, -29, -38, 37, 76, -48, -15, -97, 37, -30, -102, 29, -23, -14, -16, -100, 63, -67, -25, -73, -81, 24, 76, -44, -8, 6, -54, -2, -58, 14, -43, 53, 59, -44, -13, 54, -83, -17, 56, -27, -34, 20, 45, 65, 29, -36, 1, -90, -60, -55, 14, -55, -45, -1, -68, -4, -36, 30, 33, -12, 44, 49, -69, 24, 8, -61, 59, -57, 98, 83, 71, 77, -6, -71, -59, -72, -82, -5, 6, 21, -79, -26, 28, 6, 46, 22, -54, -62, 49, -10, 5, -63, -79, -61, 18, 30, -49, 37, 34, 49, 49, -77, -71, 18, -2, 44, 83, 6, -11, -35, 31, 6, 40, -52, 14, -73, 8, 66, 29, 8, -23, -7, -34, -10, -17, -6, 31, -38, -55, -49, -6, -55, -65, 19, -36, -94, -74, 18, -65, 51, -74, 41, 50, -65, -20, -45, 89, -38, 50, 59, -9, 65, -15, -5, 63, -3, 31, 58, 22, -47, -6, 8, 24, -87, -20, 18, 47, -5, -47, 17, -46, 32, -47, 49, 40, -80, -43, -78, 14, 43, -17, -19, 4, 61, 38, 22, -21, 65, 62, -11, 54, 38, 8, -18, 44, 44, -71, 8, -20, -51, 36, 23, 54, 12, -13, 72, 31, -15, 14, -76, 20, 6, 42, -67, -33, -4, -71, -49, -81, 42, -48, 29, 54, -10, 48, -35, -69, 21, 30, -47, 55, -23, 76, -73, -52, -32, 73, 2, 16, 5, -12, -44, -66, -11, 60, 9, -82, -21, 21, 64, -52, -18, 32, 60, -37, 81, 55, -48, -63, 18, -29, -41, 60, 61, -67, -67, -70, 25, 49, -59, -39, 0, -13, -57, 14, -10, -58, 62, 43, 41, 91, 33, 51, -74, -36, -26, 36, -59, -20, -22, 52, 80, 2, -45, 33, -20, 36, 53, -56, 52, 49, 27, 38, 24, -83, 17, -15, 51, 80, -26, -79, 11, -15, 2, 54, -13, 38, -16, -64, -62, -51, -3, -43, 12, 16, 3, 58, -23, -25, 52, 60, 70, 66, 61, -99, 11, 31, -25, 34, 72, -44, 24, -58, -35, 78, 27, 67, -46, -2, -69, -84, -61, -13, -55, 53, -42, -59, 16, -48, -34, 67, -11, -7, -67, 1, 37, 34, 57, -48, 69, 32, 31, 20, -78, -86, 30, 37, -53, -3, 77, -42, 63, -41, 9, 17, -27, 67, -23, -107, -67, -38, 4, -60, -51, -58, -77, -11, -40, -77, -21, -53, 29, -19, -19, -44, -43, 35, -45, -29, -6, 22, 25, 2, 28, 34, -37, 86, 56, 61, -53, 42, 66, 55, 84, -72, 63, -48, 37, 64, -16, -2, -59, 1, -74, -59, 10, -55, 16, -74, 25, 21, 41, -94, 16, -2, 32, 55, -1, -6, -26, 3, 21, 5, 70, -9, -25, 28, -24, 47, 31, -32, 11, 4, -87, -3, -36, -97, 31, 67, 15, -5, 59, 63, 80, 68, 25, 11, 52, -6, 63, -94, -58, -9, 47, -55, 61, 18, -70, 54, -63, 40, -28, 38, 77, 29, 61, 4, -16, -31, -64, 83, 33, 28, 2, 52, 56, 1, 68, 75, 45, -58, 41, -60, -70, 30, -9, 22, 46, -13, 48, -87, -18, -76, 34, -2, -26, -15, -73, -72, -73, -63, 20, -19, -79, 3, 70, 23, 40, -59, -15, -5, 48, -25, -37, 52, 21, -64, -35, 52, 71, 12, 9, 96, 47, 73, -17, 71, -69, 57, 56, -46, 26, -10, -17, -44, -79, -49, 65, 44, 59, -21, 36, 24, 31, 19, -55, 30, 55, -48, 51, -19, -78, 33, -17, 40, 34, 31, -45, -51, -61, 26, -10, 71, -54, 65, -27, 44, -68, -37, -43, -27, -64, -31, 18, -4, -2, -19, -9, 54, 66, -78, -34, -19, 27, -72, 62, 74, 35, -32, 3, -1, -83, 22, 43, 20, -38, -30, -62, 59, 18, -13, 29, 50, 3, -63, -39, -55, -68, -63, -42, -41, 5, 34, -6, -6, 83, 36, 41, 47, -30, 22, 78, 48, -3, 29, 64, 2, -57, 76, -40, 52, -52, -39, -65, -12, -64, 6, -4, -79, -2, 64, -27, 32, 1, -23, -12, 83, -67, 40, -6, -35, -12, -92, 25, -37, -10, -59, 73, -24, -19, -27, 55, -45, -4, -10, 42, 11, 52, -83, 14, 82, 20, 20, 42, 28, -18, 44, -66, -26, 0, 68, -76, 29, 41, -8, 84, -18, 75, -36, 3, -48, 76, 57, 32, 7, 60, -15, -8, -19, -4, -63, -69, -61, 25, 72, -18, -7, -22, 23, -71, 25, 41, 62, 84, -60, 52, 7, 87, 44, -38, 13, -6, 39, 22, -13, -10, 65, -4, -72, 22, 0, 30, -93, -13, -7, -71, -25, -50, 6, -14, 34, 58, 36, -24, -75, -46, -3, 51, 1, -12, -26, -55, -19, 95, -39, -85, -40, -35, 2, 7, -38, 65, 16, 86, 43, -27, 62, 52, -57, 7, 73, -80, -15, -62, -28, 35, 65, 19, 27, -56, 3, -61, 60, -31, 22, -61, 5, 36, 50, 0}

#define TENSOR_DENSE_1_KERNEL_0_DEC_BITS {8}

#define TENSOR_DENSE_1_BIAS_0 {4, -6, -31, -95, 89, -21, -28, 50, -68, -9, -76, 38, 57, 89, -65, 13, -35, 14, 41, -76, -87, -17, -25, 97, -91, 12, -2, 81, 31, 32, -45, -70}

#define TENSOR_DENSE_1_BIAS_0_DEC_BITS {11}

#define DENSE_1_BIAS_LSHIFT {3}

#define DENSE_1_OUTPUT_RSHIFT {9}

#define TENSOR_DENSE_2_KERNEL_0 {14, -105, -83, -100, 113, -105, -92, -53, -70, -101, -22, 87, 13, 113, -48, -102, -73, -67, -32, -21, -69, 86, -66, -49, -49, 74, 35, 12, -94, -16, -69, -13, -83, 22, 39, -69, 79, 97, 97, 10, 33, 67, 2, -43, 87, 15, -94, 31, 57, 80, 65, -35, -33, 84, 102, -55, 29, -105, -89, 26, 46, -81, -4, -32, -13, -34, 37, 62, -89, 94, 103, -52, 70, 13, 43, -54, -68, -66, 66, -73, 58, -49, -16, 84, -26, 72, 100, -55, 104, -57, 14, -82, -87, -64, -5, 46}

#define TENSOR_DENSE_2_KERNEL_0_DEC_BITS {8}

#define TENSOR_DENSE_2_BIAS_0 {11, 17, -94}

#define TENSOR_DENSE_2_BIAS_0_DEC_BITS {11}

#define DENSE_2_BIAS_LSHIFT {2}

#define DENSE_2_OUTPUT_RSHIFT {9}


/* output q format for each layer */
#define INPUT_1_OUTPUT_DEC 7
#define INPUT_1_OUTPUT_OFFSET 0
#define LSTM_OUTPUT_DEC 7
#define LSTM_OUTPUT_OFFSET 0
#define DENSE_OUTPUT_DEC 6
#define DENSE_OUTPUT_OFFSET 0
#define DENSE_1_OUTPUT_DEC 5
#define DENSE_1_OUTPUT_OFFSET 0
#define DENSE_2_OUTPUT_DEC 4
#define DENSE_2_OUTPUT_OFFSET 0
#define SOFTMAX_OUTPUT_DEC 7
#define SOFTMAX_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[780] = {0};

const nnom_shape_data_t tensor_input_1_dim[] = {130, 6};
const nnom_qformat_param_t tensor_input_1_dec[] = {7};
const nnom_qformat_param_t tensor_input_1_offset[] = {0};
const nnom_tensor_t tensor_input_1 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_input_1_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_input_1_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_input_1_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};

const nnom_io_config_t input_1_config = {
    .super = {.name = "input_1"},
    .tensor = (nnom_tensor_t*)&tensor_input_1
};
const int8_t tensor_lstm_lstm_cell_kernel_0_data[] = TENSOR_LSTM_LSTM_CELL_KERNEL_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_kernel_0_dim[] = {6, 128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_kernel_0_dec[] = TENSOR_LSTM_LSTM_CELL_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_kernel_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_lstm_lstm_cell_recurrent_kernel_0_data[] = TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_recurrent_kernel_0_dim[] = {32, 128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_recurrent_kernel_0_dec[] = TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_recurrent_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_recurrent_kernel_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_recurrent_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_lstm_lstm_cell_bias_0_data[] = TENSOR_LSTM_LSTM_CELL_BIAS_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_bias_0_dim[] = {128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_bias_0_dec[] = TENSOR_LSTM_LSTM_CELL_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_bias_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_bias_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_lstm_cell_config_t lstm_lstm_cell_config = {
    .super = {.name = "lstm"},
    .weights = (nnom_tensor_t*)&tensor_lstm_lstm_cell_kernel_0,
    .recurrent_weights = (nnom_tensor_t*)&tensor_lstm_lstm_cell_recurrent_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_lstm_lstm_cell_bias_0,
    .q_dec_z = 4,
    .q_dec_h = 7,
    .q_dec_c = 4,
    .units = 32
};

const nnom_rnn_config_t lstm_config = {
    .super = {.name = "lstm"},
    .return_sequence = false,
    .stateful = false,
    .go_backwards = false
};
const int8_t tensor_dense_kernel_0_data[] = TENSOR_DENSE_KERNEL_0;

const nnom_shape_data_t tensor_dense_kernel_0_dim[] = {32, 32};
const nnom_qformat_param_t tensor_dense_kernel_0_dec[] = TENSOR_DENSE_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_kernel_0 = {
    .p_data = (void*)tensor_dense_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_bias_0_data[] = TENSOR_DENSE_BIAS_0;

const nnom_shape_data_t tensor_dense_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_dense_bias_0_dec[] = TENSOR_DENSE_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_bias_0 = {
    .p_data = (void*)tensor_dense_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_output_shift[] = DENSE_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_bias_shift[] = DENSE_BIAS_LSHIFT;
const nnom_dense_config_t dense_config = {
    .super = {.name = "dense"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_bias_shift
};
const int8_t tensor_dense_1_kernel_0_data[] = TENSOR_DENSE_1_KERNEL_0;

const nnom_shape_data_t tensor_dense_1_kernel_0_dim[] = {32, 32};
const nnom_qformat_param_t tensor_dense_1_kernel_0_dec[] = TENSOR_DENSE_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_kernel_0 = {
    .p_data = (void*)tensor_dense_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_1_bias_0_data[] = TENSOR_DENSE_1_BIAS_0;

const nnom_shape_data_t tensor_dense_1_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_dense_1_bias_0_dec[] = TENSOR_DENSE_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_bias_0 = {
    .p_data = (void*)tensor_dense_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_1_output_shift[] = DENSE_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_1_bias_shift[] = DENSE_1_BIAS_LSHIFT;
const nnom_dense_config_t dense_1_config = {
    .super = {.name = "dense_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_1_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_1_bias_shift
};
const int8_t tensor_dense_2_kernel_0_data[] = TENSOR_DENSE_2_KERNEL_0;

const nnom_shape_data_t tensor_dense_2_kernel_0_dim[] = {32, 3};
const nnom_qformat_param_t tensor_dense_2_kernel_0_dec[] = TENSOR_DENSE_2_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_2_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_2_kernel_0 = {
    .p_data = (void*)tensor_dense_2_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_2_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_2_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_2_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_2_bias_0_data[] = TENSOR_DENSE_2_BIAS_0;

const nnom_shape_data_t tensor_dense_2_bias_0_dim[] = {3};
const nnom_qformat_param_t tensor_dense_2_bias_0_dec[] = TENSOR_DENSE_2_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_2_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_2_bias_0 = {
    .p_data = (void*)tensor_dense_2_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_2_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_2_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_2_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_2_output_shift[] = DENSE_2_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_2_bias_shift[] = DENSE_2_BIAS_LSHIFT;
const nnom_dense_config_t dense_2_config = {
    .super = {.name = "dense_2"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_2_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_2_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_2_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_2_bias_shift
};

const nnom_softmax_config_t softmax_config = {
    .super = {.name = "softmax"}
};
static int8_t nnom_output_data[3] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {3};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[7];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&input_1_config);
	layer[1] = model.hook(rnn_s(lstm_cell_s(&lstm_lstm_cell_config), &lstm_config), layer[0]);
	layer[2] = model.hook(dense_s(&dense_config), layer[1]);
	layer[3] = model.hook(dense_s(&dense_1_config), layer[2]);
	layer[4] = model.hook(dense_s(&dense_2_config), layer[3]);
	layer[5] = model.hook(softmax_s(&softmax_config), layer[4]);
	layer[6] = model.hook(output_s(&output0_config), layer[5]);
	model_compile(&model, layer[0], layer[6]);
	return &model;
}
