#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_LSTM_LSTM_CELL_KERNEL_0 {3, 13, 20, 35, 12, 11, -10, 19, 37, -19, -7, 4, 4, 23, 15, 4, -17, 12, 26, -39, -19, -18, -35, 11, -38, -10, 1, -17, 44, -50, -45, 38, 19, -20, -20, 6, -29, 27, 4, 8, 60, -38, 5, -33, -14, 0, 37, -1, -17, -12, 43, 43, -2, 26, 27, 5, 8, -20, -25, -24, 46, 47, 2, 6, -6, -32, 31, -5, 10, -49, 1, 20, -33, -5, 33, 17, -15, 18, 30, -31, 58, -2, -11, 15, -30, -13, 12, 4, -41, 39, -5, 17, -30, 24, 13, 16, 28, -18, 7, 16, 46, 17, 10, 40, 21, -27, 9, 8, 36, -26, 1, 21, -28, 23, -5, -4, 15, 39, 38, -17, -7, 34, 65, -5, 18, -47, -37, 48, -1, 10, -31, -12, -34, 0, 21, -4, 16, -15, 32, -10, -13, 33, -7, -64, 17, -27, 6, -11, -9, 42, 7, -27, -8, -13, 16, 26, 7, 21, -20, 31, 38, 13, -22, -2, 33, 9, 2, 28, -21, 30, 14, -14, 23, -12, 4, -9, -32, 30, 17, -18, -13, -7, 5, 2, 1, 24, 3, 16, -25, -17, -18, 43, -9, 23, 19, 19, 1, -9, -32, 4, 18, -22, 25, -18, -4, 23, -7, 14, 17, 16, -6, 18, -28, -5, 27, 4, 34, 24, -43, -35, 27, -9, 3, 27, -32, 13, 16, -15, -34, -4, -20, -14, 34, 30, 19, 21, -24, 19, 5, -22, -4, 28, 6, 11, -32, 14, 33, 9, 9, 13, 21, -10, 9, 36, -6, 29, -3, 0, -3, -23, 57, -20, 1, 28, 5, -31, 27, 34, 1, 9, -16, -23, 79, -17, 10, 10, -17, -22, -1, 3, -19, 58, -26, 11, -31, 33, 42, -12, 34, 14, 27, -27, 36, -17, 29, 18, 18, -16, 11, 5, 21, -13, -14, -3, 13, -35, 44, 26, 33, -26, 18, -4, -1, -3, 52, 13, 28, -67, -36, -6, 34, -15, -21, 28, 29, -1, -21, 6, -25, 13, 7, 13, 22, 29, -8, 17, 37, -14, 14, 18, 28, 25, 4, -25, -42, 19, 3, 5, 10, -13, 9, 4, 22, 15, 20, 21, 20, -14, -16, 32, -14, 16, -9, 18, -14, -2, -21, 1, -19, -2, -12, -14, -20, 31, 11, -1, 1, 18, 6, 13, -32, 31, 8, -15, -22, -10, -8, 6, -40, -8, -17, -27, 10, -6, -20, -1, -16, 13, 17, -8, -28, 14, -29, -18, -5, -9, -14, 25, 5, -17, -36, -13, -2, 1, 7, -12, -9, 8, 11, 13, 41, 34, -21, 8, -46, -25, -5, -18, 32, 16, -12, -39, -21, -22, 28, 15, -24, -14, -31, 46, -35, -31, -13, -9, -37, 13, -16, 23, -24, 13, 36, 41, 4, -34, -4, 11, -31, -28, 23, 23, -27, -43, 3, 17, 22, -15, 10, 23, -5, 27, -6, -9, -35, -15, -28, -16, -11, -31, 1, 16, -9, 6, -22, -25, 48, -4, -17, -35, 36, 5, -4, -22, 30, 38, 22, 8, 22, 7, -18, 2, 18, -26, 5, -1, -17, -26, -10, 15, -14, 14, -48, 17, -16, -1, 15, -3, 13, -17, -18, 17, -4, 1, -12, 13, -25, -31, 6, 19, 7, -25, -24, -24, -13, -2, 10, -5, 43, -15, 4, 23, -35, -5, 20, 26, -29, 12, 15, 24, 29, 30, -9, -36, 33, -6, -8, 27, -7, 24, 19, -20, -5, -29, -20, 9, 8, -2, -27, -7, 18, -20, 0, -21, -11, -21, 37, -32, 31, 10, -3, 35, -7, 29, -17, 19, 42, 3, 23, -15, -29, -1, -18, 8, 11, -17, -13, -1, -17, 2, -5, -20, 32, -9, -34, -33, 32, -44, -38, 34, -74, 4, 17, -24, -32, -3, 3, -5, 15, 15, 19, -2, -35, 11, -19, -20, 18, 13, 21, -9, -15, 28, 8, -1, -22, 1, -14, -29, 11, 71, -10, 31, -16, -45, 30, 12, 36, 6, 4, 20, 15, 26, 33, -1, 40, 31, 8, 5, 35, 26, -17, -8, -13, -34, 2, 32, -17, 25, 0, 32, -22, 41, 21, -9, -5, -17, 3, 6, 58, -12, 19, 41, 31, 3, 11, 0, 20, -7, 0, -12, -26, -14, 13, 22, 14, -21, 26, 17, -8, 18, 45, 22, 42, -68, 3, 10, 4, -15, -35, 7, 0, -16, 12, 3, -27, -11, 21, 0, -7, -5, 14, -22, 16, 16, 1, 7, 13, 31, 17, -7, -6, 23, 5, 20, 32, -32, 18, 19, -10, 27, 9, 29, 13, -14, 8, 6, 8, -13, -21, -9, 7, 17, -9, -16, -23, 5, -12, 16, -5, 16, 24, -16, -32, -3, 12, -22, -6, 34, 10, 17}

#define TENSOR_LSTM_LSTM_CELL_KERNEL_0_DEC_BITS {7}

#define TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0 {15, 10, 6, 1, 24, -18, -2, -23, -2, 5, 13, -3, 13, 27, 11, 9, 17, -4, 23, 16, 6, -33, -3, -8, 1, 3, 4, 10, 8, 13, -17, 11, 0, -10, 5, -13, -18, 4, 9, 8, 5, -11, 6, 3, -7, -1, -12, -15, -3, -4, -2, -12, -3, 1, -11, 23, 1, 15, 8, 1, 9, -4, 11, 8, -6, -3, -7, -20, -8, 12, -13, -11, 19, 11, 3, -2, 3, -19, 16, -11, 11, 10, -12, 30, 15, -11, 2, 10, -10, -23, 12, 11, 15, -5, -15, 12, 0, -5, -5, -14, 4, -6, 6, -8, 22, 4, -2, -16, -5, -5, -11, -1, -22, 11, -6, -22, -22, 0, 10, 3, -20, 11, 4, -23, -1, -14, 11, 12, -22, 15, 3, 10, -25, -6, 5, -25, 11, -10, -2, 10, -14, 13, 14, -22, 4, 0, 25, -7, 9, 15, 5, 19, 30, -7, 8, -22, 4, 4, -4, 1, -4, 9, 2, 26, 27, 3, 19, -7, -31, 14, -6, 25, -3, -10, -7, 27, -6, -11, -21, -17, -7, -4, 8, -16, -14, 8, -1, 28, 6, 24, 1, 12, 23, -7, -30, -13, 20, 4, -14, -1, 5, 11, -8, 13, 5, 16, -6, 24, -3, 5, 8, -2, 10, -3, 11, -5, 15, 14, -11, 19, 0, -18, -9, 0, -18, 15, 44, 24, -7, 16, 8, 13, 36, -2, -3, -11, -5, -16, 1, -1, -28, -10, 3, 13, 9, -8, 2, -1, -29, -5, -11, -8, -10, 5, 5, -9, -15, 18, 17, -7, -3, -9, 22, -24, 4, 7, 20, -9, -18, 11, 3, -1, 4, -12, -6, -4, 4, 3, 15, 12, 4, -6, -11, -9, -14, 18, 16, 1, 15, -11, 13, 0, 2, -18, 18, -11, 2, 3, 3, 18, 10, -19, 0, 2, -44, -10, 17, 5, -10, 8, 10, 2, 0, -8, -15, 2, 8, -13, -3, 5, -7, -3, 9, -13, 2, -15, 0, -15, -6, 5, -35, -6, 15, 10, 16, 25, 0, -3, 6, 3, -8, 13, 12, -14, -24, 3, 34, 23, -1, 26, 9, 3, -8, -9, 3, -3, -8, 45, -1, 3, 0, 7, -15, -9, 18, 0, -3, 10, 14, 3, 30, 20, 11, -10, -11, 5, 11, -22, 5, 4, -8, -3, -5, -2, -2, 5, -22, -5, -20, -5, 1, 4, 9, 10, -15, 15, -4, -4, 12, 3, 31, -2, 18, 25, 10, -16, -5, 4, 8, -19, -18, -3, -1, -3, -15, 19, -5, 4, -31, 10, -13, -31, 11, -1, -15, -11, 10, -33, -4, -12, 5, -46, 2, -27, 7, 15, -3, -48, -4, -3, 5, 27, 43, 4, 14, -4, -3, -30, -4, 8, -20, -4, 0, 23, 12, 1, -7, 9, 38, -14, 5, -18, 7, -7, -13, -7, 2, 4, 2, -19, -7, -27, 30, 19, 2, -29, -32, 15, 29, -8, 6, -3, -17, -6, -14, -16, 5, -6, 11, 3, -30, 2, 4, -3, 0, 15, -24, -10, -26, 14, 12, -4, 4, 2, 11, -21, -8, -9, 38, -23, 6, -7, -19, 2, 23, -24, -39, -14, -9, 2, -9, -15, -8, -8, 1, 7, -35, -21, -20, -13, -2, 2, 24, -4, -3, 5, -10, -7, -7, 11, -21, 7, -24, 10, 9, -9, -4, -8, -5, 12, 4, 32, -7, -3, 7, -20, -18, 2, 69, -15, 6, 23, 14, -2, 17, 3, 16, -11, -10, -17, -15, 0, 21, -7, 19, 16, 0, 4, -1, 19, -40, -5, -18, -19, -17, 18, -13, 1, 32, -2, -2, -4, 0, -1, 1, -11, 14, -4, 1, 12, -32, -7, 2, -6, -14, -23, 0, 4, -4, 41, -6, 8, -8, -18, 12, 16, 2, 9, -2, 3, 10, 4, -7, -12, 5, 3, 2, 8, -21, -6, -6, 3, 17, 6, -4, 0, -1, 9, -7, -16, 14, 15, -19, -3, -3, 15, 11, -2, -2, 6, -33, 4, 15, 7, 16, -21, -17, -4, 7, 3, -10, 32, 7, -4, 15, 9, -1, 7, -13, 4, -8, 0, 12, 23, -4, -15, -2, 0, 2, 1, 19, -6, 16, 8, -29, 9, -1, 10, -14, -1, 11, 11, -13, -40, 11, -3, -9, 10, 5, -12, 19, 15, -32, 10, -15, -14, 7, 0, -8, -6, -38, 29, -18, -40, -8, -16, 20, -9, 3, 30, -8, 1, 13, -9, 1, -1, -13, 18, -29, -21, 37, 2, 15, 25, -7, -1, -20, -17, -5, -25, 3, 11, 9, 3, -8, -17, 5, -12, -5, 4, -11, -33, 7, -2, -5, -5, 14, 25, -37, -5, -2, -4, 9, 4, -13, -2, 1, -7, 7, -12, -7, 4, 1, -15, -3, -2, -5, -4, -14, 0, 3, 6, 2, 13, 15, 1, -3, -6, -6, -9, 10, -2, 0, -11, -6, 10, -7, 8, 21, 13, 4, -20, 2, -10, 3, -14, 16, -9, -11, 3, 0, 20, -16, 19, 18, -13, -9, 3, -14, 3, -13, 1, -27, -10, -6, -4, -13, -2, 8, -7, -13, -3, -19, -9, 14, -16, 15, -2, -9, 19, 23, -6, -26, 17, 10, 19, 11, 5, 14, 10, 3, 14, 7, -1, 15, 18, 1, -11, -9, 6, 0, 7, -15, 13, -9, -14, 2, 0, 9, -7, 5, -7, -2, -6, -17, 20, 6, 15, -1, -9, 8, 8, 3, -20, -2, 9, -17, -4, -12, 3, 2, -3, 9, 5, 11, 0, 15, -8, -19, 20, 1, -9, -2, 7, -9, 1, -3, 32, -6, -6, -13, 8, 11, 10, -5, 20, 6, 19, -5, 10, -1, 11, 0, 19, -20, 7, -13, 9, -2, 3, 3, -21, -12, -34, 7, -11, -10, 0, 4, 40, 11, -34, 29, -6, -4, -2, -24, 13, 16, -3, 17, 4, 10, -9, -12, 11, 22, -7, 40, -1, 1, -22, 14, 0, -11, 5, -22, -20, 7, 19, -2, 3, -1, 13, 1, -6, 2, 9, 0, 10, -9, 12, 7, 9, 6, -28, -16, 25, -29, 1, 33, 32, -18, 14, 6, 27, 10, -6, 10, 11, 6, 17, 0, 0, 10, 6, -29, 0, -17, 0, 1, -19, -14, -8, -12, 2, 1, 4, -17, 24, -7, -7, -4, 13, -19, -6, 10, -6, 4, 10, -5, -16, 12, 8, 0, -11, 6, -23, -7, 13, 4, -21, 5, -1, 11, -17, 6, -10, -12, -13, -4, -3, -15, -7, 4, 19, -18, 36, 12, 2, 18, -4, -2, -11, -9, -12, 21, 1, -17, 19, -4, 17, 18, -26, -19, -5, -17, -5, 7, 4, 12, 10, 17, 1, -11, 8, 0, 7, 6, -30, 4, -2, -19, 12, -13, 0, 22, 6, 17, -6, 13, -23, -7, -8, -8, 13, 19, 24, 3, 3, 6, 1, 1, -22, 8, -3, 18, 10, -1, 2, -1, -17, -6, 3, 9, 0, 4, 18, 19, 13, -4, -14, 21, -2, -2, -1, 19, 15, -18, 10, 2, -6, 14, -4, -19, 7, -1, -5, 11, 5, -6, 2, -35, -3, 21, 9, -17, -6, 3, 4, 3, 25, 6, -6, 44, 28, 29, -19, 9, 17, 1, -5, 7, -25, 10, 17, -3, -13, 17, -12, -14, -5, -19, 3, -17, -7, 28, 1, 10, 1, -13, -7, -13, -10, -48, -22, 9, -6, -18, 25, -36, -30, -37, -27, -31, 31, 13, 25, 10, 1, -6, 10, 13, -12, 5, 11, -1, -1, -17, 11, -14, -6, -9, 5, 33, 26, -15, 29, 19, 19, 0, 12, 10, 18, -12, -14, 10, -12, -9, -6, 25, 12, -25, -7, 9, -34, 30, -13, -13, -6, 7, 15, -7, 12, -10, 1, 28, 22, -4, 13, 20, -6, -15, -14, -26, 2, 6, -10, -12, -19, 13, 9, -45, -26, -9, -23, 8, 7, -5, -22, -13, 6, 31, -3, -4, -1, 8, -18, -15, -16, -14, 1, 9, 2, 13, 10, -8, 14, 3, 5, -13, -2, 17, 21, -8, 3, -18, 1, -8, -20, -7, 4, 21, 1, 9, -20, -5, 8, 18, -25, 44, -26, 11, -4, -22, -19, 12, 10, -11, -8, 15, -6, 3, 10, 21, -25, 5, 2, 15, 15, 9, 10, 28, -25, -12, 6, -4, 18, -14, 10, -2, -18, 0, -16, 8, -13, 8, 51, 2, 38, 1, 11, 33, 12, 18, -14, 16, -2, -29, -4, 10, 26, -19, 18, -3, -4, -31, -6, -22, 15, -29, 11, 23, 12, -33, 1, 9, -6, -3, 23, 19, 11, 3, -12, -1, -2, -14, -23, -9, 10, 39, 2, 8, -11, -21, -7, -22, -16, 0, -14, -28, -17, -1, -17, 4, 1, -6, -3, 17, -3, 13, -11, -29, 27, 23, -17, 31, 8, -9, 5, 28, 6, -19, 18, -2, -17, -5, 3, 2, 15, -5, 14, 1, 14, -6, -40, 2, 18, -38, -4, -7, -17, 0, 12, 38, -50, -8, -26, -29, 6, 6, -31, 20, -16, -1, 1, 9, 6, -14, -24, -2, -7, 1, 3, -9, 12, -1, -2, 15, 8, 5, 21, 41, 8, 18, -23, 14, -10, -2, 12, -17, 9, 12, -12, 8, -16, 21, 18, -5, -3, 4, -1, 28, -15, -2, 2, -3, 15, 11, -3, 14, 7, 0, 6, -20, -7, 12, 22, 12, 7, -14, -9, -16, -17, 21, 8, 21, 9, 15, 3, 7, -1, 0, -19, 16, -32, -3, 5, 17, -3, -34, -12, 3, 6, 0, 3, 11, -9, 17, 20, 1, -8, -20, -4, 4, 3, 8, -12, -10, 13, 10, -16, 6, 20, -16, -22, -4, -12, 12, -15, 11, -6, -14, 0, -15, 10, -10, -24, 10, 17, -28, 0, 34, -5, 11, -1, 17, 18, 14, 2, 11, -16, 4, -27, -4, 15, 33, 9, 17, -7, 10, 24, 29, -9, -27, -18, -23, 5, 10, -6, 7, -15, 34, 2, 4, -27, 1, 6, 0, -15, -7, 16, 2, 8, -22, -14, 40, 17, -31, -7, 11, -3, 7, 34, -9, -8, -18, -21, 10, 21, -14, 6, -2, 10, 31, 10, -14, -8, -8, -3, 2, -15, 5, -5, -14, -12, 7, -29, -11, -15, 21, 9, 7, 11, 8, -5, 7, -13, -19, -25, 9, 9, 24, -11, -6, 2, -3, 2, 7, -13, 7, -28, 12, 16, 19, 22, 15, 10, 5, 24, -1, 20, -13, 13, -14, -25, 9, -9, -5, 14, 5, 13, 6, 22, 22, -9, 23, 3, -7, 14, -18, -7, 4, 16, 28, 13, -25, 7, -1, 0, -9, -6, 3, -35, -2, 5, 23, 6, -7, 5, 8, -21, -10, 12, -13, 28, 7, 9, 8, -20, 10, 4, 24, 15, 3, 29, 2, 5, 34, 3, 3, 11, -16, 8, 23, -4, 26, 19, -13, -10, -17, -6, -10, -20, -2, -12, -1, -11, -21, 6, -25, -6, 1, -5, -24, 4, 18, -10, -11, 8, 10, -8, -4, 0, 10, -8, -1, -10, 6, 23, -3, -30, -22, -14, 20, -8, -11, -24, 14, 19, 1, 9, -1, 3, 9, 3, 5, 14, -20, -1, 4, 6, -11, -6, 6, 9, 10, -6, 30, -19, -5, 3, 19, -8, 6, 19, 12, -9, -5, 23, 4, -4, -15, -1, -10, 17, -14, 13, 11, -14, -16, 8, -11, -4, -5, -19, -25, 0, -3, 1, -8, -12, -3, 16, -3, 9, -9, -7, 21, -7, -17, -4, -10, 26, 22, -3, -25, 46, 21, -2, 2, 7, -5, 0, -1, 5, 4, 1, -7, -3, -5, -27, -3, -2, 2, 0, -7, 17, -22, 12, -8, 5, -11, -8, 8, 6, 13, 4, -6, -13, 11, -8, -22, 13, 6, 10, -14, 1, 7, -11, 1, -18, -7, -7, -18, 3, -13, -19, -22, 14, 9, -18, -22, -2, 5, 1, 8, 2, 1, -12, 8, -2, 25, 10, 0, 17, 1, 1, -8, -5, 23, -31, -1, -5, -8, -9, -21, 13, -23, 13, -28, 26, 19, 12, 6, 24, 19, -19, 18, 22, -11, 10, 1, 9, 6, -12, 30, -15, 10, -5, -10, 22, 12, -15, 11, -29, -7, 3, 23, 18, 0, 0, 43, 18, -7, -15, -4, -5, -22, 5, -5, -17, -2, 11, 3, -20, -3, 7, 11, -9, 6, 3, 4, -24, 4, 6, -2, 5, 3, -17, 8, 37, 11, 0, 21, -11, 6, -3, -1, 4, -6, 0, 3, -11, 1, 16, 12, -10, 3, 11, -6, -6, 11, 15, -3, -14, -15, 0, 13, -14, -18, 14, 4, 1, 18, 8, 1, -3, 1, -5, -10, 19, 5, 11, 17, 11, -3, -7, -20, -1, 9, -19, 18, 2, 2, -22, -4, -3, 4, -7, 3, -1, 5, -7, 12, 15, -24, -8, -4, 16, -7, 5, -13, 4, 15, -7, 22, -7, 14, 0, 3, 11, -5, -1, 0, -11, 11, -18, -22, 8, -12, -16, 0, -3, 1, -4, 10, -14, -4, -1, -3, 5, 8, -7, 1, -19, -5, 23, -36, 4, -6, 6, 3, -3, -20, -4, 4, 8, 7, 5, 10, -21, -1, 0, 10, 15, -11, -17, 4, -17, 2, -21, 0, -29, -4, 2, 0, 18, -4, -18, -9, 5, -15, 16, -9, 9, 14, -3, -19, -12, 18, -12, 13, 1, -8, -15, -12, -2, 6, 23, 9, -21, 0, -21, -6, -4, -1, -7, -20, 33, 0, -8, -5, -8, 8, 21, -3, 18, -10, 0, 0, 2, 17, -9, 0, 14, -11, 4, -22, 11, -8, -25, -17, 8, 18, 2, 15, 3, -2, 6, -3, 17, 15, 2, -17, -20, 2, -21, -4, -2, 7, -17, 5, 8, -21, -19, 9, 0, 3, -11, -6, 3, 4, -13, 21, -11, -1, 4, -31, 4, -8, -12, 13, 15, 24, 31, 15, -17, -15, -15, 21, 1, -4, -10, 6, -11, 14, -11, 13, 23, -1, -5, -6, 0, 16, 18, 16, -11, -9, 13, 12, -7, 0, -15, -2, 4, 22, -3, -8, -16, -17, -3, 6, -7, 4, 22, 18, 6, -8, -20, 6, -9, 2, -6, 12, 14, 17, -16, -12, -17, -6, -5, 15, 6, 1, -11, 5, -3, 12, 4, -11, -4, 1, -6, 9, 3, 1, 1, 3, 5, -12, -12, -2, 22, 1, -17, -22, 2, -1, -8, -25, -13, 20, 1, -20, -2, 6, 7, 15, -2, 14, 0, 26, -9, 3, -4, -15, -28, 20, 21, 0, -1, 11, -26, -12, -7, 0, 27, 3, 20, 12, 1, -3, 1, 2, -16, -15, -10, -24, -7, -5, -7, -7, 2, 12, -7, -7, 15, 10, 12, -7, -2, -17, -10, -6, -15, 12, 19, -5, -11, 16, -4, -3, -4, 2, -5, -25, -5, 12, 5, -11, -2, -3, 17, -8, -11, -6, 14, 5, 26, 1, -4, 23, -6, 10, -25, -1, -2, -5, -12, 5, -6, 4, 6, 2, -4, -13, -10, -9, 15, 9, 24, 0, -22, 15, 6, 0, 11, 2, 16, -5, -19, -9, -33, 14, 13, 8, -8, -1, 4, -3, -17, -9, 25, 11, 28, 5, 3, -11, 5, -2, -1, 10, -4, 19, 16, 12, -14, 23, -4, 9, 6, -2, 6, 23, -15, -9, 6, -3, 19, 23, -6, -11, 13, -16, -5, -1, 9, 16, 8, 21, 0, 38, 0, 20, 13, -2, 8, -14, -4, -7, -3, 14, 14, -9, -20, 28, -19, 31, -18, -6, -16, 26, 3, -6, 19, 7, 2, -5, 6, -1, -17, 24, -9, -7, -13, -17, -12, 8, -13, 1, 17, 0, 5, 3, -4, -8, 14, 2, -14, 12, 6, -21, 6, 12, 15, 23, 16, 3, 1, -16, 7, 0, -5, 24, -7, 16, 4, -7, -13, -8, -20, -9, -10, -1, -3, 7, -4, -26, -16, -5, 15, 2, -5, 2, -6, -21, 11, 23, -32, -9, 13, -22, -11, 4, 10, 21, -5, 13, -5, -1, -8, -8, -12, -9, 8, 8, -2, -3, 20, -8, 18, -14, 6, -15, -4, 18, 16, -3, -18, -14, 13, 24, -13, -12, 3, -12, -30, 5, 2, 4, 11, 4, 3, -5, -2, 12, 22, -15, -7, 5, 18, 7, 9, 4, 23, 20, 20, 10, -4, -18, 22, -11, 16, 0, -17, 10, 25, 11, -3, -11, 16, 17, -10, -13, 22, 10, 2, -26, 9, -5, 23, 12, -13, 8, 8, 36, 12, 3, -5, -8, 12, 14, -4, 20, -3, -5, 7, -16, -11, -7, -5, 15, -9, -5, 16, 13, -11, -20, -4, 16, 20, -10, 8, -33, 12, -12, -10, 3, 33, 13, -3, 4, 0, -18, -9, 0, -9, 14, -9, 19, -22, 0, -1, -16, -1, -5, 9, -3, -28, 12, -9, 0, 2, -9, 3, 21, 15, 8, 6, 3, -19, -8, 7, 14, -8, -3, -14, -18, 10, -22, -15, -15, 22, 18, 16, 6, -1, -23, 12, -4, 10, -18, -8, 5, 11, 2, -2, -13, 27, 12, 4, 1, -9, -13, 3, 22, 0, -5, 17, -8, 12, -10, -6, -10, 10, -3, -13, 34, -3, -8, -12, 6, 22, 0, -13, 27, 19, 2, 0, -5, -14, -4, 4, -10, 13, -5, 14, -12, -6, 4, 14, -11, 1, -12, -7, 7, 1, -7, -4, -6, 4, -22, -9, 5, 8, 4, -17, -14, -15, 6, 6, 8, -12, 0, 4, -21, 5, -4, 0, 9, 9, 22, 15, -9, 4, -5, 20, -3, -17, 23, -18, -6, 4, -9, -7, 14, -2, -1, 17, 0, 23, 6, -2, -11, -20, 38, 13, 2, 16, 6, 6, -4, -18, 3, 2, 12, -25, -3, 3, -5, -6, -8, 6, -8, 4, 14, -41, 14, -18, 2, -10, 1, -10, -18, 6, -31, -3, 13, 18, 1, -2, 23, 0, 5, -3, 11, 3, 2, -10, -32, -12, 12, 3, 11, 19, 12, -25, 27, -7, 2, 5, 1, 0, -1, 6, -4, 29, 13, -21, 8, -2, 10, -11, -12, -15, 11, 4, -7, -7, -27, -26, -26, 12, 4, -10, -11, 1, 4, 8, -2, -20, 16, 16, 20, 6, -16, -7, 10, 26, 15, -3, -7, -2, 6, -3, -18, -14, 6, -1, 4, -2, -26, -3, -19, 4, -2, -4, 15, -4, -24, 2, -13, 1, -9, 11, 13, 2, -12, -23, 14, 14, -3, -1, -12, 15, 13, -10, -13, -1, 27, -23, 7, -11, -5, -7, 1, 33, -11, 15, -16, -13, -1, 2, -2, -7, -10, -4, -10, 14, 22, 12, -14, 1, -12, 6, -12, -11, 12, 2, 1, 6, 3, 10, -12, 2, -12, -30, 18, -1, 17, -17, 5, -8, 4, 15, -20, 4, 33, 6, 1, -8, -7, -2, -1, -7, -21, 15, -10, -9, 13, 3, -12, 12, -12, 15, 29, 8, -8, 6, -9, 29, -8, 2, 16, -7, 6, 16, 25, 14, -3, 5, -6, -15, 17, -9, -2, 8, -26, -18, 23, -1, -11, 6, -8, -2, 5, -2, 16, -21, 10, 9, 27, -11, -13, -13, -4, -35, 14, -21, 2, 0, -2, 1, 5, 9, -4, 12, -5, -7, -11, -15, 1, 6, 21, 7, -4, 7, -7, 8, 10, -20, -29, 17, -32, 27, -7, 13, -3, 7, 4, 5, -8, 10, 8, 5, 3, 11, -19, 17, -19, -9, 14, -7, 9, 19, 10, 2, -4, -4, -16, 0, 7, 21, -16, 5, -19, -2, 3, 14, 4, -24, 21, -16, 8, -25, 0, 7, -6, -12, 2, 11, 12, 6, 17, -8, 17, 22, 25, -13, -13, 5, 16, 14, -21, 8, -5, -10, 6, 18, 11, 11, 4, -10, 9, -10, -10, -4, -2, -18, -14, -5, 19, 5, -27, -9, 13, -5, 17, -5, -11, -22, 12, 30, -2, -4, -19, 2, 29, 5, -7, 18, -16, 8, -30, 4, -8, 5, -10, -6, -11, 10, -15, -7, 2, 14, 12, 5, -18, 2, 11, -14, -31, -1, 8, -10, -3, -6, -24, -13, -30, 0, 3, 22, -5, 17, 9, -7, -9, 12, -3, 9, -7, 13, 1, -1, -4, 6, 16, -7, 5, -19, -4, 3, -40, 30, 8, -17, -18, 11, 19, -31, 11, -9, 2, -24, -2, 28, 35, 36, -8, 14, -9, 5, 22, -17, -22, -4, 14, 11, -9, 8, 5, -6, 16, 2, -4, -31, 0, 6, -4, 8, 22, 4, -8, -6, -8, -12, 19, 7, -28, 9, -3, -3, 7, 0, -20, -39, 10, 2, 16, -14, -13, -18, 0, -19, -9, -19, 19, -6, 9, -8, 14, 24, 1, 20, 13, 14, -1, 12, 26, 12, -4, -3, -9, -22, 33, -1, 11, -19, 5, 3, 1, 9, -4, -1, 21, -6, 5, -32, 23, 3, -7, -27, 8, 9, 0, 12, 10, 8, -5, 7, 12, 19, -21, -11, 19, 28, 24, 6, -6, -2, 29, -7, 23, 12, 5, 17, -4, -21, 15, 11, -25, 4, 18, 14, 4, 25, -17, -4, 0, 11, 2, 0, 10, -25, -31, 10, 17, 34, -13, 17, 5, -7, -37, 16, 2, -11, -22, 0, -3, -14, -6, -1, 3, -2, -7, 8, 12, -6, 2, -3, -7, -11, 13, -4, -14, -7, 7, 2, -17, 10, -11, -5, -15, -2, -15, 5, -30, -13, -1, 1, 4, -10, 2, 6, 3, 14, -1, -10, -27, 21, 25, 12, 25, 13, 0, -9, -2, -5, -24, 0, 21, 20, 0, 8, 3, 55, -28, 4, -3, 8, 1, -24, 14, 8, -27, 5, 27, -20, -19, -17, -7, -46, 24, -30, -4, -6, -5, -44, 7, -26, 21, 22, 24, 1, -13, -23, -7, -11, 10, 8, -28, 26, 13, 11, 10, 16, -24, -10, 18, -13, 16, -14, 3, -15, -20, -6, -30, 9, -9, -9, 8, 2, 30, 16, -3, -8, -24, 7, 13, -14, 19, 14, -4, 3, -15, -32, 9, -22, 7, 15, -4, 11, 11, -6, 4, 22, -7, -30, -6, -7, 16, 15, 1, 23, -16, 14, 11, 9, 22, -22, 11, -4, -6, 11, 14, -3, -12, -17, 25, 25, -4, -7, 12, -5, 9, -6, -13, -19, -8, 9, -19, -3, -11, -5, -5, 15, -1, 3, -4, 25, -7, 23, -5, -10, 0, -28, 3, -10, -3, -9, -3, 12, 0, -14, 3, -6, -20, -3, 53, 9, 18, 2, -4, 22, 13, -4, -2, -18, 13, -24, -21, 6, 5, 18, 3, -10, 6, 3, 31, 6, -6, -13, -25, 19, 9, 2, 7, 16, -1, -11, 18, -5, 12, -13, 19, -10, 15, -6, 4, 14, -14, -14, 27, -7, -18, -25, -3, 8, 21, 7, -3, -13, -1, -17, 1, -15, 6, 18, -1, 16, 47, 15, -6, -26, 4, 1, 10, 26, -20, 5, -30, 9, 10, -24, -8, 28, 16, 1, 4, -1, 10, 2, -11, -9, 10, 4, 2, -27, 3, -8, 8, 16, 32, 12, -11, -26, 15, -6, 20, -12, 22, -17, 0, -11, -7, -3, -12, 14, -37, -8, 8, 0, -11, -1, 18, -14, 7, -10, 10, 8, 14, -3, 6, 4, -14, -8, -4, -10, 15, 14, -2, 10, 7, -7, 18, 2, 7, 13, -8, -1, 23, 0, 5, -10, 2, -5, -13, -5, -2, 22, 0, 13, 3, 11, -2, 21, 6, 10, 10, 6, -4, 13, 14, -7, 20, 2, 3, 16, -8, -8, 17, -20, 8, 2, 11, 1, -5, -40, 14, -29, -23, -22, -3, 14, -11, -4, -21, -15, 14, 9, -16, 8, 1, -14, 12, 15, -7, 5, -4, 6, 18, -14, -1, 12, 5, 5, 13, 9, 3, 6, 13, 4, -10, -16, 18, 18, -2, 5, -8, -3, 5, 2, -31, -6, -8, -7, 13, 3, -7, 11, -12, 3, 9, 14, -16, 6, -13, -11, 6, -1, -18, 19, 8, -21, -5, 6, -1, 5, -7, -3, -14, 0, -28, 4, -10, -18, -30, 17, 17, -20, -13, -11, -12, 18, 16, -8, -28, 28, -2, -4, -14, 17, -8, 10, 12, -22, 8, 8, -18, 34, -13, 8, -24, -23, 34, -2, -7, -9, -1, 11, -10, -8, 1, 4, -5, 12, 11, -4, -4, 6, -13, -19, -20, 5, -1, -1, 13, -13, -5, 12, -1, -14, 10, 17, 14, 2, -22, 6, -2, -11, -2, 1, 9, 3, -24, -12, -13, 10, 7, -8, -4, -14, -11, 13, 20, 25, 22, -4, 13, 6, 2, -7, 28, 2, -31, 3, -1, -9, 34, -19, -7, 13, 12, 3, 11, -1, 21, -15, 2, 17, -8, -17, -7, 3, 2, 7, -38, 3, 14, 5, -13, 11, 9, -19, 7, -25, 4, 2, 20, 15, -5, 4, 20, -10, 7, -17, 2, 34, -6, -14, 15, 4, 1, 10, -16, 0, 13, -6, 30, 5, 1, 20, -10, 8, 6, 6, -28, -15, 16, 13, -8, 1, 12, 4, 9, 3, -13, 8, 4, 14, 11, 6, 19, -5, 3, -2, 14, 41, -7, 5, 9, 6, 3, 6, -9, -5, 3, 12, 22, -19, -1, -14, -9, 11, 3, -13, -1, 6, 12, 3, 13, -7, 14, -7, -1, 8, -23, 17, 1, -13, 4, -4, 2, -10}

#define TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0_DEC_BITS {7}

#define TENSOR_LSTM_LSTM_CELL_BIAS_0 {0, 0, 2, -2, 1, 1, 1, 4, 2, 3, 2, 4, 6, 1, 1, 0, 1, 2, 4, 2, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 2, 1, 65, 66, 67, 61, 67, 68, 66, 69, 66, 68, 68, 71, 72, 62, 65, 65, 65, 69, 71, 67, 65, 65, 65, 68, 67, 66, 66, 65, 66, 65, 69, 67, 1, -2, 0, 0, 0, 0, 0, -1, 0, 0, 1, -1, 1, -1, 0, 3, 0, 2, -2, 0, -1, 1, -2, 0, 0, 0, -1, 0, 0, 0, -2, 0, 1, 2, 2, -2, 1, 2, 1, 4, 2, 4, 3, 6, 7, 0, 1, 0, 1, 3, 6, 3, 0, 1, 1, 5, 3, 1, 2, 1, 1, 0, 5, 1}

#define TENSOR_LSTM_LSTM_CELL_BIAS_0_DEC_BITS {6}

#define LSTM_BIAS_LSHIFT {8}

#define LSTM_OUTPUT_RSHIFT {7}

#define TENSOR_DENSE_KERNEL_0 {-45, 71, -67, -27, -62, 81, 76, -13, 44, 11, 19, -3, 86, -41, -39, 29, 43, 13, -4, -48, 62, 36, 23, 35, 40, 23, 31, 36, -74, 14, -39, 104, -25, -1, -61, 8, -21, 21, 51, -64, -1, -4, 50, -23, -58, -101, -92, 41, -16, 49, 24, -74, -101, 75, 64, -66, -94, 19, -79, 15, -28, 29, 48, 52, -11, 68, 12, 6, 16, 59, -97, 29, -27, -80, 40, -30, -44, -18, -16, -17, 59, 27, 43, 5, 43, 39, 36, 23, -11, -39, -70, -78, -38, -80, -19, -12, 15, 34, -28, -58, 20, -21, -17, 56, -43, -70, -63, 6, 65, 5, -72, -50, -10, 44, 70, 81, -10, -49, 10, 13, 6, -48, -55, 34, 69, 57, -78, 67, 39, -16, 22, -13, -35, 21, 61, -20, -26, -30, 50, 23, 3, 21, -66, -37, 35, -51, -43, 64, -1, 7, 61, -8, 38, 75, 49, 33, 40, -78, -99, 50, -46, -27, -59, -53, 88, -74, 74, 58, 50, 98, 20, -69, -20, 61, -90, -57, -14, 21, -18, 82, -7, -71, 60, 4, 56, 11, 26, -63, -72, -86, 41, -61, -20, -35, 2, 67, 19, 5, -44, 39, 61, 15, -57, 89, -48, 8, -47, 70, -15, 75, 18, -47, 80, 0, -23, -9, -50, 72, 31, 52, 17, -10, -5, -19, -74, 87, -14, 7, 70, -26, -13, -96, -10, 63, -71, 62, 87, 44, -85, 14, -82, -32, -51, 66, 3, 45, -27, -25, 56, -10, -61, -12, -8, 36, -3, 60, -69, 29, -17, 44, -15, -6, -31, -56, -57, -32, 60, -6, -57, 15, -47, -45, 38, 63, 49, -79, -58, 36, -79, -42, -20, -7, 29, 51, 41, 50, 24, 10, 43, 10, -50, -18, -34, 34, 97, -25, 48, -10, -80, 39, -35, 78, -29, 31, -76, -15, 51, 60, -57, 49, 19, 11, -38, 4, -69, 76, 73, -35, -22, 56, -58, -66, -47, -60, -46, 17, -108, -20, -28, 6, 4, -18, -75, -16, 38, 40, 96, 9, 50, -57, 77, 81, 47, -55, -25, -5, 58, -11, -66, -9, -42, -62, -48, 55, 57, 84, -56, -57, -39, 67, 88, 66, -48, 55, 54, 81, -10, -78, 56, 60, 76, -75, -14, -55, 53, -29, 43, 81, -27, 3, 45, 25, 68, 46, 78, -19, 58, 68, -20, 19, 6, 36, 59, 70, 59, -70, -7, -45, -94, 78, -51, 2, 73, -60, 72, -34, 39, 21, 21, -74, -8, -41, -82, -7, 75, -87, 57, -7, 88, -5, -61, 41, 70, -83, 59, -74, 6, 59, -60, -36, 13, -67, -76, 5, -51, -36, 38, -36, 40, 74, 60, 82, 57, 24, 20, -51, -43, -32, -69, 9, 27, -91, 30, 45, -18, 79, 40, 7, -42, 9, -27, 57, 14, 25, 50, -68, -61, -56, -33, 18, 59, -29, -7, 53, -81, 1, 41, -22, -14, -36, -8, -104, 89, -20, -45, 30, 11, 22, 59, -54, -3, 76, 46, -54, -38, 47, 14, -39, -24, -54, -43, -29, -7, 85, -65, -19, 60, 72, 0, 33, -33, -76, 62, -69, -15, -77, 25, 26, -66, -3, -29, -86, 3, -10, 16, 30, -45, -65, -74, -60, -70, 33, 71, -78, 31, 23, 72, 18, -68, 91, -14, -68, 73, 95, 9, 44, 69, -89, -44, -85, -37, -96, -24, -56, -49, 58, 20, 6, 25, 83, -55, -52, 22, 35, -8, -29, -65, -72, -3, 21, 65, 7, 113, 12, 39, 68, 1, 56, -80, 43, 54, 13, -74, 91, -17, -15, -85, -15, 49, -3, -52, -31, 25, -63, -2, 33, 10, -86, 74, 10, -27, 18, -35, -45, 3, 25, 23, 49, -74, -66, -27, 77, -29, 23, -14, -70, 26, -93, -45, 20, 60, -15, 8, -36, -66, -23, 45, -57, -78, 21, -65, 45, 5, 75, -66, -26, -48, 7, -75, -20, -53, 56, -17, 6, 40, -50, 27, -35, -80, -7, 46, -45, 10, -45, 43, 91, -11, -20, -15, 33, 24, -73, -32, 18, -58, -9, -11, -79, -14, 23, -18, -51, -59, -34, 12, -37, 9, -1, 17, -81, -37, 83, 32, 5, 13, -75, -100, -13, 47, -50, -90, 86, 23, -31, -46, 1, -38, -13, 68, 14, 10, 25, -54, -62, 58, -83, 29, 20, 7, 25, 54, 80, -26, -31, -5, 77, -43, 81, -29, 31, -23, 85, -55, 18, 48, 28, -66, 44, -99, 61, -41, 33, 24, -44, -58, 22, 65, -24, 44, -27, 91, 102, 20, 28, -53, -14, -60, -19, 20, -15, -82, -88, -76, 63, -60, 53, 73, -19, -43, 39, 25, 59, 69, 46, -91, -76, 49, -3, -68, -3, 74, 11, 40, -32, 4, 60, 6, -45, 5, -36, 16, 80, -38, -67, 34, -55, 34, 55, 35, 79, -15, -80, -72, -67, -10, 4, -42, -39, 3, 29, 97, -74, 98, 12, 32, 89, -85, -38, 47, 24, 36, 66, -83, 100, 70, -100, -6, -25, 72, 48, 29, -66, -29, 39, 78, 5, -10, 38, 4, 55, 14, 17, 44, -27, -72, -31, 68, -47, 8, 51, 21, -34, -56, 57, -76, 30, -3, 50, 18, -55, 48, 7, -31, -44, 6, -15, -39, -96, -24, 61, 24, -17, 60, 10, 2, 20, 79, -6, 46, -21, -35, -57, -59, -89, -26, -5, -87, -17, 16, -7, -69, 40, 78, -48, 38, -62, 16, 100, 2, 78, 10, 56, 70, -38, 22, -5, -24, 65, 53, -37, -17, -21, -63, -21, 35, 36, -4, 34, 6, -27, 24, -7, -33, -47, -13, 42, 57, 59, -39, -49, 71, -60, -57, 19, 8, -5, -12, 12, 10, -8, 46, -71, 45, 62, 79, 15, 37, -13, 0, 109, 36, 66, -49, -20, 3, -53, -70, 39, -51, -16, 64, -16, 91, -51, -72, -56, 23, -48, -32, -20, 5, 41, -106, 60, -11, -67, 18, 2, -1, -81, -41, 41, 36, 70, 65, 38, -21, -20, -1, 21, -13, -2, 71, 51, 76, 13, -23, -64, 50, 78, 26, 32, 24, 46, 55, 31, -37, -18, 71, -25, 30, -2, -26, 86, -44, -14, -68, 5, -37, -35, -38, -102, 51, 66, 68, 76, -41, -38, -45, 12, 10, -82, -85, -76}

#define TENSOR_DENSE_KERNEL_0_DEC_BITS {8}

#define TENSOR_DENSE_BIAS_0 {-16, 47, -118, 53, -27, -72, -65, 1, -58, -3, -57, -58, -78, 10, 12, -11, -47, 57, 8, 57, 86, -47, -49, 11, -68, 54, 114, -40, -51, 67, -45, -38}

#define TENSOR_DENSE_BIAS_0_DEC_BITS {11}

#define DENSE_BIAS_LSHIFT {4}

#define DENSE_OUTPUT_RSHIFT {8}

#define TENSOR_DENSE_1_KERNEL_0 {-75, 46, 68, 17, 88, 71, 45, -33, 8, 79, 13, -9, -45, 57, -64, 52, -14, -25, -22, -86, -69, -62, 69, 68, 69, 28, -17, -69, 64, -60, -29, -40, 57, 59, 56, -13, -44, 80, -57, 4, 26, -41, -25, 53, -80, 84, 57, 33, -29, 22, 60, -73, 8, -17, 12, 48, 13, -80, -27, -21, -69, 87, 43, -25, 54, -45, 45, -33, -54, -22, 47, -64, 86, -39, 38, 66, -15, -20, 37, -4, 9, -41, 44, 38, -55, 39, -56, 54, -75, 17, -102, 48, 80, -23, 33, -24, -62, -16, -61, -31, -54, 56, 14, 47, -9, 11, 28, 35, -28, -68, -43, -43, -46, -87, -4, -29, -17, 65, 57, 72, 17, 3, -73, -18, -8, -25, -25, 35, 46, 45, -7, 21, -36, 52, 27, -57, 33, -20, -78, -58, -4, -69, 47, -46, 23, -43, -16, 70, 36, -17, 80, 44, 84, 13, -32, -59, 0, -48, -5, 55, 33, -44, -84, 69, -38, -42, 37, 21, -81, 34, -46, -2, -20, -49, -19, -3, -27, 72, -24, 1, 76, -36, 47, -78, 15, 22, -40, 7, -99, 0, 8, 92, -31, 71, -40, 79, -23, -40, -51, -57, 14, -83, 56, -25, 36, -12, -69, 30, -72, -61, 61, 44, -12, 27, 86, 47, 64, 55, 4, -78, 35, 54, 12, 105, -29, -19, -26, -37, 45, 5, 23, -35, 5, -24, 16, 44, 11, 27, -51, 61, -46, -50, -62, 22, -8, -54, 25, 37, 34, -74, -6, 15, -20, -9, 63, 61, -57, 58, -105, -39, -66, -25, -60, 41, -30, -19, 47, 64, -66, -88, 51, -83, -12, -41, 40, -69, -56, 22, 22, 81, -56, 14, 2, 63, 20, 90, 11, 42, 55, -44, 17, 3, -84, -38, -52, 21, 0, 30, 0, -76, -25, -40, -45, 50, -69, -23, 25, -39, -13, -31, 66, -31, 40, 24, -58, 43, -25, -55, 59, -48, -52, 59, -41, -26, -76, 9, -5, -76, -26, -71, 23, -20, 55, 52, 72, -51, 94, 30, -9, -69, 80, -49, 10, -36, -43, -58, 3, 41, -74, 93, 18, -8, -14, -79, -63, -53, -64, 90, -30, -42, -66, -39, -37, 33, 20, 4, -63, 19, 63, 17, 32, -9, -26, 4, -20, -41, -10, 46, 33, -13, -32, -92, -71, 29, 29, 34, 73, -21, -16, -17, -71, -40, 22, -17, -46, 40, 11, -5, -26, 17, -76, 39, 34, 47, 55, 28, -17, 13, 62, -18, 13, -1, 25, 12, 29, 13, 65, -15, -67, -17, 22, 80, 53, 42, -16, 2, -22, 32, 45, 63, -21, 42, 46, 86, 12, -32, -55, -41, 1, -4, -69, -50, 53, 62, 57, -89, 9, -25, 70, 35, -12, 40, -46, 20, 91, 17, -71, -48, -28, -95, 57, -24, -53, -93, -70, -7, 56, -37, -5, -37, -51, 42, 55, 23, -5, 57, -14, 12, -21, -31, -37, -14, -63, 58, -51, 78, 29, 8, -42, -40, -26, 16, 87, -43, -72, -12, -64, -30, 4, 70, -40, 27, 2, 38, -59, 32, 39, 35, -26, -11, -78, 11, 29, 44, -4, 24, -22, -82, 37, 93, -6, 80, 5, 0, 41, 24, -24, -35, 62, 33, 60, 32, 14, 80, 46, 6, -12, -9, -73, 49, -1, -21, 61, 7, 30, -80, 72, -71, 48, -34, 9, -27, -56, -45, -27, -63, 74, -46, 12, 53, 59, -2, -18, -25, -32, -21, -48, -13, 61, 76, -2, -19, -101, 78, 85, -29, -19, 34, 54, 72, -14, -6, -63, 52, 30, 49, -24, 79, -46, 46, 30, -89, 57, -31, -73, -17, 18, -28, -47, -57, 41, -64, -86, -61, 24, 35, -30, -111, 32, -73, -6, 56, 93, 89, -1, -72, 36, 21, -13, -39, -54, -40, 88, 67, 51, -51, -15, -54, 35, 35, 74, -20, 42, 20, 27, -32, -91, -38, 5, -20, 77, -47, 35, 14, 40, -59, -67, 44, 48, -66, 26, 30, 11, -6, 11, 28, -44, -6, 7, -46, -34, 21, 27, -13, -4, -57, 80, 12, 36, -79, 79, -65, 9, 40, 11, -41, -66, -40, 22, 74, -7, 64, -21, 54, 3, -43, -64, 53, -69, 24, 58, -23, -52, -29, 32, -37, -55, -26, 38, -86, -44, -38, 49, -17, 34, 22, 29, 37, -32, 21, 26, 34, 89, -24, 57, 44, 47, -53, 57, 23, 11, 20, -66, 64, 9, -46, -11, -75, 27, 29, 76, 29, -41, 54, 85, -109, -109, 46, 93, 60, -48, 37, 23, 49, 10, 54, -60, -16, 2, 33, -19, -20, -70, -1, -52, -78, 34, 34, -6, 38, -2, 20, -26, -93, -2, -73, 45, -56, -76, -54, 75, -61, 26, 21, 29, 41, -63, 71, 19, -48, 6, 13, 15, -74, -69, 78, 9, -62, 41, 42, -54, -30, 45, 1, -20, 12, 3, -11, -6, 15, 72, 45, 80, 77, 2, 73, -62, 52, 43, -14, 44, 7, 74, -34, -48, 5, 61, -64, 36, -39, 1, -54, 15, -59, 3, -27, -68, 14, 57, 21, -71, 24, -18, 23, 37, 17, -59, 12, 63, 48, 25, 72, -86, -50, 66, 32, 61, -39, -49, -4, -8, -8, -60, -68, -71, 10, -33, -14, -21, 10, -54, 86, -121, 90, -32, 85, -77, 60, 68, 19, 6, 6, -65, 79, 13, -77, 43, 0, -27, -20, 13, 86, 67, 52, -6, 10, 26, 91, -43, 16, 46, -62, 72, -32, 43, 27, -15, -57, -50, 18, 64, -7, -43, 26, -56, -46, -60, -47, 43, 0, 64, -51, 74, 63, 29, 49, -44, 55, 5, 71, 2, -68, 32, -75, 62, -38, -13, 55, -44, -62, 48, -19, -58, 61, -64, -58, 20, 66, -13, -72, -6, -1, 23, 38, 11, -58, 65, -48, -7, 3, -52, 44, -12, -22, 19, -53, -11, 8, 63, 14, 88, -44, 28, -54, 78, 7, 69, -22, -34, -17, 39, 39, -40, -20, -44, -28, 1, 80, 48, -70, 52, 12, 46, 43, 51, -47, -30, 27, -15, 11, -77, 85, -4, 16, 2, -45, -42, 62, 11, -52, -49, 11, 3, -64, 53, 39, 53, 78, 37, 17, -42, -45, 75, 62, -37, 76, -39, 36, -40, -16, -80, -57, -30, 45}

#define TENSOR_DENSE_1_KERNEL_0_DEC_BITS {8}

#define TENSOR_DENSE_1_BIAS_0 {99, 59, -58, -17, -76, -45, -89, -71, 47, 1, 73, -77, -104, -67, 77, -91, -48, 65, -67, -61, 78, 99, 26, -52, -67, 96, 90, -103, -65, 102, -88, -67}

#define TENSOR_DENSE_1_BIAS_0_DEC_BITS {12}

#define DENSE_1_BIAS_LSHIFT {3}

#define DENSE_1_OUTPUT_RSHIFT {9}

#define TENSOR_DENSE_2_KERNEL_0 {84, 67, -46, -38, -94, -117, -100, -55, 23, 37, 110, -67, -92, -99, 38, -68, -58, 97, -128, -85, 74, 120, -28, -53, -78, -34, 98, -121, 21, 59, -19, -60, 63, -39, -53, 10, -90, 74, -61, -54, -66, -13, -103, 68, -8, 35, -25, 0, -7, -1, 3, 1, -77, 78, -71, -34, 93, -50, 70, -63, 102, 11, 2, 70, -25, 51, 87, -65, 64, -99, 43, 59, -34, 67, -21, 55, 105, 28, -55, -1, -70, -61, 28, -73, -18, 10, -19, -74, -5, -111, -104, 52, 51, -99, -4, 102}

#define TENSOR_DENSE_2_KERNEL_0_DEC_BITS {8}

#define TENSOR_DENSE_2_BIAS_0 {63, -40, -80}

#define TENSOR_DENSE_2_BIAS_0_DEC_BITS {12}

#define DENSE_2_BIAS_LSHIFT {2}

#define DENSE_2_OUTPUT_RSHIFT {10}


/* output q format for each layer */
#define INPUT_1_OUTPUT_DEC 7
#define INPUT_1_OUTPUT_OFFSET 0
#define LSTM_OUTPUT_DEC 7
#define LSTM_OUTPUT_OFFSET 0
#define DENSE_OUTPUT_DEC 7
#define DENSE_OUTPUT_OFFSET 0
#define DENSE_1_OUTPUT_DEC 6
#define DENSE_1_OUTPUT_OFFSET 0
#define DENSE_2_OUTPUT_DEC 4
#define DENSE_2_OUTPUT_OFFSET 0
#define SOFTMAX_OUTPUT_DEC 7
#define SOFTMAX_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[780] = {0};

const nnom_shape_data_t tensor_input_1_dim[] = {130, 6};
const nnom_qformat_param_t tensor_input_1_dec[] = {7};
const nnom_qformat_param_t tensor_input_1_offset[] = {0};
const nnom_tensor_t tensor_input_1 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_input_1_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_input_1_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_input_1_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};

const nnom_io_config_t input_1_config = {
    .super = {.name = "input_1"},
    .tensor = (nnom_tensor_t*)&tensor_input_1
};
const int8_t tensor_lstm_lstm_cell_kernel_0_data[] = TENSOR_LSTM_LSTM_CELL_KERNEL_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_kernel_0_dim[] = {6, 128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_kernel_0_dec[] = TENSOR_LSTM_LSTM_CELL_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_kernel_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_lstm_lstm_cell_recurrent_kernel_0_data[] = TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_recurrent_kernel_0_dim[] = {32, 128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_recurrent_kernel_0_dec[] = TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_recurrent_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_recurrent_kernel_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_recurrent_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_lstm_lstm_cell_bias_0_data[] = TENSOR_LSTM_LSTM_CELL_BIAS_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_bias_0_dim[] = {128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_bias_0_dec[] = TENSOR_LSTM_LSTM_CELL_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_bias_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_bias_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_lstm_cell_config_t lstm_lstm_cell_config = {
    .super = {.name = "lstm"},
    .weights = (nnom_tensor_t*)&tensor_lstm_lstm_cell_kernel_0,
    .recurrent_weights = (nnom_tensor_t*)&tensor_lstm_lstm_cell_recurrent_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_lstm_lstm_cell_bias_0,
    .q_dec_z = 5,
    .q_dec_h = 7,
    .q_dec_c = 5,
    .units = 32
};

const nnom_rnn_config_t lstm_config = {
    .super = {.name = "lstm"},
    .return_sequence = false,
    .stateful = false,
    .go_backwards = false
};
const int8_t tensor_dense_kernel_0_data[] = TENSOR_DENSE_KERNEL_0;

const nnom_shape_data_t tensor_dense_kernel_0_dim[] = {32, 32};
const nnom_qformat_param_t tensor_dense_kernel_0_dec[] = TENSOR_DENSE_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_kernel_0 = {
    .p_data = (void*)tensor_dense_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_bias_0_data[] = TENSOR_DENSE_BIAS_0;

const nnom_shape_data_t tensor_dense_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_dense_bias_0_dec[] = TENSOR_DENSE_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_bias_0 = {
    .p_data = (void*)tensor_dense_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_output_shift[] = DENSE_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_bias_shift[] = DENSE_BIAS_LSHIFT;
const nnom_dense_config_t dense_config = {
    .super = {.name = "dense"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_bias_shift
};
const int8_t tensor_dense_1_kernel_0_data[] = TENSOR_DENSE_1_KERNEL_0;

const nnom_shape_data_t tensor_dense_1_kernel_0_dim[] = {32, 32};
const nnom_qformat_param_t tensor_dense_1_kernel_0_dec[] = TENSOR_DENSE_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_kernel_0 = {
    .p_data = (void*)tensor_dense_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_1_bias_0_data[] = TENSOR_DENSE_1_BIAS_0;

const nnom_shape_data_t tensor_dense_1_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_dense_1_bias_0_dec[] = TENSOR_DENSE_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_bias_0 = {
    .p_data = (void*)tensor_dense_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_1_output_shift[] = DENSE_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_1_bias_shift[] = DENSE_1_BIAS_LSHIFT;
const nnom_dense_config_t dense_1_config = {
    .super = {.name = "dense_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_1_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_1_bias_shift
};
const int8_t tensor_dense_2_kernel_0_data[] = TENSOR_DENSE_2_KERNEL_0;

const nnom_shape_data_t tensor_dense_2_kernel_0_dim[] = {32, 3};
const nnom_qformat_param_t tensor_dense_2_kernel_0_dec[] = TENSOR_DENSE_2_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_2_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_2_kernel_0 = {
    .p_data = (void*)tensor_dense_2_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_2_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_2_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_2_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_2_bias_0_data[] = TENSOR_DENSE_2_BIAS_0;

const nnom_shape_data_t tensor_dense_2_bias_0_dim[] = {3};
const nnom_qformat_param_t tensor_dense_2_bias_0_dec[] = TENSOR_DENSE_2_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_2_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_2_bias_0 = {
    .p_data = (void*)tensor_dense_2_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_2_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_2_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_2_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_2_output_shift[] = DENSE_2_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_2_bias_shift[] = DENSE_2_BIAS_LSHIFT;
const nnom_dense_config_t dense_2_config = {
    .super = {.name = "dense_2"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_2_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_2_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_2_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_2_bias_shift
};

const nnom_softmax_config_t softmax_config = {
    .super = {.name = "softmax"}
};
static int8_t nnom_output_data[3] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {3};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[7];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&input_1_config);
	layer[1] = model.hook(rnn_s(lstm_cell_s(&lstm_lstm_cell_config), &lstm_config), layer[0]);
	layer[2] = model.hook(dense_s(&dense_config), layer[1]);
	layer[3] = model.hook(dense_s(&dense_1_config), layer[2]);
	layer[4] = model.hook(dense_s(&dense_2_config), layer[3]);
	layer[5] = model.hook(softmax_s(&softmax_config), layer[4]);
	layer[6] = model.hook(output_s(&output0_config), layer[5]);
	model_compile(&model, layer[0], layer[6]);
	return &model;
}
