#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_LSTM_LSTM_CELL_KERNEL_0 {37, -13, -9, -2, -30, -3, 23, 27, 1, 28, -26, -18, -45, 15, -38, 11, -49, 28, -36, 14, 32, -4, 27, -6, 11, 9, 68, -29, 11, -16, -45, 25, 31, -42, 31, 8, 4, -35, -13, -25, 2, -5, -8, 8, -47, -6, -46, -33, -52, -18, 41, 2, -14, -9, -32, -36, 8, -22, 0, -21, -35, -11, 22, 22, 3, -5, -28, -20, -7, -31, 27, 4, -20, -25, -13, -7, 31, 42, -17, -62, -11, 25, 4, 28, 14, -16, 18, -16, -53, 38, -19, 23, 10, -76, -19, 41, 16, -36, -53, 62, 4, -18, -26, -23, -8, 4, -15, 23, 53, 36, 18, -31, -25, 42, -5, -2, 23, -25, 15, 24, 63, -9, -10, -3, -49, -50, -7, -14, 4, 42, -11, -24, 37, -9, 23, -11, -40, 5, 26, -25, 20, -20, -16, 30, 41, -15, -11, 16, -30, 29, 36, -24, -13, 17, -9, -17, -6, -32, -19, 16, 50, 13, -11, -8, 6, -34, 52, 20, 49, -1, -18, -4, -37, 16, 53, -30, 59, -23, 0, -1, -40, -19, 5, -8, 8, 8, -11, 17, 57, -43, 1, 4, 14, -17, 1, 9, -24, 4, 39, 13, -12, 17, -29, -21, -14, -2, -17, -18, 3, -1, 1, -7, -2, -40, -10, 28, 6, 0, 1, -17, -25, 19, 26, 25, -21, 0, -9, -10, -42, 9, -10, -28, 25, 24, 7, 35, 35, -24, 29, 11, -1, 5, -6, -19, 27, -1, -10, -1, -20, 40, 4, 16, 26, -3, 28, -24, 4, 34, -15, -22, -30, 31, 30, 28, 10, -6, -13, 44, 32, 32, 19, -22, 8, -10, 23, -1, -9, 13, 19, 18, -25, 28, -23, 31, 32, -7, -28, 21, 11, 29, -28, 35, 34, 20, -21, 27, -9, -15, -10, -4, 40, 2, -12, -24, 35, -12, -5, 19, -34, 12, -5, -5, -8, -14, 14, -4, 35, -35, -30, -19, -38, -2, 3, 13, -33, -12, 9, -15, 12, -20, 30, 4, 2, -12, 27, 22, -11, -19, -1, -31, 1, 21, -26, 36, -10, 19, 2, -18, -17, 1, -30, -11, 0, 1, -11, 20, 10, -26, 34, -14, -8, -3, -22, -14, 0, -9, 30, -10, 5, -30, -7, 25, -34, 22, -7, 3, 26, 37, 17, 38, 5, 0, -5, -27, 29, 30, -20, -20, 3, 19, 33, 1, -1, 4, -21, -15, 32, 39, 22, -27, -10, 33, -17, 17, -23, 19, -5, -3, 3, -13, 9, -19, 18, -20, -6, -15, 17, -41, 27, 18, 7, 43, 14, 2, 16, -1, 16, 14, -27, -18, -37, 19, -7, -13, 15, -23, -47, 5, -6, 27, 51, 39, -25, -24, -21, 0, 17, -6, 25, -50, -19, -6, -22, 13, 32, 1, -8, -17, 12, -19, 1, -4, -4, 42, 0, 28, 3, 26, -8, 16, 2, 17, -16, 28, 0, 5, -5, 20, 17, -15, 25, -3, 20, 36, 27, 25, 9, -3, -45, -5, 6, -4, 33, 9, 15, 14, 4, 12, -22, -7, 45, -25, -1, 38, -29, 23, 1, 16, -8, 21, 32, -22, -12, -24, 12, 8, 40, -22, -19, -14, 12, -3, -3, 34, 36, 26, -23, 9, 17, -7, 20, 11, 4, -32, 38, 19, -2, -4, 24, -26, -3, 9, -24, 1, 21, -24, 18, 8, -15, -23, 39, -23, -42, -35, -11, -10, -39, 13, 28, 16, -8, -15, 2, 7, -26, -4, 14, 15, -2, -14, 27, -39, 18, -44, 24, -24, 9, 19, 8, 36, -41, -36, 14, -2, -2, 8, -29, 22, 6, 9, -22, -28, -8, -14, -28, 16, 2, -30, 1, 25, 35, 16, 62, 9, 16, 18, -10, -5, -24, -50, -16, -7, 16, -2, 17, -24, 44, 37, 4, 12, -5, -61, -16, 24, -6, -28, 22, -5, 32, 18, 15, 13, 6, -7, 5, -19, -2, 18, 32, 0, 20, 4, -44, 21, 5, 27, 7, 0, 15, -29, -17, 12, 27, 32, 26, -64, 6, 22, 2, -5, -1, -31, -26, -17, -18, 8, 17, -3, -1, -42, 1, 14, 25, 41, -52, 33, 28, -12, -23, -27, 12, -10, -12, 39, 35, 27, -10, 13, -25, -20, 26, 24, 13, 4, -25, 34, 4, -10, 14, 19, 25, -10, 3, -12, -42, 21, -4, -5, -28, -26, 26, -9, -17, -13, -8, -17, 53, -37, 17, -13, 41, -14, -20, 13, -3, 29, -29, 41, -20, 27, 19, 8, -2, -31, -11, 6, -4, -7, -30, -7, -8, -33, -12, -4, 15, 3, -46, 13, 28, -9, 0, -17, 9, -6, 3, 35, -9, -12, 18, 19, 29, -11, -22, 32, 26, -50, 32, -4}

#define TENSOR_LSTM_LSTM_CELL_KERNEL_0_DEC_BITS {7}

#define TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0 {}

#define TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0_DEC_BITS {7}

#define TENSOR_LSTM_LSTM_CELL_BIAS_0 {2, 5, 3, 3, 2, 5, 2, 9, 4, 2, 5, 4, 3, 3, 4, 1, 7, 3, 9, 5, 5, 3, 3, 4, 1, 1, 6, 4, 1, 2, 3, 4, 68, 68, 69, 68, 66, 68, 68, 74, 68, 67, 70, 68, 67, 66, 70, 67, 69, 70, 72, 69, 70, 66, 65, 70, 65, 65, 68, 67, 66, 65, 68, 68, 0, 0, 2, 0, -1, 1, 0, 0, -2, 0, 0, 1, 0, -2, 2, 1, -2, -1, 1, 0, 3, 2, -1, 1, -1, 0, -1, 0, 0, -1, 0, 0, 3, 5, 5, 3, 3, 4, 4, 9, 4, 2, 4, 3, 4, 4, 5, 3, 6, 4, 6, 5, 5, 4, 4, 4, 2, 2, 4, 4, 2, 2, 4, 5}

#define TENSOR_LSTM_LSTM_CELL_BIAS_0_DEC_BITS {6}

#define LSTM_BIAS_LSHIFT {8}

#define LSTM_OUTPUT_RSHIFT {7}

#define TENSOR_DENSE_KERNEL_0 {25, 0, 86, 32, 35, -62, -25, 49, 41, -66, -58, 5, 74, 69, 57, -40, 64, 25, 49, 76, 70, 19, 50, -26, -33, -72, 16, -31, -43, -83, -44, 93, 2, -36, -29, -72, 13, 72, -52, -24, 37, -1, 62, 37, 42, 23, -6, -28, 24, -79, -3, -7, 39, 51, 16, -2, 5, -4, -1, -31, 19, 70, -52, -48, 33, -47, 16, -82, -75, -38, -7, -55, -69, -3, -22, 1, 1, -37, 46, -40, 28, 22, 42, -56, -63, 40, 68, -22, 66, 49, -5, 30, -47, 28, -75, -11, -48, -39, 7, -41, 65, 62, 90, 59, 29, -52, 68, -12, -64, -31, 3, -32, -29, 21, -33, 20, -28, 52, 64, -51, 74, 56, 107, 82, 8, 8, 28, -64, 95, -21, 10, -69, 33, -89, 2, -63, 14, -16, -40, 64, -40, 28, -7, 48, 33, -20, -15, -5, -37, 60, 39, 3, -36, 41, -39, 65, 66, -35, -100, -27, 56, 15, 10, 71, -7, -12, 31, 80, 42, 44, 60, 31, -29, -33, -15, 36, 20, 88, -98, 43, -8, 58, -56, 50, 43, 0, -22, 53, -46, -29, -69, -19, -48, 9, 43, -24, 56, -83, -69, -53, -4, -72, 59, 85, 56, -10, 17, 47, -34, -3, -8, 21, 62, 7, -10, -29, 47, 79, -53, 60, -67, 13, 14, 79, -40, 25, -86, 25, 71, -53, -96, -17, -71, -56, 61, -9, -48, 55, 79, -44, 21, -2, 32, 1, 40, -30, 79, 83, 4, 44, 18, -78, 33, -11, -42, -51, 43, -25, 93, -10, 83, -66, 22, 0, -39, 55, -2, -74, 32, 17, 42, 12, -23, -23, -38, -30, -51, -38, 51, 6, -40, 8, -74, 50, -7, 64, 66, 31, -37, 43, -33, 51, 6, -67, 78, -40, 61, -58, 60, -48, 43, -35, 19, 13, 13, -80, 41, 58, 18, 44, -85, 27, 9, -68, 65, -58, 70, 44, -11, -81, 46, 61, 1, 46, 13, 8, 55, 50, -46, 27, -53, -1, -65, -74, 55, -33, 57, 89, -21, -59, -15, 72, 68, 2, -22, -55, -61, -31, -13, -37, 47, 81, -25, -52, -75, 78, 63, 76, 64, 58, -55, -16, -31, 55, -5, 26, 29, 47, -47, 57, 6, -14, 10, 58, -53, -18, 48, -33, 97, -79, -48, -70, -67, -15, -14, 18, -20, 48, 0, 68, 4, 5, 29, -24, 13, -18, -35, -44, -36, -63, 0, -39, 52, -35, -6, -64, -28, -52, 49, 60, 40, -48, -5, 50, -80, -71, 13, -7, 9, 3, -69, -19, 42, -7, 2, 63, -58, -53, 74, -83, 35, 3, 62, -63, 91, 91, -21, -62, -81, 61, -38, 35, 45, 39, 42, 26, 45, -42, 30, 6, -31, -39, 19, 39, 21, -30, 5, -48, 69, 13, 16, 47, 39, -46, -42, 55, -44, -71, -45, 51, 75, -22, 30, 93, 65, -43, 65, 3, -18, 62, 41, 38, -48, 41, -24, 17, -54, 14, -6, -27, -62, 54, 61, -13, 32, 55, 35, 30, 66, -28, 22, -66, 73, 52, 35, 43, -17, -99, 30, 85, -30, 65, 8, 84, -32, -40, 7, -59, 65, -42, 39, -60, -58, -32, 43, 31, 67, -64, -39, 28, -43, -61, 74, 23, -57, 27, -13, -63, 55, 20, -23, 25, -38, 37, 89, 0, 45, -3, -46, -22, -37, -70, 55, 8, 6, -55, -57, 17, -52, 42, -25, -11, -88, 22, -22, 23, 51, 82, 22, 59, -53, 3, 54, 63, 75, -56, -52, 84, 24, 22, -60, -17, 68, 8, 23, -9, -4, 2, 36, -9, 34, -29, -66, -53, 15, -61, -25, 21, 53, -69, -32, -76, -72, 67, 0, 36, 41, 13, -22, 11, 32, -67, 37, 70, 52, 15, 35, 53, 31, -56, -8, -39, -64, -34, 54, -19, 20, -11, 0, 20, 25, -51, 46, -8, 46, -37, -57, 72, 55, 22, -26, -68, 13, -47, -60, -54, -47, 45, -16, -47, -47, 32, -57, -39, 12, -15, 33, 50, -61, -70, -36, -43, 59, 25, 60, 12, 102, -22, -7, -3, 35, -33, 53, 73, -9, 21, 14, 24, -60, 56, -14, -15, -28, -32, -49, -64, 19, 11, 69, 107, 73, -87, -70, -63, 36, -5, 21, 82, -17, 61, 22, -17, -44, -24, 2, 64, 41, 32, 98, 58, -24, 8, -28, 23, 82, -63, -27, -22, -58, -11, 28, 31, -1, 54, 23, -19, 76, 77, 72, -53, 70, -13, 43, 19, 45, 36, 4, -44, 67, -47, -83, -20, 28, -4, -2, 5, 65, -68, 42, -23, 72, -27, -59, 73, 19, -41, -2, -62, -10, 14, -81, 64, 2, 8, 98, 7, -9, -10, -52, 64, 65, 29, 13, -20, -67, -93, -24, 84, -34, 68, 29, 12, -2, -28, 20, 85, 62, -28, -6, 37, 2, -33, 38, -79, -62, 16, 37, 91, 98, -51, -8, 48, -47, -33, 38, -81, 61, -32, 65, -35, 12, 4, -12, 1, 72, 83, 52, 70, -36, -61, 106, 14, 49, -21, -49, 80, -37, 5, 15, -18, 66, -93, -41, -31, -92, 29, -8, -5, -16, -41, -30, -27, -79, -31, 21, 14, 28, 86, -31, -41, -81, 50, -82, 21, -38, -50, -5, -36, 15, 58, 9, 15, 27, 24, -65, -71, 8, -21, -72, 12, -18, 32, 73, 10, -42, -87, 22, -21, 24, 33, 36, 77, 14, -69, -34, 77, -54, 37, 74, 51, -54, 49, 33, -53, -28, 41, -12, 14, -42, -69, -102, -5, -78, 2, 45, 21, -76, -6, -16, -12, -47, -37, -59, 87, -42, -55, 8, 65, -50, 76, 27, -23, -57, 46, 17, -21, -30, 20, -39, 29, 26, -2, 41, -29, 20, -32, 26, -45, -56, 61, 30, -7, -43, 40, -2, 55, 56, -55, -36, -9, -14, -8, 41, -47, -16, -16, -6, -45, -64, -30, 9, -28, 13, -12, -14, 9, -10, -62, -38, 57, 33, -55, -3, -56, 66, -38, 81, -78, -26, -32, -15, -85, -93, -13, -11, 9, -19, 15, 71, 24, 48, -10, -30, -66, -25, 94, 22, -1, 30, 41, -37, 46, 74, 18, -27, -49, 26, 8, 51, 58, -33, 63, -18, 49, -46, -56, 42, 58, 12, 18, -14, 84, -67, 21}

#define TENSOR_DENSE_KERNEL_0_DEC_BITS {8}

#define TENSOR_DENSE_BIAS_0 {60, -31, 32, 15, 98, -77, -33, -76, 38, -89, 51, -73, -126, -89, 30, -28, 75, 77, 5, -100, -48, 49, -44, 14, -19, 40, 48, -97, -113, 16, -109, 67}

#define TENSOR_DENSE_BIAS_0_DEC_BITS {11}

#define DENSE_BIAS_LSHIFT {4}

#define DENSE_OUTPUT_RSHIFT {8}

#define TENSOR_DENSE_1_KERNEL_0 {32, 16, -60, 30, -39, 35, 49, -69, 51, -14, -87, 26, -62, 72, 23, -59, 86, 30, 2, -59, -61, 11, -110, -54, -69, -49, -85, 66, 72, -34, 21, -56, 54, -88, -31, 0, -70, -36, -8, -31, -41, -59, 6, -27, 28, 3, 66, 65, 23, 58, -38, -14, 30, 85, -32, -77, -39, -34, 42, -33, 28, 42, 11, -69, 68, 8, -59, 16, 70, 19, 43, 55, 28, -41, 14, 27, 64, -57, 6, 60, 32, 57, -48, 2, 2, 95, -96, -39, 29, 60, -34, -69, -3, -92, 52, 41, -49, -30, 49, 96, -42, -79, 41, 19, -33, -56, -68, 57, 46, 25, -50, 23, -3, -22, -53, 28, -70, 37, -11, 42, 26, 72, 17, 55, 22, -10, -46, 28, -65, -4, -23, 43, -14, 51, 41, 0, 96, -19, 11, -79, 6, -94, 81, -48, -38, 91, 38, -62, -17, 47, -122, -65, -25, -49, 44, -59, -41, 26, 47, -43, 16, 7, 9, 49, -44, 6, -48, -12, -7, -68, -70, 24, 13, 69, 4, -1, 73, 68, 81, 36, -56, -79, -38, 55, -12, -84, 10, -83, 26, -7, -33, -109, -50, -53, 49, 2, 17, 7, -11, 55, 10, 72, 24, 38, -42, -30, 27, -69, -68, -65, 17, 3, 42, 54, -4, 53, -52, 64, -33, -10, 31, 37, -44, -22, 62, -48, -98, 59, -59, -21, -34, 79, -12, 85, 53, -80, -35, 85, -58, -91, -69, -54, -39, -70, -66, 33, 52, 29, 27, -37, -27, 53, -53, -14, -46, -7, -22, 26, -3, 9, 18, 35, -40, 37, -4, -108, 46, -4, 78, 0, -98, 1, -27, 74, -95, -112, 45, 37, 16, 41, 35, 60, 57, -18, -26, -8, -41, 31, -76, -78, 95, 85, 33, 19, -9, -22, -30, -31, -12, 11, -15, -35, -72, 76, 10, -44, -26, 30, -70, -14, 57, 12, -11, -73, -42, -121, -71, -14, 101, 111, 52, 26, 43, 78, 75, -85, -98, -49, -25, 7, -37, -74, 12, 35, 20, -36, 70, 83, 41, 1, -26, 42, -20, 32, 62, -52, -5, -45, -52, 36, 84, -62, -7, 15, 51, -29, 53, -69, -47, 57, 51, 77, 90, 70, -71, -44, -81, 79, 3, -11, -47, -18, 72, 49, 14, -39, -8, -63, 29, -10, -43, -29, 81, -72, 66, -20, -57, -36, -78, -83, -28, 0, 81, 29, 10, 27, -54, -14, 57, 75, 40, -82, 52, -10, 2, -60, 82, -93, -66, 59, -29, -29, -43, 83, -52, 9, -52, -63, 53, -52, -31, 15, 63, 93, -1, 64, -20, 75, 50, 72, 29, -43, -27, -58, -37, 81, 68, -28, -54, -4, 51, -39, 116, 110, -2, -71, 66, -14, 18, -81, -76, -19, -14, -42, -1, 35, 15, -76, 38, -51, -41, -32, -32, -24, -44, -59, 63, 11, -60, 79, 68, -25, -86, -52, 53, 26, -33, -20, 26, -45, -35, -4, 35, -75, 5, 19, 27, 55, -43, 42, 60, -51, 34, 45, -61, -54, 55, -58, 49, -40, 11, 66, 26, 39, 49, -8, 51, -10, -52, 3, 79, -56, 48, -45, 26, 45, 42, 31, 19, -43, -21, 26, 27, 5, -23, -19, 26, -49, 1, 5, 113, 48, -34, -51, -56, 40, -60, 59, -54, -8, -59, 23, -21, 34, 4, 80, -49, -24, 37, 56, 34, -68, -18, 19, 0, -51, -55, -60, -91, 22, -27, 57, -41, 57, 8, 56, -45, 53, 63, 58, -7, 94, -92, 94, -77, -66, -20, -30, -77, 29, -18, -79, 29, -15, -52, -65, 31, 16, -18, -84, -51, 92, -69, -72, -42, 81, -24, 5, -12, -77, 71, 35, -10, 6, -6, -1, 61, -53, -61, 5, -23, -103, 48, 30, -10, -17, 17, -38, -23, 67, 47, -4, -12, -8, -1, -19, -7, 81, -26, -13, -45, 71, -18, 1, 15, -64, -2, 53, 65, 0, 62, -78, 91, -47, -59, -79, -40, 69, -70, -20, 37, -57, -68, -43, 13, -66, -27, -52, -33, 62, -10, -58, 23, -59, 3, 34, 55, -24, 86, -32, 29, 3, -49, -44, 81, -80, -47, -60, 15, -50, -6, 70, 32, 4, 50, 30, -30, 56, 77, 83, 36, -73, 44, 48, -43, 31, 67, 76, 21, 34, 9, 89, 84, -23, -15, -43, 91, -72, 27, -34, 28, 2, 68, -55, 9, 18, 45, 19, -10, -35, 67, -36, -73, 93, -1, -51, 53, -60, 72, -88, -3, 61, -45, -41, 68, 82, -2, 75, -6, 10, 34, -83, -28, 39, -40, -68, -15, 85, -7, 47, 39, 53, 53, -43, -11, -34, 43, -37, 101, -23, 81, 51, 14, -16, 5, 5, 6, -46, -8, 27, -1, 19, 29, -11, -76, 72, -76, -8, 6, 29, -3, -52, -73, 58, 48, -3, 48, 100, 41, -1, -37, -62, -68, -26, -81, 54, -43, 45, 29, -57, 87, -25, 59, 23, 68, -12, 48, -46, -24, -50, 5, 52, 30, -80, 67, -11, -42, -4, 54, 27, -46, 72, 61, 44, -92, 47, -28, 91, -46, -83, 66, -16, 59, 7, 3, 16, 60, 42, -61, 26, -22, -3, -62, -36, -38, -15, 3, -16, -34, 22, 74, -12, 37, -14, 37, -66, 82, -22, 53, -55, -87, 11, 34, 30, -17, -64, 54, 43, 68, 66, -68, 99, 47, -83, -27, -58, -58, -50, -56, -54, -30, 42, -95, 7, 25, -83, 49, -1, 3, -9, 48, 56, -65, 68, -25, 72, -21, -16, 57, 80, -17, -14, 23, -65, -14, -46, -11, 23, -91, -22, 41, -48, 79, 31, -89, -81, -44, -77, -5, 15, -34, 29, -43, -32, 70, -64, -58, -75, -17, 65, 70, 7, -78, 47, -1, -68, 6, -33, 47, -71, 13, 18, 47, 66, -77, 62, 61, -51, -18, -38, -15, 13, 28, 39, -20, 32, -66, 81, -46, 46, 59, 47, -69, -20, 45, -2, -54, 34, 70, 11, 11, -28, 66, 26, 61, -68, -23, -28, -80, -63, -49, 24, -62, 52, 19, 78, -48, 1, -70, -32, -86, 57, -53, 54, 94, 24, 19, 50, -59, -5, 16, 49, -52, 16, -48, 55, 73, 72, -89, 44, -58, -38, -58, -4, 68, 21, -26, 78, -70, -13, 10, -20, 53, -8}

#define TENSOR_DENSE_1_KERNEL_0_DEC_BITS {8}

#define TENSOR_DENSE_1_BIAS_0 {30, 4, -1, -31, 4, 36, -23, 19, -20, 0, 26, -30, -27, -12, -18, -19, -10, -69, 34, -32, -15, -28, -37, -29, 34, 2, -28, 13, 26, 21, -4, 4}

#define TENSOR_DENSE_1_BIAS_0_DEC_BITS {10}

#define DENSE_1_BIAS_LSHIFT {5}

#define DENSE_1_OUTPUT_RSHIFT {9}

#define TENSOR_DENSE_2_KERNEL_0 {53, 5, 7, -41, -1, 2, 2, 39, -24, 40, 45, -34, -64, -12, -12, -27, -22, -51, 47, -54, 36, -53, -7, -40, 53, 1, -52, 24, 53, 29, 21, 5, -2, -20, -19, 2, 44, -56, 7, -32, -49, 0, 51, 53, -24, 51, -1, -46, -8, -30, -52, 19, 26, 18, 42, 36, -14, 34, 46, -25, -35, -25, -6, 52, -31, 18, 32, 26, -37, -49, 58, 20, 65, 61, -62, 26, -54, -8, -10, 33, -24, -41, -42, 47, 61, -12, 46, 43, -32, -18, 11, 19, 9, 8, 51, -30}

#define TENSOR_DENSE_2_KERNEL_0_DEC_BITS {7}

#define TENSOR_DENSE_2_BIAS_0 {127, -37, -107}

#define TENSOR_DENSE_2_BIAS_0_DEC_BITS {12}

#define DENSE_2_BIAS_LSHIFT {1}

#define DENSE_2_OUTPUT_RSHIFT {9}


/* output q format for each layer */
#define INPUT_1_OUTPUT_DEC 7
#define INPUT_1_OUTPUT_OFFSET 0
#define LSTM_OUTPUT_DEC 7
#define LSTM_OUTPUT_OFFSET 0
#define DENSE_OUTPUT_DEC 7
#define DENSE_OUTPUT_OFFSET 0
#define DENSE_1_OUTPUT_DEC 6
#define DENSE_1_OUTPUT_OFFSET 0
#define DENSE_2_OUTPUT_DEC 4
#define DENSE_2_OUTPUT_OFFSET 0
#define SOFTMAX_OUTPUT_DEC 7
#define SOFTMAX_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[390] = {0};

const nnom_shape_data_t tensor_input_1_dim[] = {65, 6};
const nnom_qformat_param_t tensor_input_1_dec[] = {7};
const nnom_qformat_param_t tensor_input_1_offset[] = {0};
const nnom_tensor_t tensor_input_1 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_input_1_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_input_1_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_input_1_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};

const nnom_io_config_t input_1_config = {
    .super = {.name = "input_1"},
    .tensor = (nnom_tensor_t*)&tensor_input_1
};
const int8_t tensor_lstm_lstm_cell_kernel_0_data[] = TENSOR_LSTM_LSTM_CELL_KERNEL_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_kernel_0_dim[] = {6, 128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_kernel_0_dec[] = TENSOR_LSTM_LSTM_CELL_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_kernel_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_lstm_lstm_cell_recurrent_kernel_0_data[] = TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_recurrent_kernel_0_dim[] = {32, 128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_recurrent_kernel_0_dec[] = TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_recurrent_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_recurrent_kernel_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_recurrent_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_lstm_lstm_cell_bias_0_data[] = TENSOR_LSTM_LSTM_CELL_BIAS_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_bias_0_dim[] = {128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_bias_0_dec[] = TENSOR_LSTM_LSTM_CELL_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_bias_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_bias_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_lstm_cell_config_t lstm_lstm_cell_config = {
    .super = {.name = "lstm"},
    .weights = (nnom_tensor_t*)&tensor_lstm_lstm_cell_kernel_0,
    .recurrent_weights = (nnom_tensor_t*)&tensor_lstm_lstm_cell_recurrent_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_lstm_lstm_cell_bias_0,
    .q_dec_z = 5,
    .q_dec_h = 7,
    .q_dec_c = 5,
    .units = 32
};

const nnom_rnn_config_t lstm_config = {
    .super = {.name = "lstm"},
    .return_sequence = false,
    .stateful = false,
    .go_backwards = false
};
const int8_t tensor_dense_kernel_0_data[] = TENSOR_DENSE_KERNEL_0;

const nnom_shape_data_t tensor_dense_kernel_0_dim[] = {32, 32};
const nnom_qformat_param_t tensor_dense_kernel_0_dec[] = TENSOR_DENSE_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_kernel_0 = {
    .p_data = (void*)tensor_dense_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_bias_0_data[] = TENSOR_DENSE_BIAS_0;

const nnom_shape_data_t tensor_dense_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_dense_bias_0_dec[] = TENSOR_DENSE_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_bias_0 = {
    .p_data = (void*)tensor_dense_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_output_shift[] = DENSE_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_bias_shift[] = DENSE_BIAS_LSHIFT;
const nnom_dense_config_t dense_config = {
    .super = {.name = "dense"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_bias_shift
};
const int8_t tensor_dense_1_kernel_0_data[] = TENSOR_DENSE_1_KERNEL_0;

const nnom_shape_data_t tensor_dense_1_kernel_0_dim[] = {32, 32};
const nnom_qformat_param_t tensor_dense_1_kernel_0_dec[] = TENSOR_DENSE_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_kernel_0 = {
    .p_data = (void*)tensor_dense_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_1_bias_0_data[] = TENSOR_DENSE_1_BIAS_0;

const nnom_shape_data_t tensor_dense_1_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_dense_1_bias_0_dec[] = TENSOR_DENSE_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_bias_0 = {
    .p_data = (void*)tensor_dense_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_1_output_shift[] = DENSE_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_1_bias_shift[] = DENSE_1_BIAS_LSHIFT;
const nnom_dense_config_t dense_1_config = {
    .super = {.name = "dense_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_1_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_1_bias_shift
};
const int8_t tensor_dense_2_kernel_0_data[] = TENSOR_DENSE_2_KERNEL_0;

const nnom_shape_data_t tensor_dense_2_kernel_0_dim[] = {32, 3};
const nnom_qformat_param_t tensor_dense_2_kernel_0_dec[] = TENSOR_DENSE_2_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_2_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_2_kernel_0 = {
    .p_data = (void*)tensor_dense_2_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_2_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_2_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_2_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_2_bias_0_data[] = TENSOR_DENSE_2_BIAS_0;

const nnom_shape_data_t tensor_dense_2_bias_0_dim[] = {3};
const nnom_qformat_param_t tensor_dense_2_bias_0_dec[] = TENSOR_DENSE_2_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_2_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_2_bias_0 = {
    .p_data = (void*)tensor_dense_2_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_2_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_2_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_2_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_2_output_shift[] = DENSE_2_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_2_bias_shift[] = DENSE_2_BIAS_LSHIFT;
const nnom_dense_config_t dense_2_config = {
    .super = {.name = "dense_2"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_2_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_2_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_2_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_2_bias_shift
};

const nnom_softmax_config_t softmax_config = {
    .super = {.name = "softmax"}
};
static int8_t nnom_output_data[3] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {3};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[7];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&input_1_config);
	layer[1] = model.hook(rnn_s(lstm_cell_s(&lstm_lstm_cell_config), &lstm_config), layer[0]);
	layer[2] = model.hook(dense_s(&dense_config), layer[1]);
	layer[3] = model.hook(dense_s(&dense_1_config), layer[2]);
	layer[4] = model.hook(dense_s(&dense_2_config), layer[3]);
	layer[5] = model.hook(softmax_s(&softmax_config), layer[4]);
	layer[6] = model.hook(output_s(&output0_config), layer[5]);
	model_compile(&model, layer[0], layer[6]);
	return &model;
}
