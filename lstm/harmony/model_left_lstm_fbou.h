#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_LSTM_LSTM_CELL_KERNEL_0 {27, 14, 53, 21, 4, -2, -49, 11, 19, 39, -20, -34, 11, 23, -9, -18, 27, -6, 19, 47, 52, 56, -29, 27, -8, 27, 6, 21, -42, -15, -10, -59, -15, 28, -21, -20, 6, -58, 9, 34, 16, -46, 17, 9, 31, 15, -6, 30, 7, 9, 54, -22, -6, -29, 57, 13, 33, 15, -22, -27, -11, -16, -21, -21, -9, 10, 19, 4, -42, -49, 12, 3, -28, 22, 17, -26, -15, -17, -35, 22, 17, 35, -25, -10, -2, -70, 5, 12, -12, -48, 0, -27, -18, -25, 2, 1, 47, -17, 39, -68, -10, 22, -4, -6, 44, 5, -15, 37, -25, 24, -27, -34, -2, 44, 12, -21, -21, 24, 31, 4, 14, -32, 28, 46, 21, -13, 25, 45, 1, 55, 20, -2, -60, 10, 21, 4, 33, -11, 20, -4, 34, -28, -25, 6, -5, 13, 11, 17, 33, -21, 24, 13, 8, 31, 11, -37, 64, 8, -29, -9, 31, 25, -8, -36, 42, 54, -21, 15, -13, -23, -17, -39, 57, 64, -6, 33, -5, -32, -45, 16, -19, 37, 6, -25, 2, -17, -32, 13, 8, 7, -37, -25, 31, -2, 2, 11, 42, 14, 27, -12, -16, 52, 12, 8, 51, 26, -35, -30, 6, -71, 53, 13, 33, 32, -40, -62, -17, 17, 9, 14, -61, -32, -2, -57, -13, 39, -25, -50, -4, -54, 9, -9, -35, -25, 20, 58, 0, -3, 8, -8, -38, -22, 62, -8, -47, -8, 33, -1, 9, 47, -27, 9, -23, -1, 17, -14, -17, -25, -7, 20, -7, -26, -4, -1, -37, 17, 40, -9, 22, -30, -16, 14, 18, 2, -26, 11, -14, -25, 21, -35, -11, -17, 56, 31, -58, -14, -17, 14, 26, 16, -4, -8, -8, -16, 11, -1, -10, 33, -16, 17, -57, 61, 34, -37, -10, 26, 49, -47, -3, 32, -14, -32, -9, -2, 30, 63, 0, 36, 14, -9, 43, 40, -27, -30, -44, 6, -20, 17, -28, -40, 41, -1, 7, -38, 17, 25, -35, -22, -7, 17, 37, -28, 19, 47, 18, 32, -29, -22, 30, 20, -50, 1, -9, 5, 5, -7, 19, 18, 9, 17, -8, 34, -16, -17, 25, 51, -5, -6, 43, -6, 3, 22, 23, -41, 8, -19, 26, 54, -11, -42, -27, 2, 23, 27, 13, -29, 51, -10, 41, 22, 16, -21, 20, 4, 29, 21, -8, -11, -17, 4, 0, -13, 12, 23, -43, -26, 6, -19, 0, -14, 1, 18, -3, -2, 12, 44, 18, 14, 24, -19, -4, 47, -12, -16, 21, 0, 16, 18, 19, 3, 22, -15, -31, 45, -5, 5, 37, -27, 43, 19, 5, -17, 18, -30, -29, 17, -21, -10, 32, 34, 15, -8, 10, -5, 26, 8, 6, -37, 22, -15, 12, 7, 7, -13, -1, -38, -12, 18, 54, -36, 13, -10, -12, 17, -28, 31, -5, -25, -38, 14, -10, 27, -36, 57, -28, -1, -17, -34, 21, 26, 16, -19, 34, -7, -1, -7, -22, 5, 11, -8, -2, 4, -37, 31, -22, 15, -18, 15, 2, -63, -9, 8, 3, 46, -27, 6, 17, -51, 1, -22, -11, -27, -33, -3, 21, -16, -32, -10, 14, -32, -41, -14, -36, -5, -20, -21, -11, -6, 33, 18, -15, -2, 8, 23, -11, -17, 29, 14, 0, -10, 18, -22, 30, -37, -28, 33, 4, -4, -15, -30, -16, 5, -27, -24, 5, -27, -17, 8, 39, 18, -17, -31, 25, -15, -33, 14, -4, -35, 40, 10, 26, -24, 0, 4, -5, 30, -22, -24, 18, 27, -33, -13, -21, -67, 27, -6, 34, 26, -7, 2, -10, 7, 27, 24, -12, 9, -31, -40, -13, 54, -5, -41, 10, -28, -31, -26, -42, -43, 4, 22, 46, 35, 9, -4, 13, 14, 33, 23, -56, -15, -9, 0, 24, 16, -12, -25, -56, -4, -28, -6, -28, -14, 27, 20, -18, -13, 10, -23, -50, 3, 32, -34, -21, 11, -65, 37, 22, 21, -25, -25, -22, -51, 17, -24, -19, -51, 23, 16, -42, 5, -14, 41, 19, -21, -6, -18, -10, 9, 21, 18, 18, -4, -35, 20, -47, 46, 0, -12, -30, 23, -12, -46, -35, 33, 26, 10, 23, 1, 38, 53, 60, 38, -21, 7, 43, 32, 13, -23, -40, 28, -6, 29, -18, -3, 5, -4, -4, 4, 44, -5, -18, -24, -25, 36, 11, 3, 25, 17, 1, 10, -30, -45, 32, 20, -39, -15, 22, 51, -20, 6, -5, 33, 14, 14, -33, -5, -16, -30, 22, 16, 29, 27, 42, -7, -20, -10, 14, -25, -28, 6, 12, 27, 1, -1, -22, -5, 12, -9}

#define TENSOR_LSTM_LSTM_CELL_KERNEL_0_DEC_BITS {7}

#define TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0 {3, 0, -13, -14, -40, -47, 5, 5, 12, -6, 5, 18, 22, 16, -21, -18, -14, -15, 7, 13, -22, -6, -30, -7, 8, -17, 0, -11, 6, 9, 6, -8, 10, -10, 23, 2, 4, 0, 28, 20, 10, 2, 2, 3, -14, 17, -4, 3, 13, 22, -3, -3, -3, 14, 10, 16, 4, 3, -14, 4, 0, -27, 2, 10, -16, 0, -1, -2, -2, -3, -12, -7, -11, -10, -24, -26, 6, -11, 29, 10, 10, 14, -11, 10, -12, -17, -5, 24, 8, 5, 13, -2, -10, 12, -15, -6, 4, 10, 1, 12, 0, -4, -14, 7, -10, -20, -10, 19, 13, -12, -27, -32, -21, 23, 19, 5, -2, 20, -11, -1, 6, 6, -15, -12, -27, 18, 21, 19, 16, 2, -16, 10, -1, -32, -14, 14, 7, -10, 37, 12, -12, 44, 10, -7, -2, 4, 25, 4, -19, -31, 11, -23, 31, -6, -21, 15, 27, 13, -2, -20, -34, 4, 12, 10, -8, -16, -1, 27, 8, -1, 1, -10, 10, -14, -10, -24, 14, 11, -23, 21, 7, 11, -18, 4, -9, 19, -4, -12, -18, -37, -2, 14, -4, -30, 8, 7, -3, 0, 11, 18, -1, 17, -17, -13, -14, -21, -15, 42, 2, -1, 19, -24, 25, 14, 11, 11, 15, 10, -34, 13, 7, 15, -19, -19, -5, -32, -33, -24, -27, 13, -22, -1, -7, -21, 12, -19, -3, 39, -26, -17, 15, 21, 0, 30, -9, 5, -9, -8, 23, 19, 4, -14, 21, 19, -16, 34, -11, -28, -8, -11, -9, -19, 13, 10, 2, 11, -13, -15, 5, -16, -9, 13, 15, -23, -17, -11, -37, -42, 17, 2, -15, -2, 15, 19, 6, -2, 14, -19, 5, 2, 10, -1, -18, -16, 7, -8, -15, -23, 6, 0, 24, 11, 15, -10, 11, -3, 9, -7, 14, 21, -11, -3, 12, 7, -22, -6, -2, 3, -24, 0, -3, 1, -5, -7, -7, -18, 6, 6, 9, -3, 2, 15, -10, 2, -23, 14, 4, -4, 2, 9, 8, 16, -9, -2, 16, 6, 20, 16, 1, 17, 3, 18, -36, -6, 2, -9, -34, -21, -6, 2, -7, 16, -9, -7, -8, -4, -42, -31, 10, 1, 1, 11, -25, -7, 28, 25, 0, -11, 2, 17, -15, 12, -35, 33, 9, -18, 1, -16, -15, 3, 2, -13, -10, -26, 13, 0, 26, 6, -7, 21, -8, 19, 17, -21, -18, -18, 20, 11, 6, 7, 13, -18, 24, -4, -5, -17, 16, 4, 3, -10, -7, -12, -4, -7, 14, 2, 5, -15, -3, 6, -15, -3, 2, 15, 1, -9, 19, -11, -16, 14, 13, 7, -4, -10, -16, -5, 15, -10, -8, -3, 0, 5, 2, -4, 13, -3, -2, -45, -24, -5, 16, -1, 25, -8, 17, 21, -25, 5, -3, -14, 21, -3, 3, 15, 12, -21, 4, 18, -20, 3, 0, 26, 4, -14, -25, 29, -19, -22, 4, -5, 4, -20, -18, -8, -32, 6, 2, 5, -11, -16, 4, -14, 12, 20, 20, 1, -6, 10, 8, 12, 9, 10, -20, 3, -2, 16, -21, -20, -11, -16, 20, 6, 5, -18, 18, 8, -2, -1, 1, -16, 1, -20, -13, -12, 3, -2, -5, 7, 25, 6, -4, 5, -16, -8, 2, 4, 40, 6, 4, 0, -16, 1, -3, 11, -7, -2, 8, 26, -11, -26, -22, -19, -14, -3, 23, 16, -10, -21, 10, 2, -23, 6, 17, -23, 10, -18, -26, 21, 19, 14, 5, -3, 0, 20, 25, -16, -15, 13, 4, 9, 12, 20, -3, -22, 23, -25, 8, -5, 17, 9, -1, -13, -5, -8, 10, 17, -22, -8, -15, 19, 10, 14, 18, 11, 13, 11, 1, 8, -37, -18, 23, -5, -6, -24, 3, 9, 45, 0, 8, 13, -3, 24, 3, -12, -21, 44, -10, 17, 13, 9, 0, -8, -9, -9, -8, 1, -32, -12, -8, 24, 7, 8, 21, 16, 21, -7, 6, 23, 8, -4, -7, 7, 21, 18, 6, -10, 5, 13, 4, 18, 7, 6, 17, 7, 27, -43, -3, -1, 36, 27, 10, 14, -1, 11, 4, -4, 14, -13, 9, 2, -16, -8, 5, 31, -13, -6, -45, 3, -10, 3, -6, 5, 0, 9, -32, 4, -4, -2, 0, -23, 3, 32, -2, 7, -7, -7, -6, 3, -38, 23, 16, -13, -19, 11, 25, 8, -26, -5, 24, -14, -24, -15, 23, -1, -1, 6, -14, -9, 1, -20, -6, 13, -15, 6, -13, 14, -13, -7, -47, -21, 9, -63, -6, -4, 28, 3, 7, -1, 35, 9, 16, -4, -23, 11, 21, 8, -8, -4, -20, 0, -27, -8, -1, 4, -2, -22, 20, -27, 6, 7, -23, 4, -6, -3, -11, 3, 23, 21, 1, 12, -1, 0, 29, 14, 3, 18, -24, 21, 20, -22, -14, -15, -6, -4, 22, 10, 23, -5, 24, -4, -21, 3, 0, 0, -3, -23, 7, -15, -16, 18, 2, 23, 5, 4, -18, 6, 4, -13, 16, -20, -27, -4, -7, -31, 10, -2, 23, 8, -2, 2, -14, -6, 23, -8, 13, -20, 7, 30, 5, -6, 21, -20, -13, -7, -11, -14, 13, -8, -8, 16, 8, 17, -18, -19, 13, -35, 5, -28, -23, 1, 24, -30, 1, -8, -4, 2, -18, -11, -10, 9, 24, 4, -18, 44, -22, -1, 6, -8, 21, 19, 19, -19, 27, -1, -7, 16, -4, -21, -18, -1, -8, 15, -10, -14, -7, 21, -24, -3, 12, 1, 14, 32, -16, -22, 13, -6, 21, -2, 5, -1, 15, -18, -4, -15, -21, -2, -2, 2, 2, 0, 6, 17, 11, -22, 34, -43, 14, -24, 0, -18, 14, -13, -14, -1, 15, -9, -30, 2, 6, 13, 13, 6, -3, -3, 17, 9, 2, 6, -8, -11, -16, 18, -1, -32, -13, -22, -21, -4, -17, -10, 7, -9, -14, 9, -31, 7, 29, -4, -7, -27, -17, 31, -9, 15, 3, 3, -4, 25, -1, 0, -17, -4, -31, 3, -12, 24, 4, 6, 9, -18, -7, 34, 1, -19, -12, -31, 24, 4, 15, -14, 5, 25, -9, 7, 28, 13, 6, -12, 29, -3, 2, 21, -15, -12, -6, -9, 6, 1, 2, 7, -27, -4, 0, 13, 24, 4, 7, 1, 3, -3, -21, -1, 18, 10, -21, -5, 1, -19, 7, -13, -2, -7, -10, -12, 26, -4, 25, -9, 14, -19, -13, -7, 29, 8, -8, 6, 7, -3, -10, 17, -30, -23, 20, 9, -10, -39, 7, -23, -14, -6, -22, -11, -33, -7, -14, -15, -11, -6, -9, 3, 23, 4, 2, -11, -3, -8, -4, -3, -24, -15, 26, 9, 2, -10, -5, 10, 10, 1, 13, 13, 14, 18, 12, 11, 10, -7, 14, -4, -15, -10, -29, 7, 4, -5, -18, -15, -2, 5, -19, -41, 9, 5, -16, 12, -21, -22, 16, -5, 10, -14, 24, 19, -1, 25, 8, -8, -11, 12, 9, -8, -19, 13, 10, 10, -27, -7, -13, -40, -3, 10, -22, 19, -4, 1, 11, 24, 3, 0, -14, -21, 9, 13, 6, -16, 31, -23, 6, 26, -16, 26, 35, 23, -7, -12, -13, -20, -9, 25, -3, -8, -2, -21, 2, 31, -1, 18, 25, -2, 6, -12, 24, 38, -26, -24, 20, -15, -17, -20, 8, -19, -4, -13, 12, -6, 18, 13, -11, -29, 14, 51, -21, 29, -20, -7, -23, 26, -28, -9, 2, -21, 9, 35, -9, 18, 11, 11, 0, 35, 27, -6, 13, 29, -5, -9, 38, 7, -3, 2, 10, -14, -8, -16, -11, 5, -11, 5, 6, -30, 9, -7, -5, 21, -7, -7, 20, 14, 3, 20, 5, 30, -11, -30, 15, 1, 9, 4, 26, -3, 11, 29, 11, -7, 0, 5, -14, -7, 2, 15, 12, 21, -20, -11, 24, 39, -6, -2, -10, 0, 2, -6, -22, -36, 2, -23, 3, 0, 14, -14, 7, -18, -9, -1, -11, -4, 16, 0, -10, -5, 5, 8, 14, -16, -4, -1, 4, 8, -1, 12, 9, 6, 2, -13, 12, 8, -15, 26, 27, 16, -2, -7, -18, -10, 20, -11, 6, 7, 0, 6, -26, -23, -2, 21, -8, -17, 7, 8, 7, 7, 2, -6, 0, 9, 18, 29, 19, 1, 1, 7, 5, 7, -16, -5, 6, 2, 10, 1, -21, 11, -8, -3, -82, -22, -25, 18, -15, -1, -14, -12, 3, 10, -33, -43, -9, 21, 4, -7, 13, 5, 16, 15, -6, -4, -10, 0, 14, 26, 10, 15, -10, 5, -10, 9, -13, -15, 8, 0, -5, -4, 1, 7, 8, -21, 21, -4, -8, 3, 5, 20, -36, 13, 5, 2, 22, -9, 13, 11, 13, -2, -7, -6, -13, -11, -15, 8, -15, 1, 1, 0, 13, 2, 16, -18, -4, -4, -4, -6, 24, 2, 12, -7, -12, 3, -22, 9, -8, 0, 1, 8, -10, -7, 11, 35, -15, 8, 21, -7, -17, 8, 10, 9, -10, -18, 6, -3, -22, 3, 34, -10, 9, -11, -1, 20, -10, -15, 7, -4, -17, 2, 7, -4, 7, -11, 2, -12, -24, -19, 4, 0, -8, -9, -12, 6, -5, -11, -4, 13, 5, -11, 4, -14, -19, 4, 16, -17, -2, 0, -8, -2, -12, 23, -6, -9, 14, -19, -10, 14, -18, 12, 11, 5, -13, -16, -5, -6, 17, 6, -14, -14, 1, 17, 21, -3, -5, 10, -3, -31, -9, -17, -13, 18, 7, -25, 25, 3, 2, -2, -18, -2, -3, 11, 34, -1, -13, -28, -5, 0, 20, 13, 15, -12, 31, 10, -15, -6, 5, -10, -16, 14, 30, -7, -19, -23, -9, 25, -8, 5, -21, 5, 14, -1, 20, 6, 32, -3, -37, -14, 13, -11, -1, 16, -7, 2, -10, -23, 0, 6, 5, -19, 3, 5, 12, 5, 9, 3, 11, -13, -12, -3, -2, -1, -1, -16, -22, 31, 3, -6, 14, -13, -3, -8, 7, -23, -33, -3, 4, -6, -5, -23, -6, -1, 16, -16, -2, 20, -9, -5, 18, 0, -18, 10, -5, 5, 18, 5, -9, -1, 4, 12, -21, -14, -26, -5, 9, 9, -5, -20, -18, 19, 37, -19, -12, -5, 22, 12, -1, -15, 18, 12, 29, 17, 8, 10, -3, 21, -19, -10, -1, 0, 17, 13, -1, 9, 23, -8, 1, -19, -24, 2, 33, 7, 18, 17, 13, -13, -26, -8, -3, 4, -1, -12, -21, -2, 17, -3, 0, -12, 16, -24, -21, 12, 16, 5, 11, -4, 13, 0, -17, 24, 0, 11, -4, -2, -27, 23, 16, 15, 5, 8, 15, 8, 13, 32, 9, 7, -24, -24, 6, 3, -11, -33, -12, -13, -13, 7, 15, -9, -4, 6, -8, 2, -2, -44, -14, 5, 1, -8, 15, -2, 8, 12, -6, 18, 12, 6, 5, -6, 32, 7, 16, 1, -3, 8, 9, 5, -8, -22, -27, 10, -11, 17, 13, -14, -2, -7, 0, 23, -1, -21, 0, -21, 1, 18, -21, -11, 10, 20, 13, 8, -17, 14, -1, 11, -7, -18, 24, 7, -12, 27, -4, 12, 27, -15, -15, 18, -2, 5, -10, -4, 6, -8, 0, -6, -13, 0, 8, 0, -18, -13, -6, 1, 28, 4, -24, 7, -12, 0, 14, -4, 29, 27, -5, 6, 14, 16, -19, -27, 6, -16, 16, -30, 6, 30, 5, 2, 27, -7, 25, 8, 8, -10, 6, 11, -25, 3, -4, -27, 3, -31, 3, -50, -21, -18, -32, 6, -4, 4, -7, -10, -6, -32, 4, 3, -22, 7, 19, 8, 10, 11, -18, 8, 10, -25, 5, 0, -11, -13, 35, -3, -7, 23, -16, -5, -9, 3, -10, -3, -34, -14, 6, 2, -11, 5, 6, 1, -19, 29, -37, -8, -12, -5, -2, -1, -19, 20, 9, -18, 3, -14, -18, 18, -9, 4, -22, -2, 16, 30, -24, 7, 25, 19, 11, -10, -13, 10, 13, 23, -4, 11, 7, -5, -6, 25, 5, 31, -17, -20, 5, -6, -4, -15, -7, -12, 1, -31, -23, 0, 14, 6, -19, -21, 6, 0, 18, -5, 25, -16, -14, 2, -7, -25, -10, -3, 41, -27, 18, 3, -7, 3, 9, 5, 5, -3, 4, 6, -21, 2, -28, -14, -26, 8, 11, -10, -21, -27, 0, 14, -21, -23, -14, -23, 2, 1, -3, 13, 12, 13, 29, -3, 7, 18, -3, -9, -9, 24, 22, -10, 15, -11, 14, -3, -6, 26, -19, 4, 14, 0, -30, -6, -15, -19, 34, 5, 1, -14, 9, 6, 21, 3, -14, -10, -22, 11, -3, 1, -7, 30, -9, -25, 61, 25, 18, 18, 2, -8, -18, 6, 5, -1, -2, -14, 17, 12, -2, 14, 0, 22, -15, -11, -7, 29, 1, -21, -12, 9, 0, -4, 11, 1, -7, -11, 13, -3, -8, 0, 16, -1, 5, -26, 25, 11, 0, -5, 7, 11, -7, 11, 29, -15, 7, -5, -25, 2, 3, 2, 7, 14, -14, 0, 7, 3, 20, 13, -13, 1, -1, 1, 0, -24, -6, 29, 12, 6, 14, 33, 15, -4, 4, -13, -28, 0, -14, -18, 1, -1, -4, -32, 5, 0, 4, -41, -2, -7, -8, 30, -6, 9, 1, -2, -8, 9, 18, -4, -2, 0, 4, -6, 8, 15, -1, -2, -24, -19, 2, 28, 12, 19, 0, 17, 11, -3, -14, 12, 0, 16, 0, 3, 11, 21, 10, 7, -8, 6, -12, -9, -13, 9, -14, 14, 0, -4, 23, -13, 11, 2, 2, 6, 9, -8, 13, -13, -1, 1, -25, -4, 8, -10, -3, 29, 8, 3, 18, -14, -3, -25, 12, 15, 11, -9, 19, -11, 1, -11, -3, 7, 14, 2, -12, 26, 2, 0, 13, -7, -11, -1, -8, -14, -15, -9, -12, -13, 9, 2, 48, 0, 10, 7, -2, -26, -21, 5, -12, -27, 20, 17, 15, -4, -6, -19, 2, 5, -12, 17, 17, -3, 7, 30, 10, 24, 13, -24, -4, -1, -21, -6, 7, 11, -10, -8, 21, 8, 3, 7, 23, 6, -6, -8, -14, -15, 12, -3, 13, 22, 20, 3, -22, 8, 13, -9, 1, -2, -14, 18, -26, 6, -3, 20, 11, -4, 21, 3, -15, 38, 4, -1, -9, -9, 11, 21, 9, 13, -8, 7, -12, -7, 3, -9, 12, -1, -20, 18, -4, -18, -9, -7, 11, -12, -1, 4, -1, -12, 10, 4, -26, 10, -7, -24, 4, -12, 3, -12, -14, 9, -7, -10, 0, -12, -37, -15, -6, -15, 2, -14, 12, 20, -3, 5, 15, 14, -12, 20, 33, -1, 27, 24, -19, 7, -4, 21, 34, 11, -14, -8, -30, 9, 1, 2, -11, 0, 27, 22, -10, -9, -8, 35, -11, -29, -8, 7, -8, 23, 3, -8, 12, -5, 6, -10, 7, -7, -11, -7, -4, 7, -11, -1, 1, -6, -20, -12, 9, -5, 6, 3, 13, -24, 6, 7, 16, -10, -3, -14, -7, 34, 6, 6, -16, 4, -22, -6, 9, -10, -6, -7, -10, -5, -1, -2, -24, 20, -7, -36, 9, -18, -3, 22, 18, 11, 11, 5, -11, 4, 1, 9, 1, -23, 8, -1, -16, 18, 0, -15, 8, 4, -6, -7, -27, 14, -15, 2, 18, -9, -1, -21, 0, 5, 7, -4, -28, 10, -27, 8, -4, -6, -4, 10, 3, -27, 15, 4, -11, 17, -2, 10, -7, -11, -1, -10, -27, 13, -2, 3, 14, 11, -3, 7, -2, -14, -1, 1, -3, -3, -15, -29, 13, -16, -4, 17, -7, 5, 6, 14, -8, 8, -2, -15, -3, 15, 24, 2, 6, 19, 14, 3, 13, -4, -2, -13, -5, 3, -27, 14, 5, -11, -12, -10, -1, 12, -2, 1, -1, 18, 13, 16, 20, 5, 4, 32, 7, 4, 27, 6, -12, 18, -22, 20, -15, 13, -6, -5, 3, 5, 11, -21, 12, 10, -12, -5, -1, 1, 19, -13, 2, 1, -27, -2, -4, -28, 21, 14, 4, 6, 17, -7, -15, 9, 23, 15, 14, 16, -15, 23, -13, -4, -5, -2, 7, -11, -8, -8, -11, 7, -16, -28, -6, -3, 9, -23, -3, -17, 3, -9, 22, -6, -19, -14, 13, -3, 13, -12, 7, 12, 7, -21, 10, 19, -22, 2, 16, 19, 12, -8, -18, 24, -10, -5, 21, -10, 2, 6, -13, -2, -3, 11, -24, 4, -2, 5, -11, -16, 3, 13, 7, -30, 18, -5, -17, -26, 24, 7, -9, -6, 24, -15, 12, -1, -7, 13, -22, 2, 8, 1, -3, -17, -18, -15, 5, 3, 8, 3, 15, -14, 6, 14, 13, -8, 6, 8, 18, 20, 4, 1, 6, 3, -18, 14, -4, 11, 15, 15, -2, -7, -11, 27, -22, -1, -7, 0, -19, -2, 2, 3, 9, -2, -26, 15, 14, 1, 8, 8, 21, 1, 14, 9, 20, -2, 16, -23, 13, 11, -11, -24, -6, 10, 11, 6, -9, -10, -11, -11, -34, -14, -1, 21, -19, 6, 9, -16, -4, 9, -7, 30, 10, 5, 5, -3, 8, 5, 24, 11, 8, -1, -19, 8, -1, -18, -13, -21, 4, -22, -1, -3, 20, 5, 5, -4, 11, 14, 14, 8, 17, -11, -20, 20, 4, 17, 7, -15, -10, -3, -4, 19, -3, -37, -16, 7, 15, -8, 4, -3, 0, 5, -15, 7, 6, 2, 20, -7, 4, -20, -14, -5, 9, 17, -6, 0, -29, -16, 20, -18, -1, -6, 3, -3, -7, -18, -24, 6, 8, -14, 3, -20, -14, 6, 3, 10, 9, 11, 25, 8, 24, 27, 11, -20, -10, -3, 22, 12, 0, -25, -20, -7, -14, 1, 11, -22, 2, -14, -18, -3, -19, 10, 27, 3, 15, 10, 13, 1, -18, 22, 16, -22, -11, 10, -5, -11, 6, -6, 7, 28, 15, 1, 7, 16, 13, 3, 12, -19, -2, 17, 18, 10, -5, -1, 7, 6, -19, -31, -12, 9, -11, -20, -12, 18, 8, 11, -12, 38, 12, 23, 3, 4, -15, -10, -17, -3, -7, -24, 21, 11, 2, -10, 11, 12, -8, 3, 8, -1, 8, 14, 0, 24, 18, -4, 19, -3, 12, -10, -15, 22, -4, 7, 13, -31, -6, 12, -19, -3, 14, -3, 10, -6, 13, 28, 10, -14, -6, -8, -2, 21, -8, -13, 10, -4, -16, -4, -18, 11, -21, 14, 15, -35, -14, -1, 9, -19, 0, -5, -1, -22, 24, -5, 3, 2, -19, -2, -22, -13, 3, 31, -5, -4, 10, -1, -25, 7, 22, 1, -16, -17, -18, -9, 14, -5, -30, 15, 17, -5, 19, -6, -1, 14, 5, 24, 9, 6, 13, -1, -19, -10, -8, -9, 2, 3, -8, 14, -14, 10, -7, 9, 35, 4, 20, 18, -7, 12, 4, 22, 2, -4, -30, 20, 21, 18, -6, -12, -19, 2, 3, 6, -10, -26, 4, -6, 1, 0, -9, -9, 2, -2, -8, 28, 6, -10, -1, 10, 22, 8, 9, 10, 4, -25, 14, 7, 6, -4, 9, 16, -10, -23, -7, -14, -27, 6, -14, 11, 3, 4, -12, -1, 17, 5, 0, -11, -16, 12, 3, -24, -11, -37, 8, 23, 20, -8, -7, 13, -6, 10, 14, 4, 2, 6, 25, 12, -10, -14, 18, 13, -12, -8, -19, 2, -7, 11, 3, -22, -19, -12, -14, -19, 14, 11, -4, 8, 1, -22, 16, -12, 20, -13, 8, 4, 33, 5, 14, 2, -50, -9, 1, 7, 24, 8, -1, 0, -20, -4, -12, 4, -2, -15, 8, -1, -2, 9, 7, 30, -6, -6, -15, -8, 5, 5, 6, -32, 13, -39, 6, 33, -14, 26, 4, 16, 11, -29, -7, -19, 3, -16, -21, -18, 12, -3, 5, 11, -4, 10, 6, 7, 0, -22, 26, 28, -28, -13, 15, 2, 4, -5, -4, 1, 7, 1, 3, -35, 2, 37, -22, -9, 17, 8, -9, 17, 11, -15, -15, 21, -6, -12, 6, -29, -4, 18, 5, -8, -15, 6, 14, -2, 8, -1, 26, -2, -18, 10, 9, 0, 7, -15, -19, -12, -11, 14, -22, 8, -13, -15, -22, -6, 12, -24, -1, 9, -35, -7, -1, 14, 7, 13, 0, 16, -4, -33, 29, 13, 11, -18, 10, -2, 4, 31, 5, -9, 7, -1, 0, -6, -21, 4, -22, 14, -15, -7, 19, 13, 16, 32, -5, -20, 41, -27, -23, -30, 15, -20, -21, 13, 15, -18, 8, -24, 5, -1, -2, -6, 19, 13, 5, 19, -2, 1, -10, -9, 16, 9, 5, 13, 12, 11, 7, 2, 5, -22, 28, -2, -12, -10, -11, 25, -8, 9, -42, -15, 13, -7, -9, -12, -13, -4, 5, -24, 8, 20, -6, 8, -7, 14, -2, 9, -10, 15, 4, 1, 21, -6, 12, -16, 4, -16, 0, 22, -4, -13, 1, 7, 16, 16, 3, -18, 6, 12, -17, 2, 1, 5, -7, 6, -29, -12, -12, 14, -17, -30, 13, -16, 21, 16, -3, 26, 28, 33, -1, -6, -3, 10, 0, 11, -3, 7, 19, -15, 14, 7, -10, -14, -6, 13, 3, -18, -1, -20, 23, 4, 25, -1, -8, 6, -8, 21, -22, 13, 7, 7, -8, 13, -27, -29, 3, 3, 5, -5, 3, 2, 4, -6, -26, -4, -15, -12, 9, -10, -8, 1, -2, 5, -10, -4, 19, 6, 5, -17, 25, 0, 9, 5, -6, -5, 18, 3, -1, -6, 15, -14, -3, -7, -11, -3, 9, 2, 13, 28, -27, -5, 14, 15, 1, -18, 18, -13, 22, -14, 5, 8, 32, 3, 23, 14, 2, -11, 16, -7, 1, 30, -3, 4, 5, 7, -15, -2, -15, -10, 8, -15, 3, -15, -5, -1, -2, 12, 1, 1, -12, -11, 13, -5, 10, -17, 6, -15, 2, -17, -11, 5, 1, -12, 26, 5, -19, -4, -9, 6, -19, -7, -3, -26, 23, 9, -2, -15, -4, 24, 6, -1, 0, 12, 21, 2, -14, -5, 1, 21, 18, -24, 34, -1, 0, -11, -15, -6, -3, 8, 32, 0, 1, 6, -11, -1, 8, 23, -24, -18, 0, 0, -4, -17, -16, 14, -2, 6, 13, 19, 9, -27, -1, 1, -1, -1, -15, 1, -5, -24, -18, 3, 19, -25, 6, -18, -13, 28, -6, 21, 6, 34, -30, -31, -4, 16, -4, -4, -5, -14, 7, 16, -17, 33, 12, -9, -7, 0, 2, 20, -23, -4, -26, 3, 12, -7, 5, -20, -15, -9, -16, 17, -34, -1, -15, -8, 2, -36, 1, 0, 5, -10, -5, 12, 8, 21, 2, 10, -12, 11, 5, 17, 29, 16, -2, 6, -25, -23, -15, -12, -5, -20, -1, 2, 18, 3, 6, 38, 24, 12, -5, -6, 0, -1, -20, -7, 10, 2, 35, -1, 9, 17, -8, -1, -9, -6, -18, 31, 27, -6, 8, 13, -6, 15, 16, -29, 17, 15, 17, 22, 3, -22, 10, -6, -18, -11, 5, 0, -8, 2, -19, 13, -10, 1, -9, -5, 22, -5, 1, -12, 9, 9, 10, 18, 2, 20, -25, 7, 30, -1, -23, -9, -10, 20, 3, -1, 15, 26, 17, 18, 2, 19, 5, 4, -9, 6, 32, 26, -11, -21, -29, -12, -18, 9, -7, -6, -23, 4, -13, 26, -21, -23, -3, -13, -34, -6, 15, 0, 11, 1, 6, 4, -7, 23, 8, -10, 7, 22, 20, -15, -1, 33, 12, -13, -13, 4, 3, 7, -10, -34, -4, -13, -6, -4, 2, 5, 8, -26, 17, -8, 26, 21, 11, 3, 28, 5, 28, -3, -9, -13, -7, 6, 21, 3, -11, -2, -15, 33, -22, -9, 22, -13, 0, 19, -35, -2, 15, 12, 2, -11, 13, 9, -27, -10, 14, 18, -26, -7, -13, -9, 9, -5, -17, -1, -14, 1, 1, -5, 32, 18, -7, -22, 4, -1, 1, 3, 11, -10, 7, 0, 10, 5, 8, 17, 22, -9, 0, 12, 9, -10, 11, -10, -37, -2, 22, 2, -7, -40, 4, -23, -20, -24, -32, 7, -5, 4, -5, -15, 2, -33, 5, 16, -24, 9, 2, 29, 14, 8, 18, 8, -1, -18, 21, -4, 0, -31, -3, 6, -8, 3, 12, -11, 1, 3, -17, 7, -23, -16, 3, 18, -17, 1, 18, 13, -3, 25, -30, -5, -20, -13, 21, -3, -4, -13, 14, -25, -1, -16, -11, 13, -23, 5, 21, 6, -1, 6, -5, -9, 6, 16, 3, -13, 0, 10, 15, 5, 8, -11, -28, -24, 10, -24, 18, -4, 5, 2, -9, 7, -21, -6, -4, -12, -13, -16, -17, 11, -6, -15, -11, -18, 17, -8, 11, 24, 19, 12, 7, -3, -8, -1, 23, -17, 14, -29, 2, 10, -32, 1, 24, 8, -3, 40, 1, -9, -20, -13, -29, 10, 10, 12, -1, 5, 12, -27, -6, -15, -33, -25, -7, -14, 5, 4, 18, -6, -10, -3, 10, -14, 8, -9, -3, -10, 4, -3, 27, 10, -7, -17}

#define TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0_DEC_BITS {7}

#define TENSOR_LSTM_LSTM_CELL_BIAS_0 {4, 5, 8, 2, 2, 6, 4, 6, 4, 8, 3, 8, 1, 3, 4, 2, 4, 6, 5, 5, 2, 2, 1, 6, 10, 3, 2, 3, 6, 6, 5, 9, 67, 69, 74, 68, 67, 68, 67, 70, 68, 71, 66, 73, 65, 64, 67, 67, 67, 72, 68, 70, 67, 69, 65, 71, 70, 68, 67, 67, 71, 70, 69, 68, 1, 1, 1, -1, 0, -1, 0, 0, -1, 0, 0, 1, 0, -2, -1, 0, -1, 0, 1, 1, 1, 0, 1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 4, 4, 8, 3, 3, 6, 3, 8, 3, 8, 4, 8, 1, 2, 5, 2, 4, 6, 5, 6, 2, 3, 1, 5, 11, 4, 3, 4, 5, 6, 5, 8}

#define TENSOR_LSTM_LSTM_CELL_BIAS_0_DEC_BITS {6}

#define LSTM_BIAS_LSHIFT {8}

#define LSTM_OUTPUT_RSHIFT {7}

#define TENSOR_DENSE_KERNEL_0 {77, -26, -69, 15, 12, 70, -16, 23, -18, -35, 30, -6, -87, 106, -38, -33, -7, -17, 22, -2, 1, 0, 14, -18, -50, 87, -60, -39, -44, -6, -5, 10, 7, -81, 13, 96, -14, 22, 32, 44, -24, 57, 83, -42, 52, 30, -97, 100, 12, -51, -42, 23, 101, 35, 29, -34, -38, 25, -29, 19, 44, -9, 73, -38, 47, -67, -52, 71, -64, -77, -5, -53, 17, 42, -17, 22, -83, 48, -67, 9, 31, 82, -48, 19, 53, -95, -47, -8, 51, 38, -17, -60, -47, 13, 8, -59, 38, -49, 38, -62, 45, -7, 11, 53, 2, -84, 41, 38, 40, 85, -52, 47, -14, 48, 61, 50, 87, 45, 41, -72, 68, 42, -35, 66, 36, -34, -7, -48, -13, -3, -24, 13, 37, -76, 0, 30, 29, 15, -77, -20, -29, 62, 76, 32, 42, 63, 5, -36, 5, -58, 73, 17, 9, -70, -58, -10, 42, -66, -4, -57, 28, 39, -74, -34, -71, 30, 38, 57, 54, 49, 34, 20, 3, -4, -49, -97, -26, 14, -8, -30, -23, -24, -45, 73, 1, -36, 16, 24, -34, 41, -24, 89, -50, 89, -22, -25, -18, 63, -17, -12, -63, -106, 75, 104, -4, -96, -37, 29, -46, -22, -79, -26, 59, -35, -17, -70, -68, -16, -49, -88, -60, -10, 44, -21, -92, 64, -22, 14, -29, 95, 51, 18, 92, -65, -45, -22, 27, 33, -60, -16, 59, -78, -27, 43, 74, 77, 7, -65, 35, 42, 35, 81, 66, 3, -84, 88, -4, -24, -57, -65, 37, 30, -9, -33, -42, -24, 26, -68, 19, -94, -6, -64, -31, 91, -32, -43, -14, 12, 107, -36, 81, 17, 70, -26, 48, 22, 86, -35, 60, -66, -49, 78, 1, 33, 7, 7, 41, -38, -7, 16, 10, -60, -14, -40, -21, -14, 0, 65, -57, -27, 45, 79, 56, 39, 10, -59, -94, -40, -41, -64, -81, -30, 30, -61, 25, 57, -38, 23, 55, -25, -32, 21, 89, 86, -32, -93, -51, 10, 70, 71, -72, 25, 43, 62, 1, -41, 59, 63, -69, -34, 32, 35, -111, 13, -31, -96, -37, -39, 48, 27, 84, -31, 28, 78, 73, 52, 2, 71, -60, -28, 30, -33, -14, 69, -38, -21, -1, -82, -69, 63, 73, 14, -22, -77, -69, -60, -63, -37, -75, -43, -3, -14, -58, -91, 51, -30, -51, -61, -29, 47, 45, -44, -62, 21, -1, 95, -31, -85, 37, 17, 18, -52, 36, 19, 17, 84, -64, -91, -5, 86, -98, 82, 71, -76, 33, -47, -43, -13, 1, 21, 48, 35, -20, 58, 111, -63, -37, 30, 37, 72, -15, -30, 18, 33, -85, 8, 86, 63, -10, 38, -60, 26, -8, 78, -80, 36, -47, 49, 2, 35, 58, 17, -35, 30, 69, 48, -16, -37, 19, -12, 78, -41, 66, -64, -43, 41, -45, 23, -53, -38, -39, -53, -5, -96, 26, -56, -61, 50, 73, 13, 2, 73, -10, 71, 1, 40, 21, 67, 8, 34, -8, 32, 93, -16, 1, 13, -69, 16, -75, -26, -26, -56, -4, 1, -73, 6, 34, -26, 22, 47, -88, -36, 50, -38, -49, -100, -87, 22, 50, -32, -1, -32, -70, 53, 14, -93, 12, -75, -7, -64, -80, 17, 60, 34, -53, -42, -79, 20, 2, -67, 27, -46, -44, 7, -23, 13, -43, -110, 63, -80, 75, 17, 91, -49, 27, -19, 56, 60, 54, 82, -78, -8, 81, 48, -25, 47, -35, 55, 32, 98, 89, 80, -18, 58, 57, -92, -41, -20, 73, -110, 64, 65, -35, 33, -23, -42, -57, -43, -49, -66, 8, -55, -59, 15, -4, -73, -23, -35, -51, 112, -72, 28, -42, 72, -11, 8, 65, 57, 28, 58, 71, 41, 16, 10, 22, 45, -51, -3, -62, -23, -42, 71, 15, 38, -16, -13, 94, 43, -5, -19, 29, 71, 8, 33, 6, 37, -14, -80, 96, 63, 2, 61, -1, -66, 46, 53, -46, -19, 45, 49, 32, -2, -57, -24, 44, -55, 77, 58, -57, 7, -11, 64, -31, 42, -73, -26, 61, 99, 0, 0, 87, 58, 48, 83, 92, 65, 41, 96, -7, 42, 42, 54, 60, -78, 19, 51, 11, 55, -71, 12, 7, -73, -32, -47, 61, -81, 57, 28, 46, 34, 18, 41, -4, -8, 67, -65, -27, 94, -52, -16, -60, -43, -38, -23, -88, -35, 48, 26, 16, 68, -56, 61, -2, -66, 36, -8, 5, -67, -45, -28, -30, 9, -8, 2, -7, -34, -97, -97, 42, 4, -6, -75, -45, -46, -76, -27, -13, 9, -59, -70, -52, -41, -32, -80, 80, -39, 8, 41, -66, 52, -41, -61, -17, 12, 61, 87, 32, 59, -35, 6, 42, 28, 62, -15, 93, 40, -14, 59, 119, 85, -55, -75, -56, 38, 48, 86, 39, -72, -20, 36, -42, 28, -64, -67, 56, 66, -107, 19, -82, 55, -50, -61, -93, 12, -15, -66, -67, -32, -24, 29, 14, 37, 106, 3, -28, 68, -56, -80, -40, -9, -4, -47, 108, 69, 37, 77, 98, 83, 35, 60, -40, 69, 73, -51, 6, -35, -39, 68, -41, -52, -24, 33, 14, 35, 44, 0, 43, -69, 2, 68, -86, 77, -19, 8, 21, -20, -52, -12, 73, 14, 65, -37, -34, -30, 84, -5, 4, -55, 68, -12, 36, 25, 73, 22, -65, -19, 18, -31, -8, 61, -31, -66, -85, -53, 51, -46, 76, 91, 54, 50, 75, 21, -35, -45, 56, -89, -96, 33, -54, -13, -13, -17, -50, -60, 12, -12, 41, 59, -50, -32, -76, 14, 76, 2, 10, -2, 27, 42, 32, 55, 34, -41, 18, -9, -3, -48, -52, -4, -30, 88, -13, 95, 42, -58, 21, -9, 60, 65, 48, 24, 83, -74, 42, -35, -41, -96, -34, 49, 6, -55, -53, 47, -36, 90, -79, -41, 16, 59, -20, 52, -33, -45, 58, 24, -50, 61, -6, 12, -58, -33, -8, 4, -51, -21, 50, -5, 43, -43, -49, -38, -55, -80, 17, -106, 78, -79, 66, -55, -33, 12, -54, 60, -22, -27, -41, 4, -41, -67, -6, 30, 43, -40, 22, -44, 7, 44, 46, 6, -57, -42, -50, -10, -5, 55}

#define TENSOR_DENSE_KERNEL_0_DEC_BITS {8}

#define TENSOR_DENSE_BIAS_0 {20, -57, -34, 38, 36, 64, -80, 5, -45, -36, 30, -33, -18, -32, -32, -1, -17, 20, 80, 30, 33, 6, 18, 3, 39, -1, 22, 30, 18, -25, -42, 70}

#define TENSOR_DENSE_BIAS_0_DEC_BITS {10}

#define DENSE_BIAS_LSHIFT {5}

#define DENSE_OUTPUT_RSHIFT {10}

#define TENSOR_DENSE_1_KERNEL_0 {67, 19, 15, -33, -15, 67, 59, -62, -5, 47, 3, 25, 70, 20, 28, 9, -24, 98, -33, 3, -11, -38, -93, 46, -66, 63, 54, -9, -12, -41, 72, -48, -43, 40, 67, 96, -75, -6, -55, 70, 42, 32, -1, -13, 40, -49, 25, -70, 33, -68, -23, 11, 81, 84, 73, 42, 69, -4, -57, -73, -50, 45, 48, 22, 65, 17, 17, 32, -75, -12, -15, 35, -11, -118, 78, -88, -14, -22, 10, -114, 42, 76, 48, 41, -58, -59, -47, 15, 57, 23, 39, 15, -13, 50, -27, 17, 41, -35, 84, -39, 76, -51, 114, -107, 55, -16, 65, 71, -60, -3, -21, -81, -17, 12, 8, -24, 69, -31, 59, -18, 77, -19, -28, 74, -32, 61, -73, -51, -29, -54, 56, -17, -4, -6, -2, -68, -87, 71, 68, -27, -6, -73, 38, 88, 54, -55, 6, -3, 57, 61, -10, 65, 44, -92, 25, 30, -40, -61, -92, 99, 37, -49, 40, 21, 96, -31, 8, -14, -73, 32, 5, -12, -65, -28, -35, 6, 20, -33, -51, 80, 8, -50, -63, 22, -80, 49, 29, 2, -54, -78, -34, -15, 21, 34, 31, -86, 2, -104, 73, 58, -58, -85, 42, -99, -9, -4, -65, -38, 62, 10, 35, -79, -28, 66, 72, 65, 42, 80, 45, -67, 3, -17, -1, -2, 79, -33, -32, -102, -37, 5, 44, -35, -63, -59, 19, -34, 93, -24, 14, -47, -21, -12, -23, 74, 52, -42, -43, -82, -51, 56, -71, 31, 47, -5, -32, 44, 0, 16, 24, 60, 51, -77, -83, 25, -18, 63, 39, -18, 56, -77, -32, -4, -25, -6, 10, 38, 40, -17, -59, 8, -98, -85, -66, 0, 1, 89, 82, -45, 15, 28, 26, 32, 11, -62, 4, 88, -48, -45, 2, 66, 53, -34, -96, 25, 26, 81, -70, -10, 20, 36, 45, -14, -66, 63, 35, 10, -85, -14, 36, 70, -56, -57, 66, 16, 59, -37, -53, 72, -21, -14, -128, -11, 108, 88, -8, 90, 73, -42, -70, 10, 53, 55, -24, 61, 65, 48, 60, -13, 33, 49, -78, 51, -21, -36, -57, 51, 84, 95, 99, 14, 41, -25, -10, -15, -83, 70, 80, 12, 46, 11, 8, -46, 64, -18, -92, 71, -22, -48, -4, -44, -48, -23, 69, 85, 65, 0, 72, 37, -12, 21, -56, 4, -61, -10, -52, 82, 48, -43, -26, 31, -49, 72, 27, 80, 50, 75, 39, 60, 1, 63, -68, -20, -41, -42, 4, -98, 66, -30, -7, -15, 92, 61, 11, 15, 27, 57, 22, -15, 55, -2, 25, -14, -13, -71, -30, 29, -12, -10, 28, -55, -7, -27, 26, -37, -10, 18, 85, -34, 75, -34, -32, 15, 53, -63, -56, 77, -12, -3, -96, -31, -96, -83, -18, -4, 26, 20, -51, 24, 49, 53, 4, 32, 26, -5, 106, -78, 49, 38, 51, 65, 55, -89, -85, -69, -80, -35, 30, 70, -18, -66, 5, -29, 27, 67, 70, -26, 72, -9, 61, -32, 78, -20, -16, -13, 36, -31, -25, 11, -11, 66, -17, -23, 66, 74, -37, 44, 53, 5, 39, -33, -61, 24, 74, -41, -16, -82, 48, -27, 36, 41, -94, 34, -13, 47, 72, -42, 80, -70, -49, -48, 43, -13, -46, -30, -49, 17, 21, -8, 24, -8, -77, -12, -82, -37, 28, -40, 13, -48, 60, -26, -98, -39, -38, -1, 74, 37, 82, -24, -58, 24, -29, -73, 3, -27, -57, 39, -37, -8, 93, -94, -20, 27, 12, 98, 54, -43, 49, -76, 72, -49, 101, 16, 81, 66, 32, 44, -73, 34, -56, 47, 14, 24, -33, 35, -80, 1, -98, 66, 11, -71, -68, -77, 79, -106, -16, -68, -26, -71, 2, -1, -72, -59, -39, -43, 49, -23, -33, 23, 10, -27, -46, -58, -8, -64, 5, -82, -82, 27, -2, 24, -80, 7, -59, -19, -66, -52, -55, 58, 78, -80, 58, 25, 39, 47, -69, -50, -14, 29, 40, -75, -87, -83, 110, 43, -21, -19, -50, 88, -89, -5, -34, 22, 64, -59, -69, -47, 80, 27, 30, -53, -14, 1, -82, -16, 43, 100, 17, 57, -54, -74, 18, -81, 111, -30, 45, 67, 35, -74, -35, 27, 76, 33, -78, 44, 57, -21, -32, 13, 12, -20, -64, -99, -74, 61, -9, -23, -39, -87, 54, -46, -23, 3, -78, -43, 28, 3, -21, 16, -3, -59, -59, -102, -52, 35, -54, -50, -98, -59, -108, 64, -61, -58, -11, -10, -64, 24, -20, 29, -36, -75, -6, 32, 13, -43, -6, -102, -60, -79, 17, 52, -51, -72, -9, -23, 49, -85, -90, -72, 43, 63, 75, -45, -50, 1, 65, -13, 78, -27, 30, -80, -62, -35, -31, -48, 14, -75, 27, 55, -39, 45, 24, 34, -68, -2, -54, -41, 12, 75, 10, -5, 33, -75, -39, -21, -29, -35, -12, -72, 58, -64, 61, -77, -18, 8, -34, 27, -30, 3, -30, 28, -34, 28, 26, -26, -67, -40, 87, 29, 14, 39, -39, 76, 104, -40, 52, 2, 24, 88, 47, 45, 46, 40, 77, -33, -36, 30, 43, -37, -28, -53, 77, 10, 69, 23, -36, -8, -62, -3, -43, 35, -29, 34, -60, -40, -41, 47, -21, 7, 43, 62, 85, 62, 47, -8, -1, -48, -84, 68, 35, 8, -39, 1, 51, 53, -72, -2, -66, 1, 17, -37, 42, 36, -18, 92, -77, -58, -60, -33, 24, -3, 71, -25, 50, 4, 23, 54, -40, 61, -72, -57, -10, -33, 45, 41, -44, 78, -44, -36, 43, -69, 43, 10, 27, -61, -100, 54, -6, 81, 6, 12, -15, 42, 100, -48, 64, -42, 39, 28, -84, -67, 37, 73, 103, -64, -2, 48, -74, 60, 77, 86, 53, -19, 50, 0, 42, -49, -72, 80, 23, -61, -23, -83, 60, -46, 86, 49, 30, 54, -75, 35, 20, -15, 12, 119, 9, 95, -74, 26, 5, 12, -24, -65, -8, 19, -13, 90, -11, 56, 25, 46, 28, -104, 28, -19, -92, -3, -61, 93, 44, 74, -71, -51, -8, -56, 31, 13, 26, 62, 68, 49, -74, 44, -71, -64, 106, 65, -55, 83, 34, -21, 27, -100, 78, -63}

#define TENSOR_DENSE_1_KERNEL_0_DEC_BITS {8}

#define TENSOR_DENSE_1_BIAS_0 {-34, 60, -19, -81, 119, -74, -9, 88, -13, -51, 94, 42, -9, 0, -1, 15, 56, 9, -39, 45, -12, 97, -78, -61, -79, -4, -3, 17, -14, 21, -87, 20}

#define TENSOR_DENSE_1_BIAS_0_DEC_BITS {11}

#define DENSE_1_BIAS_LSHIFT {2}

#define DENSE_1_OUTPUT_RSHIFT {9}

#define TENSOR_DENSE_2_KERNEL_0 {-31, -14, -12, -32, -20, -36, -12, -49, -31, -49, -12, -17, -36, 57, -67, -7, -19, -48, -44, 11, 13, 18, -35, 60, 42, 20, -4, -46, -48, 22, 7, 35, -26, -19, -17, -65, -41, 8, 60, -36, 15, -3, -26, 32, -29, -17, 57, 25, -50, -3, -33, 44, -48, 4, -4, 39, 26, -45, -44, 12, -21, 26, -6, 1, -44, -36, 54, 43, 17, 59, 37, 7, 47, 20, -20, -13, 18, 38, -18, 35, -14, -39, 32, 25, -44, -13, -53, -31, 14, -65, 52, 25, 37, 32, -25, -15, -1, 49, 47, -47, -2, -20, 8, -42, 29, 15, -20, 34, 19, 18, 44, -37, 46, -24, -27, 60, -2, 35, -39, -27, -33, -21, 21, -47, -36, 44, 13, -68}

#define TENSOR_DENSE_2_KERNEL_0_DEC_BITS {7}

#define TENSOR_DENSE_2_BIAS_0 {-27, -69, 83, 29}

#define TENSOR_DENSE_2_BIAS_0_DEC_BITS {11}

#define DENSE_2_BIAS_LSHIFT {0}

#define DENSE_2_OUTPUT_RSHIFT {8}


/* output q format for each layer */
#define INPUT_1_OUTPUT_DEC 7
#define INPUT_1_OUTPUT_OFFSET 0
#define LSTM_OUTPUT_DEC 7
#define LSTM_OUTPUT_OFFSET 0
#define DENSE_OUTPUT_DEC 5
#define DENSE_OUTPUT_OFFSET 0
#define DENSE_1_OUTPUT_DEC 4
#define DENSE_1_OUTPUT_OFFSET 0
#define DENSE_2_OUTPUT_DEC 3
#define DENSE_2_OUTPUT_OFFSET 0
#define SOFTMAX_OUTPUT_DEC 7
#define SOFTMAX_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[390] = {0};

const nnom_shape_data_t tensor_input_1_dim[] = {65, 6};
const nnom_qformat_param_t tensor_input_1_dec[] = {7};
const nnom_qformat_param_t tensor_input_1_offset[] = {0};
const nnom_tensor_t tensor_input_1 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_input_1_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_input_1_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_input_1_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};

const nnom_io_config_t input_1_config = {
    .super = {.name = "input_1"},
    .tensor = (nnom_tensor_t*)&tensor_input_1
};
const int8_t tensor_lstm_lstm_cell_kernel_0_data[] = TENSOR_LSTM_LSTM_CELL_KERNEL_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_kernel_0_dim[] = {6, 128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_kernel_0_dec[] = TENSOR_LSTM_LSTM_CELL_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_kernel_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_lstm_lstm_cell_recurrent_kernel_0_data[] = TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_recurrent_kernel_0_dim[] = {32, 128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_recurrent_kernel_0_dec[] = TENSOR_LSTM_LSTM_CELL_RECURRENT_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_recurrent_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_recurrent_kernel_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_recurrent_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_recurrent_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_lstm_lstm_cell_bias_0_data[] = TENSOR_LSTM_LSTM_CELL_BIAS_0;

const nnom_shape_data_t tensor_lstm_lstm_cell_bias_0_dim[] = {128};
const nnom_qformat_param_t tensor_lstm_lstm_cell_bias_0_dec[] = TENSOR_LSTM_LSTM_CELL_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_lstm_lstm_cell_bias_0_offset[] = {0};
const nnom_tensor_t tensor_lstm_lstm_cell_bias_0 = {
    .p_data = (void*)tensor_lstm_lstm_cell_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_lstm_lstm_cell_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_lstm_lstm_cell_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_lstm_cell_config_t lstm_lstm_cell_config = {
    .super = {.name = "lstm"},
    .weights = (nnom_tensor_t*)&tensor_lstm_lstm_cell_kernel_0,
    .recurrent_weights = (nnom_tensor_t*)&tensor_lstm_lstm_cell_recurrent_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_lstm_lstm_cell_bias_0,
    .q_dec_z = 5,
    .q_dec_h = 7,
    .q_dec_c = 4,
    .units = 32
};

const nnom_rnn_config_t lstm_config = {
    .super = {.name = "lstm"},
    .return_sequence = false,
    .stateful = false,
    .go_backwards = false
};
const int8_t tensor_dense_kernel_0_data[] = TENSOR_DENSE_KERNEL_0;

const nnom_shape_data_t tensor_dense_kernel_0_dim[] = {32, 32};
const nnom_qformat_param_t tensor_dense_kernel_0_dec[] = TENSOR_DENSE_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_kernel_0 = {
    .p_data = (void*)tensor_dense_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_bias_0_data[] = TENSOR_DENSE_BIAS_0;

const nnom_shape_data_t tensor_dense_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_dense_bias_0_dec[] = TENSOR_DENSE_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_bias_0 = {
    .p_data = (void*)tensor_dense_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_output_shift[] = DENSE_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_bias_shift[] = DENSE_BIAS_LSHIFT;
const nnom_dense_config_t dense_config = {
    .super = {.name = "dense"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_bias_shift
};
const int8_t tensor_dense_1_kernel_0_data[] = TENSOR_DENSE_1_KERNEL_0;

const nnom_shape_data_t tensor_dense_1_kernel_0_dim[] = {32, 32};
const nnom_qformat_param_t tensor_dense_1_kernel_0_dec[] = TENSOR_DENSE_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_kernel_0 = {
    .p_data = (void*)tensor_dense_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_1_bias_0_data[] = TENSOR_DENSE_1_BIAS_0;

const nnom_shape_data_t tensor_dense_1_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_dense_1_bias_0_dec[] = TENSOR_DENSE_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_bias_0 = {
    .p_data = (void*)tensor_dense_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_1_output_shift[] = DENSE_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_1_bias_shift[] = DENSE_1_BIAS_LSHIFT;
const nnom_dense_config_t dense_1_config = {
    .super = {.name = "dense_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_1_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_1_bias_shift
};
const int8_t tensor_dense_2_kernel_0_data[] = TENSOR_DENSE_2_KERNEL_0;

const nnom_shape_data_t tensor_dense_2_kernel_0_dim[] = {32, 4};
const nnom_qformat_param_t tensor_dense_2_kernel_0_dec[] = TENSOR_DENSE_2_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_2_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_2_kernel_0 = {
    .p_data = (void*)tensor_dense_2_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_2_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_2_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_2_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_2_bias_0_data[] = TENSOR_DENSE_2_BIAS_0;

const nnom_shape_data_t tensor_dense_2_bias_0_dim[] = {4};
const nnom_qformat_param_t tensor_dense_2_bias_0_dec[] = TENSOR_DENSE_2_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_2_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_2_bias_0 = {
    .p_data = (void*)tensor_dense_2_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_2_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_2_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_2_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_2_output_shift[] = DENSE_2_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_2_bias_shift[] = DENSE_2_BIAS_LSHIFT;
const nnom_dense_config_t dense_2_config = {
    .super = {.name = "dense_2"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_2_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_2_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_2_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_2_bias_shift
};

const nnom_softmax_config_t softmax_config = {
    .super = {.name = "softmax"}
};
static int8_t nnom_output_data[4] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {4};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[7];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&input_1_config);
	layer[1] = model.hook(rnn_s(lstm_cell_s(&lstm_lstm_cell_config), &lstm_config), layer[0]);
	layer[2] = model.hook(dense_s(&dense_config), layer[1]);
	layer[3] = model.hook(dense_s(&dense_1_config), layer[2]);
	layer[4] = model.hook(dense_s(&dense_2_config), layer[3]);
	layer[5] = model.hook(softmax_s(&softmax_config), layer[4]);
	layer[6] = model.hook(output_s(&output0_config), layer[5]);
	model_compile(&model, layer[0], layer[6]);
	return &model;
}
